'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.1433
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("DB_NoSaziDataSet"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class DB_NoSaziDataSet
    Inherits Global.System.Data.DataSet
    
    Private tableDFNs As DFNsDataTable
    
    Private tableTbl_Moshakhasat_Zamin As Tbl_Moshakhasat_ZaminDataTable
    
    Private tableTblDFN_Gheymat As TblDFN_GheymatDataTable
    
    Private tableTblDFN_Block As TblDFN_BlockDataTable
    
    Private tableTblDFN_SAL As TblDFN_SALDataTable
    
    Private tableSelect_DFNs As Select_DFNsDataTable
    
    Private tableSelect_Sal_Gheymat_All As Select_Sal_Gheymat_AllDataTable
    
    Private tableFSelect_Calc As FSelect_CalcDataTable
    
    Private tableFSelect_Calc_Sal As FSelect_Calc_SalDataTable
    
    Private tableFSelect_Sal As FSelect_SalDataTable
    
    Private tableFSelect_Sal_Gheymat As FSelect_Sal_GheymatDataTable
    
    Private tableFSelect_Sal_Gheymat_All As FSelect_Sal_Gheymat_AllDataTable
    
    Private tableFSelect_Tbl_Moshakhasat_Malekin As FSelect_Tbl_Moshakhasat_MalekinDataTable
    
    Private tableTbl_Moshakhasat_Malekin As Tbl_Moshakhasat_MalekinDataTable
    
    Private tableSelect_Tbl_Moshakhasat_Malekin As Select_Tbl_Moshakhasat_MalekinDataTable
    
    Private tableTbl_Mahiyat_Fiziki As Tbl_Mahiyat_FizikiDataTable
    
    Private tableSelect_Tbl_Mahiyat_Fiziki As Select_Tbl_Mahiyat_FizikiDataTable
    
    Private tableTbl_No_Estefadeh As Tbl_No_EstefadehDataTable
    
    Private tableTAmlak As TAmlakDataTable
    
    Private tableTbl_Moshakhasat_Zamin1 As Tbl_Moshakhasat_Zamin1DataTable
    
    Private tableTbl_Moshakhasat_Zamin2 As Tbl_Moshakhasat_Zamin2DataTable
    
    Private tableSelect_Tbl_Moshakhasat_Zamin As Select_Tbl_Moshakhasat_ZaminDataTable
    
    Private tableFSelect_Tbl_Moshakhasat_Zamin As FSelect_Tbl_Moshakhasat_ZaminDataTable
    
    Private tableSelect_Tbl_No_Estefadeh As Select_Tbl_No_EstefadehDataTable
    
    Private tableSelect_TBL_Amlak_Mostaghelat As Select_TBL_Amlak_MostaghelatDataTable
    
    Private tableFSelect_TBL_Amlak_Mostaghelat As FSelect_TBL_Amlak_MostaghelatDataTable
    
    Private tableTbl_Amlak_Mostaghelat As Tbl_Amlak_MostaghelatDataTable
    
    Private tableSelect_Tbl_Derakht As Select_Tbl_DerakhtDataTable
    
    Private tableTbl_Moshakhasat_Sakhteman As Tbl_Moshakhasat_SakhtemanDataTable
    
    Private tableSelect_Tbl_Moshakhasat_Sakhteman As Select_Tbl_Moshakhasat_SakhtemanDataTable
    
    Private tableSelect_Tbl_Eshterak As Select_Tbl_EshterakDataTable
    
    Private tableSelect_Tbl_Afrad_Momayezi As Select_Tbl_Afrad_MomayeziDataTable
    
    Private tableSelect_Tbl_Momayezi As Select_Tbl_MomayeziDataTable
    
    Private tableSelect_DFN_BLOCK As Select_DFN_BLOCKDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("DFNs")) Is Nothing) Then
                MyBase.Tables.Add(New DFNsDataTable(ds.Tables("DFNs")))
            End If
            If (Not (ds.Tables("Tbl_Moshakhasat_Zamin")) Is Nothing) Then
                MyBase.Tables.Add(New Tbl_Moshakhasat_ZaminDataTable(ds.Tables("Tbl_Moshakhasat_Zamin")))
            End If
            If (Not (ds.Tables("TblDFN_Gheymat")) Is Nothing) Then
                MyBase.Tables.Add(New TblDFN_GheymatDataTable(ds.Tables("TblDFN_Gheymat")))
            End If
            If (Not (ds.Tables("TblDFN_Block")) Is Nothing) Then
                MyBase.Tables.Add(New TblDFN_BlockDataTable(ds.Tables("TblDFN_Block")))
            End If
            If (Not (ds.Tables("TblDFN_SAL")) Is Nothing) Then
                MyBase.Tables.Add(New TblDFN_SALDataTable(ds.Tables("TblDFN_SAL")))
            End If
            If (Not (ds.Tables("Select_DFNs")) Is Nothing) Then
                MyBase.Tables.Add(New Select_DFNsDataTable(ds.Tables("Select_DFNs")))
            End If
            If (Not (ds.Tables("Select_Sal_Gheymat_All")) Is Nothing) Then
                MyBase.Tables.Add(New Select_Sal_Gheymat_AllDataTable(ds.Tables("Select_Sal_Gheymat_All")))
            End If
            If (Not (ds.Tables("FSelect_Calc")) Is Nothing) Then
                MyBase.Tables.Add(New FSelect_CalcDataTable(ds.Tables("FSelect_Calc")))
            End If
            If (Not (ds.Tables("FSelect_Calc_Sal")) Is Nothing) Then
                MyBase.Tables.Add(New FSelect_Calc_SalDataTable(ds.Tables("FSelect_Calc_Sal")))
            End If
            If (Not (ds.Tables("FSelect_Sal")) Is Nothing) Then
                MyBase.Tables.Add(New FSelect_SalDataTable(ds.Tables("FSelect_Sal")))
            End If
            If (Not (ds.Tables("FSelect_Sal_Gheymat")) Is Nothing) Then
                MyBase.Tables.Add(New FSelect_Sal_GheymatDataTable(ds.Tables("FSelect_Sal_Gheymat")))
            End If
            If (Not (ds.Tables("FSelect_Sal_Gheymat_All")) Is Nothing) Then
                MyBase.Tables.Add(New FSelect_Sal_Gheymat_AllDataTable(ds.Tables("FSelect_Sal_Gheymat_All")))
            End If
            If (Not (ds.Tables("FSelect_Tbl_Moshakhasat_Malekin")) Is Nothing) Then
                MyBase.Tables.Add(New FSelect_Tbl_Moshakhasat_MalekinDataTable(ds.Tables("FSelect_Tbl_Moshakhasat_Malekin")))
            End If
            If (Not (ds.Tables("Tbl_Moshakhasat_Malekin")) Is Nothing) Then
                MyBase.Tables.Add(New Tbl_Moshakhasat_MalekinDataTable(ds.Tables("Tbl_Moshakhasat_Malekin")))
            End If
            If (Not (ds.Tables("Select_Tbl_Moshakhasat_Malekin")) Is Nothing) Then
                MyBase.Tables.Add(New Select_Tbl_Moshakhasat_MalekinDataTable(ds.Tables("Select_Tbl_Moshakhasat_Malekin")))
            End If
            If (Not (ds.Tables("Tbl_Mahiyat_Fiziki")) Is Nothing) Then
                MyBase.Tables.Add(New Tbl_Mahiyat_FizikiDataTable(ds.Tables("Tbl_Mahiyat_Fiziki")))
            End If
            If (Not (ds.Tables("Select_Tbl_Mahiyat_Fiziki")) Is Nothing) Then
                MyBase.Tables.Add(New Select_Tbl_Mahiyat_FizikiDataTable(ds.Tables("Select_Tbl_Mahiyat_Fiziki")))
            End If
            If (Not (ds.Tables("Tbl_No_Estefadeh")) Is Nothing) Then
                MyBase.Tables.Add(New Tbl_No_EstefadehDataTable(ds.Tables("Tbl_No_Estefadeh")))
            End If
            If (Not (ds.Tables("TAmlak")) Is Nothing) Then
                MyBase.Tables.Add(New TAmlakDataTable(ds.Tables("TAmlak")))
            End If
            If (Not (ds.Tables("Tbl_Moshakhasat_Zamin1")) Is Nothing) Then
                MyBase.Tables.Add(New Tbl_Moshakhasat_Zamin1DataTable(ds.Tables("Tbl_Moshakhasat_Zamin1")))
            End If
            If (Not (ds.Tables("Tbl_Moshakhasat_Zamin2")) Is Nothing) Then
                MyBase.Tables.Add(New Tbl_Moshakhasat_Zamin2DataTable(ds.Tables("Tbl_Moshakhasat_Zamin2")))
            End If
            If (Not (ds.Tables("Select_Tbl_Moshakhasat_Zamin")) Is Nothing) Then
                MyBase.Tables.Add(New Select_Tbl_Moshakhasat_ZaminDataTable(ds.Tables("Select_Tbl_Moshakhasat_Zamin")))
            End If
            If (Not (ds.Tables("FSelect_Tbl_Moshakhasat_Zamin")) Is Nothing) Then
                MyBase.Tables.Add(New FSelect_Tbl_Moshakhasat_ZaminDataTable(ds.Tables("FSelect_Tbl_Moshakhasat_Zamin")))
            End If
            If (Not (ds.Tables("Select_Tbl_No_Estefadeh")) Is Nothing) Then
                MyBase.Tables.Add(New Select_Tbl_No_EstefadehDataTable(ds.Tables("Select_Tbl_No_Estefadeh")))
            End If
            If (Not (ds.Tables("Select_TBL_Amlak_Mostaghelat")) Is Nothing) Then
                MyBase.Tables.Add(New Select_TBL_Amlak_MostaghelatDataTable(ds.Tables("Select_TBL_Amlak_Mostaghelat")))
            End If
            If (Not (ds.Tables("FSelect_TBL_Amlak_Mostaghelat")) Is Nothing) Then
                MyBase.Tables.Add(New FSelect_TBL_Amlak_MostaghelatDataTable(ds.Tables("FSelect_TBL_Amlak_Mostaghelat")))
            End If
            If (Not (ds.Tables("Tbl_Amlak_Mostaghelat")) Is Nothing) Then
                MyBase.Tables.Add(New Tbl_Amlak_MostaghelatDataTable(ds.Tables("Tbl_Amlak_Mostaghelat")))
            End If
            If (Not (ds.Tables("Select_Tbl_Derakht")) Is Nothing) Then
                MyBase.Tables.Add(New Select_Tbl_DerakhtDataTable(ds.Tables("Select_Tbl_Derakht")))
            End If
            If (Not (ds.Tables("Tbl_Moshakhasat_Sakhteman")) Is Nothing) Then
                MyBase.Tables.Add(New Tbl_Moshakhasat_SakhtemanDataTable(ds.Tables("Tbl_Moshakhasat_Sakhteman")))
            End If
            If (Not (ds.Tables("Select_Tbl_Moshakhasat_Sakhteman")) Is Nothing) Then
                MyBase.Tables.Add(New Select_Tbl_Moshakhasat_SakhtemanDataTable(ds.Tables("Select_Tbl_Moshakhasat_Sakhteman")))
            End If
            If (Not (ds.Tables("Select_Tbl_Eshterak")) Is Nothing) Then
                MyBase.Tables.Add(New Select_Tbl_EshterakDataTable(ds.Tables("Select_Tbl_Eshterak")))
            End If
            If (Not (ds.Tables("Select_Tbl_Afrad_Momayezi")) Is Nothing) Then
                MyBase.Tables.Add(New Select_Tbl_Afrad_MomayeziDataTable(ds.Tables("Select_Tbl_Afrad_Momayezi")))
            End If
            If (Not (ds.Tables("Select_Tbl_Momayezi")) Is Nothing) Then
                MyBase.Tables.Add(New Select_Tbl_MomayeziDataTable(ds.Tables("Select_Tbl_Momayezi")))
            End If
            If (Not (ds.Tables("Select_DFN_BLOCK")) Is Nothing) Then
                MyBase.Tables.Add(New Select_DFN_BLOCKDataTable(ds.Tables("Select_DFN_BLOCK")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property DFNs() As DFNsDataTable
        Get
            Return Me.tableDFNs
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Tbl_Moshakhasat_Zamin() As Tbl_Moshakhasat_ZaminDataTable
        Get
            Return Me.tableTbl_Moshakhasat_Zamin
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TblDFN_Gheymat() As TblDFN_GheymatDataTable
        Get
            Return Me.tableTblDFN_Gheymat
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TblDFN_Block() As TblDFN_BlockDataTable
        Get
            Return Me.tableTblDFN_Block
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TblDFN_SAL() As TblDFN_SALDataTable
        Get
            Return Me.tableTblDFN_SAL
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Select_DFNs() As Select_DFNsDataTable
        Get
            Return Me.tableSelect_DFNs
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Select_Sal_Gheymat_All() As Select_Sal_Gheymat_AllDataTable
        Get
            Return Me.tableSelect_Sal_Gheymat_All
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property FSelect_Calc() As FSelect_CalcDataTable
        Get
            Return Me.tableFSelect_Calc
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property FSelect_Calc_Sal() As FSelect_Calc_SalDataTable
        Get
            Return Me.tableFSelect_Calc_Sal
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property FSelect_Sal() As FSelect_SalDataTable
        Get
            Return Me.tableFSelect_Sal
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property FSelect_Sal_Gheymat() As FSelect_Sal_GheymatDataTable
        Get
            Return Me.tableFSelect_Sal_Gheymat
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property FSelect_Sal_Gheymat_All() As FSelect_Sal_Gheymat_AllDataTable
        Get
            Return Me.tableFSelect_Sal_Gheymat_All
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property FSelect_Tbl_Moshakhasat_Malekin() As FSelect_Tbl_Moshakhasat_MalekinDataTable
        Get
            Return Me.tableFSelect_Tbl_Moshakhasat_Malekin
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Tbl_Moshakhasat_Malekin() As Tbl_Moshakhasat_MalekinDataTable
        Get
            Return Me.tableTbl_Moshakhasat_Malekin
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Select_Tbl_Moshakhasat_Malekin() As Select_Tbl_Moshakhasat_MalekinDataTable
        Get
            Return Me.tableSelect_Tbl_Moshakhasat_Malekin
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Tbl_Mahiyat_Fiziki() As Tbl_Mahiyat_FizikiDataTable
        Get
            Return Me.tableTbl_Mahiyat_Fiziki
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Select_Tbl_Mahiyat_Fiziki() As Select_Tbl_Mahiyat_FizikiDataTable
        Get
            Return Me.tableSelect_Tbl_Mahiyat_Fiziki
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Tbl_No_Estefadeh() As Tbl_No_EstefadehDataTable
        Get
            Return Me.tableTbl_No_Estefadeh
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TAmlak() As TAmlakDataTable
        Get
            Return Me.tableTAmlak
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Tbl_Moshakhasat_Zamin1() As Tbl_Moshakhasat_Zamin1DataTable
        Get
            Return Me.tableTbl_Moshakhasat_Zamin1
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Tbl_Moshakhasat_Zamin2() As Tbl_Moshakhasat_Zamin2DataTable
        Get
            Return Me.tableTbl_Moshakhasat_Zamin2
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Select_Tbl_Moshakhasat_Zamin() As Select_Tbl_Moshakhasat_ZaminDataTable
        Get
            Return Me.tableSelect_Tbl_Moshakhasat_Zamin
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property FSelect_Tbl_Moshakhasat_Zamin() As FSelect_Tbl_Moshakhasat_ZaminDataTable
        Get
            Return Me.tableFSelect_Tbl_Moshakhasat_Zamin
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Select_Tbl_No_Estefadeh() As Select_Tbl_No_EstefadehDataTable
        Get
            Return Me.tableSelect_Tbl_No_Estefadeh
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Select_TBL_Amlak_Mostaghelat() As Select_TBL_Amlak_MostaghelatDataTable
        Get
            Return Me.tableSelect_TBL_Amlak_Mostaghelat
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property FSelect_TBL_Amlak_Mostaghelat() As FSelect_TBL_Amlak_MostaghelatDataTable
        Get
            Return Me.tableFSelect_TBL_Amlak_Mostaghelat
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Tbl_Amlak_Mostaghelat() As Tbl_Amlak_MostaghelatDataTable
        Get
            Return Me.tableTbl_Amlak_Mostaghelat
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Select_Tbl_Derakht() As Select_Tbl_DerakhtDataTable
        Get
            Return Me.tableSelect_Tbl_Derakht
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Tbl_Moshakhasat_Sakhteman() As Tbl_Moshakhasat_SakhtemanDataTable
        Get
            Return Me.tableTbl_Moshakhasat_Sakhteman
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Select_Tbl_Moshakhasat_Sakhteman() As Select_Tbl_Moshakhasat_SakhtemanDataTable
        Get
            Return Me.tableSelect_Tbl_Moshakhasat_Sakhteman
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Select_Tbl_Eshterak() As Select_Tbl_EshterakDataTable
        Get
            Return Me.tableSelect_Tbl_Eshterak
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Select_Tbl_Afrad_Momayezi() As Select_Tbl_Afrad_MomayeziDataTable
        Get
            Return Me.tableSelect_Tbl_Afrad_Momayezi
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Select_Tbl_Momayezi() As Select_Tbl_MomayeziDataTable
        Get
            Return Me.tableSelect_Tbl_Momayezi
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Select_DFN_BLOCK() As Select_DFN_BLOCKDataTable
        Get
            Return Me.tableSelect_DFN_BLOCK
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As DB_NoSaziDataSet = CType(MyBase.Clone,DB_NoSaziDataSet)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("DFNs")) Is Nothing) Then
                MyBase.Tables.Add(New DFNsDataTable(ds.Tables("DFNs")))
            End If
            If (Not (ds.Tables("Tbl_Moshakhasat_Zamin")) Is Nothing) Then
                MyBase.Tables.Add(New Tbl_Moshakhasat_ZaminDataTable(ds.Tables("Tbl_Moshakhasat_Zamin")))
            End If
            If (Not (ds.Tables("TblDFN_Gheymat")) Is Nothing) Then
                MyBase.Tables.Add(New TblDFN_GheymatDataTable(ds.Tables("TblDFN_Gheymat")))
            End If
            If (Not (ds.Tables("TblDFN_Block")) Is Nothing) Then
                MyBase.Tables.Add(New TblDFN_BlockDataTable(ds.Tables("TblDFN_Block")))
            End If
            If (Not (ds.Tables("TblDFN_SAL")) Is Nothing) Then
                MyBase.Tables.Add(New TblDFN_SALDataTable(ds.Tables("TblDFN_SAL")))
            End If
            If (Not (ds.Tables("Select_DFNs")) Is Nothing) Then
                MyBase.Tables.Add(New Select_DFNsDataTable(ds.Tables("Select_DFNs")))
            End If
            If (Not (ds.Tables("Select_Sal_Gheymat_All")) Is Nothing) Then
                MyBase.Tables.Add(New Select_Sal_Gheymat_AllDataTable(ds.Tables("Select_Sal_Gheymat_All")))
            End If
            If (Not (ds.Tables("FSelect_Calc")) Is Nothing) Then
                MyBase.Tables.Add(New FSelect_CalcDataTable(ds.Tables("FSelect_Calc")))
            End If
            If (Not (ds.Tables("FSelect_Calc_Sal")) Is Nothing) Then
                MyBase.Tables.Add(New FSelect_Calc_SalDataTable(ds.Tables("FSelect_Calc_Sal")))
            End If
            If (Not (ds.Tables("FSelect_Sal")) Is Nothing) Then
                MyBase.Tables.Add(New FSelect_SalDataTable(ds.Tables("FSelect_Sal")))
            End If
            If (Not (ds.Tables("FSelect_Sal_Gheymat")) Is Nothing) Then
                MyBase.Tables.Add(New FSelect_Sal_GheymatDataTable(ds.Tables("FSelect_Sal_Gheymat")))
            End If
            If (Not (ds.Tables("FSelect_Sal_Gheymat_All")) Is Nothing) Then
                MyBase.Tables.Add(New FSelect_Sal_Gheymat_AllDataTable(ds.Tables("FSelect_Sal_Gheymat_All")))
            End If
            If (Not (ds.Tables("FSelect_Tbl_Moshakhasat_Malekin")) Is Nothing) Then
                MyBase.Tables.Add(New FSelect_Tbl_Moshakhasat_MalekinDataTable(ds.Tables("FSelect_Tbl_Moshakhasat_Malekin")))
            End If
            If (Not (ds.Tables("Tbl_Moshakhasat_Malekin")) Is Nothing) Then
                MyBase.Tables.Add(New Tbl_Moshakhasat_MalekinDataTable(ds.Tables("Tbl_Moshakhasat_Malekin")))
            End If
            If (Not (ds.Tables("Select_Tbl_Moshakhasat_Malekin")) Is Nothing) Then
                MyBase.Tables.Add(New Select_Tbl_Moshakhasat_MalekinDataTable(ds.Tables("Select_Tbl_Moshakhasat_Malekin")))
            End If
            If (Not (ds.Tables("Tbl_Mahiyat_Fiziki")) Is Nothing) Then
                MyBase.Tables.Add(New Tbl_Mahiyat_FizikiDataTable(ds.Tables("Tbl_Mahiyat_Fiziki")))
            End If
            If (Not (ds.Tables("Select_Tbl_Mahiyat_Fiziki")) Is Nothing) Then
                MyBase.Tables.Add(New Select_Tbl_Mahiyat_FizikiDataTable(ds.Tables("Select_Tbl_Mahiyat_Fiziki")))
            End If
            If (Not (ds.Tables("Tbl_No_Estefadeh")) Is Nothing) Then
                MyBase.Tables.Add(New Tbl_No_EstefadehDataTable(ds.Tables("Tbl_No_Estefadeh")))
            End If
            If (Not (ds.Tables("TAmlak")) Is Nothing) Then
                MyBase.Tables.Add(New TAmlakDataTable(ds.Tables("TAmlak")))
            End If
            If (Not (ds.Tables("Tbl_Moshakhasat_Zamin1")) Is Nothing) Then
                MyBase.Tables.Add(New Tbl_Moshakhasat_Zamin1DataTable(ds.Tables("Tbl_Moshakhasat_Zamin1")))
            End If
            If (Not (ds.Tables("Tbl_Moshakhasat_Zamin2")) Is Nothing) Then
                MyBase.Tables.Add(New Tbl_Moshakhasat_Zamin2DataTable(ds.Tables("Tbl_Moshakhasat_Zamin2")))
            End If
            If (Not (ds.Tables("Select_Tbl_Moshakhasat_Zamin")) Is Nothing) Then
                MyBase.Tables.Add(New Select_Tbl_Moshakhasat_ZaminDataTable(ds.Tables("Select_Tbl_Moshakhasat_Zamin")))
            End If
            If (Not (ds.Tables("FSelect_Tbl_Moshakhasat_Zamin")) Is Nothing) Then
                MyBase.Tables.Add(New FSelect_Tbl_Moshakhasat_ZaminDataTable(ds.Tables("FSelect_Tbl_Moshakhasat_Zamin")))
            End If
            If (Not (ds.Tables("Select_Tbl_No_Estefadeh")) Is Nothing) Then
                MyBase.Tables.Add(New Select_Tbl_No_EstefadehDataTable(ds.Tables("Select_Tbl_No_Estefadeh")))
            End If
            If (Not (ds.Tables("Select_TBL_Amlak_Mostaghelat")) Is Nothing) Then
                MyBase.Tables.Add(New Select_TBL_Amlak_MostaghelatDataTable(ds.Tables("Select_TBL_Amlak_Mostaghelat")))
            End If
            If (Not (ds.Tables("FSelect_TBL_Amlak_Mostaghelat")) Is Nothing) Then
                MyBase.Tables.Add(New FSelect_TBL_Amlak_MostaghelatDataTable(ds.Tables("FSelect_TBL_Amlak_Mostaghelat")))
            End If
            If (Not (ds.Tables("Tbl_Amlak_Mostaghelat")) Is Nothing) Then
                MyBase.Tables.Add(New Tbl_Amlak_MostaghelatDataTable(ds.Tables("Tbl_Amlak_Mostaghelat")))
            End If
            If (Not (ds.Tables("Select_Tbl_Derakht")) Is Nothing) Then
                MyBase.Tables.Add(New Select_Tbl_DerakhtDataTable(ds.Tables("Select_Tbl_Derakht")))
            End If
            If (Not (ds.Tables("Tbl_Moshakhasat_Sakhteman")) Is Nothing) Then
                MyBase.Tables.Add(New Tbl_Moshakhasat_SakhtemanDataTable(ds.Tables("Tbl_Moshakhasat_Sakhteman")))
            End If
            If (Not (ds.Tables("Select_Tbl_Moshakhasat_Sakhteman")) Is Nothing) Then
                MyBase.Tables.Add(New Select_Tbl_Moshakhasat_SakhtemanDataTable(ds.Tables("Select_Tbl_Moshakhasat_Sakhteman")))
            End If
            If (Not (ds.Tables("Select_Tbl_Eshterak")) Is Nothing) Then
                MyBase.Tables.Add(New Select_Tbl_EshterakDataTable(ds.Tables("Select_Tbl_Eshterak")))
            End If
            If (Not (ds.Tables("Select_Tbl_Afrad_Momayezi")) Is Nothing) Then
                MyBase.Tables.Add(New Select_Tbl_Afrad_MomayeziDataTable(ds.Tables("Select_Tbl_Afrad_Momayezi")))
            End If
            If (Not (ds.Tables("Select_Tbl_Momayezi")) Is Nothing) Then
                MyBase.Tables.Add(New Select_Tbl_MomayeziDataTable(ds.Tables("Select_Tbl_Momayezi")))
            End If
            If (Not (ds.Tables("Select_DFN_BLOCK")) Is Nothing) Then
                MyBase.Tables.Add(New Select_DFN_BLOCKDataTable(ds.Tables("Select_DFN_BLOCK")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableDFNs = CType(MyBase.Tables("DFNs"),DFNsDataTable)
        If (initTable = true) Then
            If (Not (Me.tableDFNs) Is Nothing) Then
                Me.tableDFNs.InitVars
            End If
        End If
        Me.tableTbl_Moshakhasat_Zamin = CType(MyBase.Tables("Tbl_Moshakhasat_Zamin"),Tbl_Moshakhasat_ZaminDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTbl_Moshakhasat_Zamin) Is Nothing) Then
                Me.tableTbl_Moshakhasat_Zamin.InitVars
            End If
        End If
        Me.tableTblDFN_Gheymat = CType(MyBase.Tables("TblDFN_Gheymat"),TblDFN_GheymatDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTblDFN_Gheymat) Is Nothing) Then
                Me.tableTblDFN_Gheymat.InitVars
            End If
        End If
        Me.tableTblDFN_Block = CType(MyBase.Tables("TblDFN_Block"),TblDFN_BlockDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTblDFN_Block) Is Nothing) Then
                Me.tableTblDFN_Block.InitVars
            End If
        End If
        Me.tableTblDFN_SAL = CType(MyBase.Tables("TblDFN_SAL"),TblDFN_SALDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTblDFN_SAL) Is Nothing) Then
                Me.tableTblDFN_SAL.InitVars
            End If
        End If
        Me.tableSelect_DFNs = CType(MyBase.Tables("Select_DFNs"),Select_DFNsDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSelect_DFNs) Is Nothing) Then
                Me.tableSelect_DFNs.InitVars
            End If
        End If
        Me.tableSelect_Sal_Gheymat_All = CType(MyBase.Tables("Select_Sal_Gheymat_All"),Select_Sal_Gheymat_AllDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSelect_Sal_Gheymat_All) Is Nothing) Then
                Me.tableSelect_Sal_Gheymat_All.InitVars
            End If
        End If
        Me.tableFSelect_Calc = CType(MyBase.Tables("FSelect_Calc"),FSelect_CalcDataTable)
        If (initTable = true) Then
            If (Not (Me.tableFSelect_Calc) Is Nothing) Then
                Me.tableFSelect_Calc.InitVars
            End If
        End If
        Me.tableFSelect_Calc_Sal = CType(MyBase.Tables("FSelect_Calc_Sal"),FSelect_Calc_SalDataTable)
        If (initTable = true) Then
            If (Not (Me.tableFSelect_Calc_Sal) Is Nothing) Then
                Me.tableFSelect_Calc_Sal.InitVars
            End If
        End If
        Me.tableFSelect_Sal = CType(MyBase.Tables("FSelect_Sal"),FSelect_SalDataTable)
        If (initTable = true) Then
            If (Not (Me.tableFSelect_Sal) Is Nothing) Then
                Me.tableFSelect_Sal.InitVars
            End If
        End If
        Me.tableFSelect_Sal_Gheymat = CType(MyBase.Tables("FSelect_Sal_Gheymat"),FSelect_Sal_GheymatDataTable)
        If (initTable = true) Then
            If (Not (Me.tableFSelect_Sal_Gheymat) Is Nothing) Then
                Me.tableFSelect_Sal_Gheymat.InitVars
            End If
        End If
        Me.tableFSelect_Sal_Gheymat_All = CType(MyBase.Tables("FSelect_Sal_Gheymat_All"),FSelect_Sal_Gheymat_AllDataTable)
        If (initTable = true) Then
            If (Not (Me.tableFSelect_Sal_Gheymat_All) Is Nothing) Then
                Me.tableFSelect_Sal_Gheymat_All.InitVars
            End If
        End If
        Me.tableFSelect_Tbl_Moshakhasat_Malekin = CType(MyBase.Tables("FSelect_Tbl_Moshakhasat_Malekin"),FSelect_Tbl_Moshakhasat_MalekinDataTable)
        If (initTable = true) Then
            If (Not (Me.tableFSelect_Tbl_Moshakhasat_Malekin) Is Nothing) Then
                Me.tableFSelect_Tbl_Moshakhasat_Malekin.InitVars
            End If
        End If
        Me.tableTbl_Moshakhasat_Malekin = CType(MyBase.Tables("Tbl_Moshakhasat_Malekin"),Tbl_Moshakhasat_MalekinDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTbl_Moshakhasat_Malekin) Is Nothing) Then
                Me.tableTbl_Moshakhasat_Malekin.InitVars
            End If
        End If
        Me.tableSelect_Tbl_Moshakhasat_Malekin = CType(MyBase.Tables("Select_Tbl_Moshakhasat_Malekin"),Select_Tbl_Moshakhasat_MalekinDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSelect_Tbl_Moshakhasat_Malekin) Is Nothing) Then
                Me.tableSelect_Tbl_Moshakhasat_Malekin.InitVars
            End If
        End If
        Me.tableTbl_Mahiyat_Fiziki = CType(MyBase.Tables("Tbl_Mahiyat_Fiziki"),Tbl_Mahiyat_FizikiDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTbl_Mahiyat_Fiziki) Is Nothing) Then
                Me.tableTbl_Mahiyat_Fiziki.InitVars
            End If
        End If
        Me.tableSelect_Tbl_Mahiyat_Fiziki = CType(MyBase.Tables("Select_Tbl_Mahiyat_Fiziki"),Select_Tbl_Mahiyat_FizikiDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSelect_Tbl_Mahiyat_Fiziki) Is Nothing) Then
                Me.tableSelect_Tbl_Mahiyat_Fiziki.InitVars
            End If
        End If
        Me.tableTbl_No_Estefadeh = CType(MyBase.Tables("Tbl_No_Estefadeh"),Tbl_No_EstefadehDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTbl_No_Estefadeh) Is Nothing) Then
                Me.tableTbl_No_Estefadeh.InitVars
            End If
        End If
        Me.tableTAmlak = CType(MyBase.Tables("TAmlak"),TAmlakDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTAmlak) Is Nothing) Then
                Me.tableTAmlak.InitVars
            End If
        End If
        Me.tableTbl_Moshakhasat_Zamin1 = CType(MyBase.Tables("Tbl_Moshakhasat_Zamin1"),Tbl_Moshakhasat_Zamin1DataTable)
        If (initTable = true) Then
            If (Not (Me.tableTbl_Moshakhasat_Zamin1) Is Nothing) Then
                Me.tableTbl_Moshakhasat_Zamin1.InitVars
            End If
        End If
        Me.tableTbl_Moshakhasat_Zamin2 = CType(MyBase.Tables("Tbl_Moshakhasat_Zamin2"),Tbl_Moshakhasat_Zamin2DataTable)
        If (initTable = true) Then
            If (Not (Me.tableTbl_Moshakhasat_Zamin2) Is Nothing) Then
                Me.tableTbl_Moshakhasat_Zamin2.InitVars
            End If
        End If
        Me.tableSelect_Tbl_Moshakhasat_Zamin = CType(MyBase.Tables("Select_Tbl_Moshakhasat_Zamin"),Select_Tbl_Moshakhasat_ZaminDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSelect_Tbl_Moshakhasat_Zamin) Is Nothing) Then
                Me.tableSelect_Tbl_Moshakhasat_Zamin.InitVars
            End If
        End If
        Me.tableFSelect_Tbl_Moshakhasat_Zamin = CType(MyBase.Tables("FSelect_Tbl_Moshakhasat_Zamin"),FSelect_Tbl_Moshakhasat_ZaminDataTable)
        If (initTable = true) Then
            If (Not (Me.tableFSelect_Tbl_Moshakhasat_Zamin) Is Nothing) Then
                Me.tableFSelect_Tbl_Moshakhasat_Zamin.InitVars
            End If
        End If
        Me.tableSelect_Tbl_No_Estefadeh = CType(MyBase.Tables("Select_Tbl_No_Estefadeh"),Select_Tbl_No_EstefadehDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSelect_Tbl_No_Estefadeh) Is Nothing) Then
                Me.tableSelect_Tbl_No_Estefadeh.InitVars
            End If
        End If
        Me.tableSelect_TBL_Amlak_Mostaghelat = CType(MyBase.Tables("Select_TBL_Amlak_Mostaghelat"),Select_TBL_Amlak_MostaghelatDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSelect_TBL_Amlak_Mostaghelat) Is Nothing) Then
                Me.tableSelect_TBL_Amlak_Mostaghelat.InitVars
            End If
        End If
        Me.tableFSelect_TBL_Amlak_Mostaghelat = CType(MyBase.Tables("FSelect_TBL_Amlak_Mostaghelat"),FSelect_TBL_Amlak_MostaghelatDataTable)
        If (initTable = true) Then
            If (Not (Me.tableFSelect_TBL_Amlak_Mostaghelat) Is Nothing) Then
                Me.tableFSelect_TBL_Amlak_Mostaghelat.InitVars
            End If
        End If
        Me.tableTbl_Amlak_Mostaghelat = CType(MyBase.Tables("Tbl_Amlak_Mostaghelat"),Tbl_Amlak_MostaghelatDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTbl_Amlak_Mostaghelat) Is Nothing) Then
                Me.tableTbl_Amlak_Mostaghelat.InitVars
            End If
        End If
        Me.tableSelect_Tbl_Derakht = CType(MyBase.Tables("Select_Tbl_Derakht"),Select_Tbl_DerakhtDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSelect_Tbl_Derakht) Is Nothing) Then
                Me.tableSelect_Tbl_Derakht.InitVars
            End If
        End If
        Me.tableTbl_Moshakhasat_Sakhteman = CType(MyBase.Tables("Tbl_Moshakhasat_Sakhteman"),Tbl_Moshakhasat_SakhtemanDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTbl_Moshakhasat_Sakhteman) Is Nothing) Then
                Me.tableTbl_Moshakhasat_Sakhteman.InitVars
            End If
        End If
        Me.tableSelect_Tbl_Moshakhasat_Sakhteman = CType(MyBase.Tables("Select_Tbl_Moshakhasat_Sakhteman"),Select_Tbl_Moshakhasat_SakhtemanDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSelect_Tbl_Moshakhasat_Sakhteman) Is Nothing) Then
                Me.tableSelect_Tbl_Moshakhasat_Sakhteman.InitVars
            End If
        End If
        Me.tableSelect_Tbl_Eshterak = CType(MyBase.Tables("Select_Tbl_Eshterak"),Select_Tbl_EshterakDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSelect_Tbl_Eshterak) Is Nothing) Then
                Me.tableSelect_Tbl_Eshterak.InitVars
            End If
        End If
        Me.tableSelect_Tbl_Afrad_Momayezi = CType(MyBase.Tables("Select_Tbl_Afrad_Momayezi"),Select_Tbl_Afrad_MomayeziDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSelect_Tbl_Afrad_Momayezi) Is Nothing) Then
                Me.tableSelect_Tbl_Afrad_Momayezi.InitVars
            End If
        End If
        Me.tableSelect_Tbl_Momayezi = CType(MyBase.Tables("Select_Tbl_Momayezi"),Select_Tbl_MomayeziDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSelect_Tbl_Momayezi) Is Nothing) Then
                Me.tableSelect_Tbl_Momayezi.InitVars
            End If
        End If
        Me.tableSelect_DFN_BLOCK = CType(MyBase.Tables("Select_DFN_BLOCK"),Select_DFN_BLOCKDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSelect_DFN_BLOCK) Is Nothing) Then
                Me.tableSelect_DFN_BLOCK.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "DB_NoSaziDataSet"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DB_NoSaziDataSet.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableDFNs = New DFNsDataTable
        MyBase.Tables.Add(Me.tableDFNs)
        Me.tableTbl_Moshakhasat_Zamin = New Tbl_Moshakhasat_ZaminDataTable
        MyBase.Tables.Add(Me.tableTbl_Moshakhasat_Zamin)
        Me.tableTblDFN_Gheymat = New TblDFN_GheymatDataTable
        MyBase.Tables.Add(Me.tableTblDFN_Gheymat)
        Me.tableTblDFN_Block = New TblDFN_BlockDataTable
        MyBase.Tables.Add(Me.tableTblDFN_Block)
        Me.tableTblDFN_SAL = New TblDFN_SALDataTable
        MyBase.Tables.Add(Me.tableTblDFN_SAL)
        Me.tableSelect_DFNs = New Select_DFNsDataTable
        MyBase.Tables.Add(Me.tableSelect_DFNs)
        Me.tableSelect_Sal_Gheymat_All = New Select_Sal_Gheymat_AllDataTable
        MyBase.Tables.Add(Me.tableSelect_Sal_Gheymat_All)
        Me.tableFSelect_Calc = New FSelect_CalcDataTable
        MyBase.Tables.Add(Me.tableFSelect_Calc)
        Me.tableFSelect_Calc_Sal = New FSelect_Calc_SalDataTable
        MyBase.Tables.Add(Me.tableFSelect_Calc_Sal)
        Me.tableFSelect_Sal = New FSelect_SalDataTable
        MyBase.Tables.Add(Me.tableFSelect_Sal)
        Me.tableFSelect_Sal_Gheymat = New FSelect_Sal_GheymatDataTable
        MyBase.Tables.Add(Me.tableFSelect_Sal_Gheymat)
        Me.tableFSelect_Sal_Gheymat_All = New FSelect_Sal_Gheymat_AllDataTable
        MyBase.Tables.Add(Me.tableFSelect_Sal_Gheymat_All)
        Me.tableFSelect_Tbl_Moshakhasat_Malekin = New FSelect_Tbl_Moshakhasat_MalekinDataTable
        MyBase.Tables.Add(Me.tableFSelect_Tbl_Moshakhasat_Malekin)
        Me.tableTbl_Moshakhasat_Malekin = New Tbl_Moshakhasat_MalekinDataTable
        MyBase.Tables.Add(Me.tableTbl_Moshakhasat_Malekin)
        Me.tableSelect_Tbl_Moshakhasat_Malekin = New Select_Tbl_Moshakhasat_MalekinDataTable
        MyBase.Tables.Add(Me.tableSelect_Tbl_Moshakhasat_Malekin)
        Me.tableTbl_Mahiyat_Fiziki = New Tbl_Mahiyat_FizikiDataTable
        MyBase.Tables.Add(Me.tableTbl_Mahiyat_Fiziki)
        Me.tableSelect_Tbl_Mahiyat_Fiziki = New Select_Tbl_Mahiyat_FizikiDataTable
        MyBase.Tables.Add(Me.tableSelect_Tbl_Mahiyat_Fiziki)
        Me.tableTbl_No_Estefadeh = New Tbl_No_EstefadehDataTable
        MyBase.Tables.Add(Me.tableTbl_No_Estefadeh)
        Me.tableTAmlak = New TAmlakDataTable
        MyBase.Tables.Add(Me.tableTAmlak)
        Me.tableTbl_Moshakhasat_Zamin1 = New Tbl_Moshakhasat_Zamin1DataTable
        MyBase.Tables.Add(Me.tableTbl_Moshakhasat_Zamin1)
        Me.tableTbl_Moshakhasat_Zamin2 = New Tbl_Moshakhasat_Zamin2DataTable
        MyBase.Tables.Add(Me.tableTbl_Moshakhasat_Zamin2)
        Me.tableSelect_Tbl_Moshakhasat_Zamin = New Select_Tbl_Moshakhasat_ZaminDataTable
        MyBase.Tables.Add(Me.tableSelect_Tbl_Moshakhasat_Zamin)
        Me.tableFSelect_Tbl_Moshakhasat_Zamin = New FSelect_Tbl_Moshakhasat_ZaminDataTable
        MyBase.Tables.Add(Me.tableFSelect_Tbl_Moshakhasat_Zamin)
        Me.tableSelect_Tbl_No_Estefadeh = New Select_Tbl_No_EstefadehDataTable
        MyBase.Tables.Add(Me.tableSelect_Tbl_No_Estefadeh)
        Me.tableSelect_TBL_Amlak_Mostaghelat = New Select_TBL_Amlak_MostaghelatDataTable
        MyBase.Tables.Add(Me.tableSelect_TBL_Amlak_Mostaghelat)
        Me.tableFSelect_TBL_Amlak_Mostaghelat = New FSelect_TBL_Amlak_MostaghelatDataTable
        MyBase.Tables.Add(Me.tableFSelect_TBL_Amlak_Mostaghelat)
        Me.tableTbl_Amlak_Mostaghelat = New Tbl_Amlak_MostaghelatDataTable
        MyBase.Tables.Add(Me.tableTbl_Amlak_Mostaghelat)
        Me.tableSelect_Tbl_Derakht = New Select_Tbl_DerakhtDataTable
        MyBase.Tables.Add(Me.tableSelect_Tbl_Derakht)
        Me.tableTbl_Moshakhasat_Sakhteman = New Tbl_Moshakhasat_SakhtemanDataTable
        MyBase.Tables.Add(Me.tableTbl_Moshakhasat_Sakhteman)
        Me.tableSelect_Tbl_Moshakhasat_Sakhteman = New Select_Tbl_Moshakhasat_SakhtemanDataTable
        MyBase.Tables.Add(Me.tableSelect_Tbl_Moshakhasat_Sakhteman)
        Me.tableSelect_Tbl_Eshterak = New Select_Tbl_EshterakDataTable
        MyBase.Tables.Add(Me.tableSelect_Tbl_Eshterak)
        Me.tableSelect_Tbl_Afrad_Momayezi = New Select_Tbl_Afrad_MomayeziDataTable
        MyBase.Tables.Add(Me.tableSelect_Tbl_Afrad_Momayezi)
        Me.tableSelect_Tbl_Momayezi = New Select_Tbl_MomayeziDataTable
        MyBase.Tables.Add(Me.tableSelect_Tbl_Momayezi)
        Me.tableSelect_DFN_BLOCK = New Select_DFN_BLOCKDataTable
        MyBase.Tables.Add(Me.tableSelect_DFN_BLOCK)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeDFNs() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeTbl_Moshakhasat_Zamin() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeTblDFN_Gheymat() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeTblDFN_Block() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeTblDFN_SAL() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeSelect_DFNs() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeSelect_Sal_Gheymat_All() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeFSelect_Calc() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeFSelect_Calc_Sal() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeFSelect_Sal() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeFSelect_Sal_Gheymat() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeFSelect_Sal_Gheymat_All() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeFSelect_Tbl_Moshakhasat_Malekin() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeTbl_Moshakhasat_Malekin() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeSelect_Tbl_Moshakhasat_Malekin() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeTbl_Mahiyat_Fiziki() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeSelect_Tbl_Mahiyat_Fiziki() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeTbl_No_Estefadeh() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeTAmlak() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeTbl_Moshakhasat_Zamin1() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeTbl_Moshakhasat_Zamin2() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeSelect_Tbl_Moshakhasat_Zamin() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeFSelect_Tbl_Moshakhasat_Zamin() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeSelect_Tbl_No_Estefadeh() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeSelect_TBL_Amlak_Mostaghelat() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeFSelect_TBL_Amlak_Mostaghelat() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeTbl_Amlak_Mostaghelat() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeSelect_Tbl_Derakht() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeTbl_Moshakhasat_Sakhteman() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeSelect_Tbl_Moshakhasat_Sakhteman() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeSelect_Tbl_Eshterak() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeSelect_Tbl_Afrad_Momayezi() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeSelect_Tbl_Momayezi() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeSelect_DFN_BLOCK() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As DB_NoSaziDataSet = New DB_NoSaziDataSet
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub DFNsRowChangeEventHandler(ByVal sender As Object, ByVal e As DFNsRowChangeEvent)
    
    Public Delegate Sub Tbl_Moshakhasat_ZaminRowChangeEventHandler(ByVal sender As Object, ByVal e As Tbl_Moshakhasat_ZaminRowChangeEvent)
    
    Public Delegate Sub TblDFN_GheymatRowChangeEventHandler(ByVal sender As Object, ByVal e As TblDFN_GheymatRowChangeEvent)
    
    Public Delegate Sub TblDFN_BlockRowChangeEventHandler(ByVal sender As Object, ByVal e As TblDFN_BlockRowChangeEvent)
    
    Public Delegate Sub TblDFN_SALRowChangeEventHandler(ByVal sender As Object, ByVal e As TblDFN_SALRowChangeEvent)
    
    Public Delegate Sub Select_DFNsRowChangeEventHandler(ByVal sender As Object, ByVal e As Select_DFNsRowChangeEvent)
    
    Public Delegate Sub Select_Sal_Gheymat_AllRowChangeEventHandler(ByVal sender As Object, ByVal e As Select_Sal_Gheymat_AllRowChangeEvent)
    
    Public Delegate Sub FSelect_CalcRowChangeEventHandler(ByVal sender As Object, ByVal e As FSelect_CalcRowChangeEvent)
    
    Public Delegate Sub FSelect_Calc_SalRowChangeEventHandler(ByVal sender As Object, ByVal e As FSelect_Calc_SalRowChangeEvent)
    
    Public Delegate Sub FSelect_SalRowChangeEventHandler(ByVal sender As Object, ByVal e As FSelect_SalRowChangeEvent)
    
    Public Delegate Sub FSelect_Sal_GheymatRowChangeEventHandler(ByVal sender As Object, ByVal e As FSelect_Sal_GheymatRowChangeEvent)
    
    Public Delegate Sub FSelect_Sal_Gheymat_AllRowChangeEventHandler(ByVal sender As Object, ByVal e As FSelect_Sal_Gheymat_AllRowChangeEvent)
    
    Public Delegate Sub FSelect_Tbl_Moshakhasat_MalekinRowChangeEventHandler(ByVal sender As Object, ByVal e As FSelect_Tbl_Moshakhasat_MalekinRowChangeEvent)
    
    Public Delegate Sub Tbl_Moshakhasat_MalekinRowChangeEventHandler(ByVal sender As Object, ByVal e As Tbl_Moshakhasat_MalekinRowChangeEvent)
    
    Public Delegate Sub Select_Tbl_Moshakhasat_MalekinRowChangeEventHandler(ByVal sender As Object, ByVal e As Select_Tbl_Moshakhasat_MalekinRowChangeEvent)
    
    Public Delegate Sub Tbl_Mahiyat_FizikiRowChangeEventHandler(ByVal sender As Object, ByVal e As Tbl_Mahiyat_FizikiRowChangeEvent)
    
    Public Delegate Sub Select_Tbl_Mahiyat_FizikiRowChangeEventHandler(ByVal sender As Object, ByVal e As Select_Tbl_Mahiyat_FizikiRowChangeEvent)
    
    Public Delegate Sub Tbl_No_EstefadehRowChangeEventHandler(ByVal sender As Object, ByVal e As Tbl_No_EstefadehRowChangeEvent)
    
    Public Delegate Sub TAmlakRowChangeEventHandler(ByVal sender As Object, ByVal e As TAmlakRowChangeEvent)
    
    Public Delegate Sub Tbl_Moshakhasat_Zamin1RowChangeEventHandler(ByVal sender As Object, ByVal e As Tbl_Moshakhasat_Zamin1RowChangeEvent)
    
    Public Delegate Sub Tbl_Moshakhasat_Zamin2RowChangeEventHandler(ByVal sender As Object, ByVal e As Tbl_Moshakhasat_Zamin2RowChangeEvent)
    
    Public Delegate Sub Select_Tbl_Moshakhasat_ZaminRowChangeEventHandler(ByVal sender As Object, ByVal e As Select_Tbl_Moshakhasat_ZaminRowChangeEvent)
    
    Public Delegate Sub FSelect_Tbl_Moshakhasat_ZaminRowChangeEventHandler(ByVal sender As Object, ByVal e As FSelect_Tbl_Moshakhasat_ZaminRowChangeEvent)
    
    Public Delegate Sub Select_Tbl_No_EstefadehRowChangeEventHandler(ByVal sender As Object, ByVal e As Select_Tbl_No_EstefadehRowChangeEvent)
    
    Public Delegate Sub Select_TBL_Amlak_MostaghelatRowChangeEventHandler(ByVal sender As Object, ByVal e As Select_TBL_Amlak_MostaghelatRowChangeEvent)
    
    Public Delegate Sub FSelect_TBL_Amlak_MostaghelatRowChangeEventHandler(ByVal sender As Object, ByVal e As FSelect_TBL_Amlak_MostaghelatRowChangeEvent)
    
    Public Delegate Sub Tbl_Amlak_MostaghelatRowChangeEventHandler(ByVal sender As Object, ByVal e As Tbl_Amlak_MostaghelatRowChangeEvent)
    
    Public Delegate Sub Select_Tbl_DerakhtRowChangeEventHandler(ByVal sender As Object, ByVal e As Select_Tbl_DerakhtRowChangeEvent)
    
    Public Delegate Sub Tbl_Moshakhasat_SakhtemanRowChangeEventHandler(ByVal sender As Object, ByVal e As Tbl_Moshakhasat_SakhtemanRowChangeEvent)
    
    Public Delegate Sub Select_Tbl_Moshakhasat_SakhtemanRowChangeEventHandler(ByVal sender As Object, ByVal e As Select_Tbl_Moshakhasat_SakhtemanRowChangeEvent)
    
    Public Delegate Sub Select_Tbl_EshterakRowChangeEventHandler(ByVal sender As Object, ByVal e As Select_Tbl_EshterakRowChangeEvent)
    
    Public Delegate Sub Select_Tbl_Afrad_MomayeziRowChangeEventHandler(ByVal sender As Object, ByVal e As Select_Tbl_Afrad_MomayeziRowChangeEvent)
    
    Public Delegate Sub Select_Tbl_MomayeziRowChangeEventHandler(ByVal sender As Object, ByVal e As Select_Tbl_MomayeziRowChangeEvent)
    
    Public Delegate Sub Select_DFN_BLOCKRowChangeEventHandler(ByVal sender As Object, ByVal e As Select_DFN_BLOCKRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class DFNsDataTable
        Inherits Global.System.Data.TypedTableBase(Of DFNsRow)
        
        Private columncode As Global.System.Data.DataColumn
        
        Private columnname As Global.System.Data.DataColumn
        
        Private columnsharh As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "DFNs"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sharhColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsharh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As DFNsRow
            Get
                Return CType(Me.Rows(index),DFNsRow)
            End Get
        End Property
        
        Public Event DFNsRowChanging As DFNsRowChangeEventHandler
        
        Public Event DFNsRowChanged As DFNsRowChangeEventHandler
        
        Public Event DFNsRowDeleting As DFNsRowChangeEventHandler
        
        Public Event DFNsRowDeleted As DFNsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddDFNsRow(ByVal row As DFNsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddDFNsRow(ByVal code As String, ByVal name As String, ByVal sharh As String) As DFNsRow
            Dim rowDFNsRow As DFNsRow = CType(Me.NewRow,DFNsRow)
            Dim columnValuesArray() As Object = New Object() {code, name, sharh}
            rowDFNsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowDFNsRow)
            Return rowDFNsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As DFNsDataTable = CType(MyBase.Clone,DFNsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New DFNsDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columncode = MyBase.Columns("code")
            Me.columnname = MyBase.Columns("name")
            Me.columnsharh = MyBase.Columns("sharh")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columncode = New Global.System.Data.DataColumn("code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncode)
            Me.columnname = New Global.System.Data.DataColumn("name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnname)
            Me.columnsharh = New Global.System.Data.DataColumn("sharh", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsharh)
            Me.columncode.AllowDBNull = false
            Me.columncode.MaxLength = 3
            Me.columnname.AllowDBNull = false
            Me.columnname.MaxLength = 50
            Me.columnsharh.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewDFNsRow() As DFNsRow
            Return CType(Me.NewRow,DFNsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New DFNsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(DFNsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.DFNsRowChangedEvent) Is Nothing) Then
                RaiseEvent DFNsRowChanged(Me, New DFNsRowChangeEvent(CType(e.Row,DFNsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.DFNsRowChangingEvent) Is Nothing) Then
                RaiseEvent DFNsRowChanging(Me, New DFNsRowChangeEvent(CType(e.Row,DFNsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.DFNsRowDeletedEvent) Is Nothing) Then
                RaiseEvent DFNsRowDeleted(Me, New DFNsRowChangeEvent(CType(e.Row,DFNsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.DFNsRowDeletingEvent) Is Nothing) Then
                RaiseEvent DFNsRowDeleting(Me, New DFNsRowChangeEvent(CType(e.Row,DFNsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveDFNsRow(ByVal row As DFNsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DB_NoSaziDataSet = New DB_NoSaziDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "DFNsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Tbl_Moshakhasat_ZaminDataTable
        Inherits Global.System.Data.TypedTableBase(Of Tbl_Moshakhasat_ZaminRow)
        
        Private columnRadif As Global.System.Data.DataColumn
        
        Private columnTool_Zel As Global.System.Data.DataColumn
        
        Private columnTool_Bar As Global.System.Data.DataColumn
        
        Private columnMaAbar_Name As Global.System.Data.DataColumn
        
        Private columnShomare_Shenasnameh As Global.System.Data.DataColumn
        
        Private columnjahat_value As Global.System.Data.DataColumn
        
        Private columnjahat As Global.System.Data.DataColumn
        
        Private columnMaAbar_Arz As Global.System.Data.DataColumn
        
        Private columnMaAbar_radif As Global.System.Data.DataColumn
        
        Private columnzavieh As Global.System.Data.DataColumn
        
        Private columnMasahat_jebheh1 As Global.System.Data.DataColumn
        
        Private columnMasahat_Jebheh2 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Tbl_Moshakhasat_Zamin"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RadifColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRadif
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Tool_ZelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTool_Zel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Tool_BarColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTool_Bar
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MaAbar_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaAbar_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Shomare_ShenasnamehColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShomare_Shenasnameh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property jahat_valueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnjahat_value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property jahatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnjahat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MaAbar_ArzColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaAbar_Arz
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MaAbar_radifColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaAbar_radif
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property zaviehColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnzavieh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Masahat_jebheh1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMasahat_jebheh1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Masahat_Jebheh2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMasahat_Jebheh2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Tbl_Moshakhasat_ZaminRow
            Get
                Return CType(Me.Rows(index),Tbl_Moshakhasat_ZaminRow)
            End Get
        End Property
        
        Public Event Tbl_Moshakhasat_ZaminRowChanging As Tbl_Moshakhasat_ZaminRowChangeEventHandler
        
        Public Event Tbl_Moshakhasat_ZaminRowChanged As Tbl_Moshakhasat_ZaminRowChangeEventHandler
        
        Public Event Tbl_Moshakhasat_ZaminRowDeleting As Tbl_Moshakhasat_ZaminRowChangeEventHandler
        
        Public Event Tbl_Moshakhasat_ZaminRowDeleted As Tbl_Moshakhasat_ZaminRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddTbl_Moshakhasat_ZaminRow(ByVal row As Tbl_Moshakhasat_ZaminRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddTbl_Moshakhasat_ZaminRow(ByVal Radif As Byte, ByVal Tool_Zel As Single, ByVal Tool_Bar As Single, ByVal MaAbar_Name As String, ByVal Shomare_Shenasnameh As String, ByVal jahat_value As String, ByVal jahat As String, ByVal MaAbar_Arz As Single, ByVal MaAbar_radif As Byte, ByVal zavieh As Integer, ByVal Masahat_jebheh1 As Single, ByVal Masahat_Jebheh2 As Single) As Tbl_Moshakhasat_ZaminRow
            Dim rowTbl_Moshakhasat_ZaminRow As Tbl_Moshakhasat_ZaminRow = CType(Me.NewRow,Tbl_Moshakhasat_ZaminRow)
            Dim columnValuesArray() As Object = New Object() {Radif, Tool_Zel, Tool_Bar, MaAbar_Name, Shomare_Shenasnameh, jahat_value, jahat, MaAbar_Arz, MaAbar_radif, zavieh, Masahat_jebheh1, Masahat_Jebheh2}
            rowTbl_Moshakhasat_ZaminRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTbl_Moshakhasat_ZaminRow)
            Return rowTbl_Moshakhasat_ZaminRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Tbl_Moshakhasat_ZaminDataTable = CType(MyBase.Clone,Tbl_Moshakhasat_ZaminDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Tbl_Moshakhasat_ZaminDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnRadif = MyBase.Columns("Radif")
            Me.columnTool_Zel = MyBase.Columns("Tool_Zel")
            Me.columnTool_Bar = MyBase.Columns("Tool_Bar")
            Me.columnMaAbar_Name = MyBase.Columns("MaAbar_Name")
            Me.columnShomare_Shenasnameh = MyBase.Columns("Shomare_Shenasnameh")
            Me.columnjahat_value = MyBase.Columns("jahat_value")
            Me.columnjahat = MyBase.Columns("jahat")
            Me.columnMaAbar_Arz = MyBase.Columns("MaAbar_Arz")
            Me.columnMaAbar_radif = MyBase.Columns("MaAbar_radif")
            Me.columnzavieh = MyBase.Columns("zavieh")
            Me.columnMasahat_jebheh1 = MyBase.Columns("Masahat_jebheh1")
            Me.columnMasahat_Jebheh2 = MyBase.Columns("Masahat_Jebheh2")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnRadif = New Global.System.Data.DataColumn("Radif", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRadif)
            Me.columnTool_Zel = New Global.System.Data.DataColumn("Tool_Zel", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTool_Zel)
            Me.columnTool_Bar = New Global.System.Data.DataColumn("Tool_Bar", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTool_Bar)
            Me.columnMaAbar_Name = New Global.System.Data.DataColumn("MaAbar_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaAbar_Name)
            Me.columnShomare_Shenasnameh = New Global.System.Data.DataColumn("Shomare_Shenasnameh", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShomare_Shenasnameh)
            Me.columnjahat_value = New Global.System.Data.DataColumn("jahat_value", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnjahat_value)
            Me.columnjahat = New Global.System.Data.DataColumn("jahat", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnjahat)
            Me.columnMaAbar_Arz = New Global.System.Data.DataColumn("MaAbar_Arz", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaAbar_Arz)
            Me.columnMaAbar_radif = New Global.System.Data.DataColumn("MaAbar_radif", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaAbar_radif)
            Me.columnzavieh = New Global.System.Data.DataColumn("zavieh", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnzavieh)
            Me.columnMasahat_jebheh1 = New Global.System.Data.DataColumn("Masahat_jebheh1", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMasahat_jebheh1)
            Me.columnMasahat_Jebheh2 = New Global.System.Data.DataColumn("Masahat_Jebheh2", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMasahat_Jebheh2)
            Me.columnMaAbar_Name.MaxLength = 50
            Me.columnShomare_Shenasnameh.MaxLength = 27
            Me.columnjahat_value.MaxLength = 3
            Me.columnjahat.ReadOnly = true
            Me.columnjahat.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewTbl_Moshakhasat_ZaminRow() As Tbl_Moshakhasat_ZaminRow
            Return CType(Me.NewRow,Tbl_Moshakhasat_ZaminRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Tbl_Moshakhasat_ZaminRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Tbl_Moshakhasat_ZaminRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Tbl_Moshakhasat_ZaminRowChangedEvent) Is Nothing) Then
                RaiseEvent Tbl_Moshakhasat_ZaminRowChanged(Me, New Tbl_Moshakhasat_ZaminRowChangeEvent(CType(e.Row,Tbl_Moshakhasat_ZaminRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Tbl_Moshakhasat_ZaminRowChangingEvent) Is Nothing) Then
                RaiseEvent Tbl_Moshakhasat_ZaminRowChanging(Me, New Tbl_Moshakhasat_ZaminRowChangeEvent(CType(e.Row,Tbl_Moshakhasat_ZaminRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Tbl_Moshakhasat_ZaminRowDeletedEvent) Is Nothing) Then
                RaiseEvent Tbl_Moshakhasat_ZaminRowDeleted(Me, New Tbl_Moshakhasat_ZaminRowChangeEvent(CType(e.Row,Tbl_Moshakhasat_ZaminRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Tbl_Moshakhasat_ZaminRowDeletingEvent) Is Nothing) Then
                RaiseEvent Tbl_Moshakhasat_ZaminRowDeleting(Me, New Tbl_Moshakhasat_ZaminRowChangeEvent(CType(e.Row,Tbl_Moshakhasat_ZaminRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveTbl_Moshakhasat_ZaminRow(ByVal row As Tbl_Moshakhasat_ZaminRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DB_NoSaziDataSet = New DB_NoSaziDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Tbl_Moshakhasat_ZaminDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TblDFN_GheymatDataTable
        Inherits Global.System.Data.TypedTableBase(Of TblDFN_GheymatRow)
        
        Private columnSharh As Global.System.Data.DataColumn
        
        Private columnCode As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TblDFN_Gheymat"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SharhColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSharh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TblDFN_GheymatRow
            Get
                Return CType(Me.Rows(index),TblDFN_GheymatRow)
            End Get
        End Property
        
        Public Event TblDFN_GheymatRowChanging As TblDFN_GheymatRowChangeEventHandler
        
        Public Event TblDFN_GheymatRowChanged As TblDFN_GheymatRowChangeEventHandler
        
        Public Event TblDFN_GheymatRowDeleting As TblDFN_GheymatRowChangeEventHandler
        
        Public Event TblDFN_GheymatRowDeleted As TblDFN_GheymatRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddTblDFN_GheymatRow(ByVal row As TblDFN_GheymatRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddTblDFN_GheymatRow(ByVal Sharh As String, ByVal Code As String) As TblDFN_GheymatRow
            Dim rowTblDFN_GheymatRow As TblDFN_GheymatRow = CType(Me.NewRow,TblDFN_GheymatRow)
            Dim columnValuesArray() As Object = New Object() {Sharh, Code}
            rowTblDFN_GheymatRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTblDFN_GheymatRow)
            Return rowTblDFN_GheymatRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TblDFN_GheymatDataTable = CType(MyBase.Clone,TblDFN_GheymatDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TblDFN_GheymatDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnSharh = MyBase.Columns("Sharh")
            Me.columnCode = MyBase.Columns("Code")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnSharh = New Global.System.Data.DataColumn("Sharh", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSharh)
            Me.columnCode = New Global.System.Data.DataColumn("Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCode)
            Me.columnSharh.MaxLength = 200
            Me.columnCode.AllowDBNull = false
            Me.columnCode.MaxLength = 5
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewTblDFN_GheymatRow() As TblDFN_GheymatRow
            Return CType(Me.NewRow,TblDFN_GheymatRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TblDFN_GheymatRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TblDFN_GheymatRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TblDFN_GheymatRowChangedEvent) Is Nothing) Then
                RaiseEvent TblDFN_GheymatRowChanged(Me, New TblDFN_GheymatRowChangeEvent(CType(e.Row,TblDFN_GheymatRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TblDFN_GheymatRowChangingEvent) Is Nothing) Then
                RaiseEvent TblDFN_GheymatRowChanging(Me, New TblDFN_GheymatRowChangeEvent(CType(e.Row,TblDFN_GheymatRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TblDFN_GheymatRowDeletedEvent) Is Nothing) Then
                RaiseEvent TblDFN_GheymatRowDeleted(Me, New TblDFN_GheymatRowChangeEvent(CType(e.Row,TblDFN_GheymatRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TblDFN_GheymatRowDeletingEvent) Is Nothing) Then
                RaiseEvent TblDFN_GheymatRowDeleting(Me, New TblDFN_GheymatRowChangeEvent(CType(e.Row,TblDFN_GheymatRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveTblDFN_GheymatRow(ByVal row As TblDFN_GheymatRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DB_NoSaziDataSet = New DB_NoSaziDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TblDFN_GheymatDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TblDFN_BlockDataTable
        Inherits Global.System.Data.TypedTableBase(Of TblDFN_BlockRow)
        
        Private columnCode As Global.System.Data.DataColumn
        
        Private columnCode_SHsh As Global.System.Data.DataColumn
        
        Private columnSharh As Global.System.Data.DataColumn
        
        Private columnShomal As Global.System.Data.DataColumn
        
        Private columnShargh As Global.System.Data.DataColumn
        
        Private columnJonoub As Global.System.Data.DataColumn
        
        Private columnGharb As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TblDFN_Block"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Code_SHshColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCode_SHsh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SharhColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSharh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ShomalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShomal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SharghColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShargh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property JonoubColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJonoub
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property GharbColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGharb
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TblDFN_BlockRow
            Get
                Return CType(Me.Rows(index),TblDFN_BlockRow)
            End Get
        End Property
        
        Public Event TblDFN_BlockRowChanging As TblDFN_BlockRowChangeEventHandler
        
        Public Event TblDFN_BlockRowChanged As TblDFN_BlockRowChangeEventHandler
        
        Public Event TblDFN_BlockRowDeleting As TblDFN_BlockRowChangeEventHandler
        
        Public Event TblDFN_BlockRowDeleted As TblDFN_BlockRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddTblDFN_BlockRow(ByVal row As TblDFN_BlockRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddTblDFN_BlockRow(ByVal Code As Byte, ByVal Code_SHsh As String, ByVal Sharh As String, ByVal Shomal As String, ByVal Shargh As String, ByVal Jonoub As String, ByVal Gharb As String) As TblDFN_BlockRow
            Dim rowTblDFN_BlockRow As TblDFN_BlockRow = CType(Me.NewRow,TblDFN_BlockRow)
            Dim columnValuesArray() As Object = New Object() {Code, Code_SHsh, Sharh, Shomal, Shargh, Jonoub, Gharb}
            rowTblDFN_BlockRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTblDFN_BlockRow)
            Return rowTblDFN_BlockRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByCode(ByVal Code As Byte) As TblDFN_BlockRow
            Return CType(Me.Rows.Find(New Object() {Code}),TblDFN_BlockRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TblDFN_BlockDataTable = CType(MyBase.Clone,TblDFN_BlockDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TblDFN_BlockDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnCode = MyBase.Columns("Code")
            Me.columnCode_SHsh = MyBase.Columns("Code_SHsh")
            Me.columnSharh = MyBase.Columns("Sharh")
            Me.columnShomal = MyBase.Columns("Shomal")
            Me.columnShargh = MyBase.Columns("Shargh")
            Me.columnJonoub = MyBase.Columns("Jonoub")
            Me.columnGharb = MyBase.Columns("Gharb")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnCode = New Global.System.Data.DataColumn("Code", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCode)
            Me.columnCode_SHsh = New Global.System.Data.DataColumn("Code_SHsh", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCode_SHsh)
            Me.columnSharh = New Global.System.Data.DataColumn("Sharh", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSharh)
            Me.columnShomal = New Global.System.Data.DataColumn("Shomal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShomal)
            Me.columnShargh = New Global.System.Data.DataColumn("Shargh", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShargh)
            Me.columnJonoub = New Global.System.Data.DataColumn("Jonoub", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJonoub)
            Me.columnGharb = New Global.System.Data.DataColumn("Gharb", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGharb)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCode}, true))
            Me.columnCode.AllowDBNull = false
            Me.columnCode.Unique = true
            Me.columnCode_SHsh.MaxLength = 4
            Me.columnSharh.MaxLength = 150
            Me.columnShomal.MaxLength = 1073741823
            Me.columnShargh.MaxLength = 1073741823
            Me.columnJonoub.MaxLength = 1073741823
            Me.columnGharb.MaxLength = 1073741823
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewTblDFN_BlockRow() As TblDFN_BlockRow
            Return CType(Me.NewRow,TblDFN_BlockRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TblDFN_BlockRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TblDFN_BlockRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TblDFN_BlockRowChangedEvent) Is Nothing) Then
                RaiseEvent TblDFN_BlockRowChanged(Me, New TblDFN_BlockRowChangeEvent(CType(e.Row,TblDFN_BlockRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TblDFN_BlockRowChangingEvent) Is Nothing) Then
                RaiseEvent TblDFN_BlockRowChanging(Me, New TblDFN_BlockRowChangeEvent(CType(e.Row,TblDFN_BlockRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TblDFN_BlockRowDeletedEvent) Is Nothing) Then
                RaiseEvent TblDFN_BlockRowDeleted(Me, New TblDFN_BlockRowChangeEvent(CType(e.Row,TblDFN_BlockRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TblDFN_BlockRowDeletingEvent) Is Nothing) Then
                RaiseEvent TblDFN_BlockRowDeleting(Me, New TblDFN_BlockRowChangeEvent(CType(e.Row,TblDFN_BlockRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveTblDFN_BlockRow(ByVal row As TblDFN_BlockRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DB_NoSaziDataSet = New DB_NoSaziDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TblDFN_BlockDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TblDFN_SALDataTable
        Inherits Global.System.Data.TypedTableBase(Of TblDFN_SALRow)
        
        Private columnCode_Block As Global.System.Data.DataColumn
        
        Private columnGheymat As Global.System.Data.DataColumn
        
        Private columnsal As Global.System.Data.DataColumn
        
        Private columndarsad As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TblDFN_SAL"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Code_BlockColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCode_Block
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property GheymatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGheymat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property salColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property darsadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndarsad
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TblDFN_SALRow
            Get
                Return CType(Me.Rows(index),TblDFN_SALRow)
            End Get
        End Property
        
        Public Event TblDFN_SALRowChanging As TblDFN_SALRowChangeEventHandler
        
        Public Event TblDFN_SALRowChanged As TblDFN_SALRowChangeEventHandler
        
        Public Event TblDFN_SALRowDeleting As TblDFN_SALRowChangeEventHandler
        
        Public Event TblDFN_SALRowDeleted As TblDFN_SALRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddTblDFN_SALRow(ByVal row As TblDFN_SALRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddTblDFN_SALRow(ByVal Code_Block As Byte, ByVal Gheymat As Integer, ByVal sal As String, ByVal darsad As Byte) As TblDFN_SALRow
            Dim rowTblDFN_SALRow As TblDFN_SALRow = CType(Me.NewRow,TblDFN_SALRow)
            Dim columnValuesArray() As Object = New Object() {Code_Block, Gheymat, sal, darsad}
            rowTblDFN_SALRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTblDFN_SALRow)
            Return rowTblDFN_SALRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TblDFN_SALDataTable = CType(MyBase.Clone,TblDFN_SALDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TblDFN_SALDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnCode_Block = MyBase.Columns("Code_Block")
            Me.columnGheymat = MyBase.Columns("Gheymat")
            Me.columnsal = MyBase.Columns("sal")
            Me.columndarsad = MyBase.Columns("darsad")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnCode_Block = New Global.System.Data.DataColumn("Code_Block", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCode_Block)
            Me.columnGheymat = New Global.System.Data.DataColumn("Gheymat", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGheymat)
            Me.columnsal = New Global.System.Data.DataColumn("sal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsal)
            Me.columndarsad = New Global.System.Data.DataColumn("darsad", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndarsad)
            Me.columnsal.MaxLength = 4
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewTblDFN_SALRow() As TblDFN_SALRow
            Return CType(Me.NewRow,TblDFN_SALRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TblDFN_SALRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TblDFN_SALRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TblDFN_SALRowChangedEvent) Is Nothing) Then
                RaiseEvent TblDFN_SALRowChanged(Me, New TblDFN_SALRowChangeEvent(CType(e.Row,TblDFN_SALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TblDFN_SALRowChangingEvent) Is Nothing) Then
                RaiseEvent TblDFN_SALRowChanging(Me, New TblDFN_SALRowChangeEvent(CType(e.Row,TblDFN_SALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TblDFN_SALRowDeletedEvent) Is Nothing) Then
                RaiseEvent TblDFN_SALRowDeleted(Me, New TblDFN_SALRowChangeEvent(CType(e.Row,TblDFN_SALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TblDFN_SALRowDeletingEvent) Is Nothing) Then
                RaiseEvent TblDFN_SALRowDeleting(Me, New TblDFN_SALRowChangeEvent(CType(e.Row,TblDFN_SALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveTblDFN_SALRow(ByVal row As TblDFN_SALRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DB_NoSaziDataSet = New DB_NoSaziDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TblDFN_SALDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Select_DFNsDataTable
        Inherits Global.System.Data.TypedTableBase(Of Select_DFNsRow)
        
        Private columncode As Global.System.Data.DataColumn
        
        Private columnname As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Select_DFNs"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Select_DFNsRow
            Get
                Return CType(Me.Rows(index),Select_DFNsRow)
            End Get
        End Property
        
        Public Event Select_DFNsRowChanging As Select_DFNsRowChangeEventHandler
        
        Public Event Select_DFNsRowChanged As Select_DFNsRowChangeEventHandler
        
        Public Event Select_DFNsRowDeleting As Select_DFNsRowChangeEventHandler
        
        Public Event Select_DFNsRowDeleted As Select_DFNsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddSelect_DFNsRow(ByVal row As Select_DFNsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddSelect_DFNsRow(ByVal code As String, ByVal name As String) As Select_DFNsRow
            Dim rowSelect_DFNsRow As Select_DFNsRow = CType(Me.NewRow,Select_DFNsRow)
            Dim columnValuesArray() As Object = New Object() {code, name}
            rowSelect_DFNsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSelect_DFNsRow)
            Return rowSelect_DFNsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Select_DFNsDataTable = CType(MyBase.Clone,Select_DFNsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Select_DFNsDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columncode = MyBase.Columns("code")
            Me.columnname = MyBase.Columns("name")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columncode = New Global.System.Data.DataColumn("code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncode)
            Me.columnname = New Global.System.Data.DataColumn("name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnname)
            Me.columncode.AllowDBNull = false
            Me.columncode.MaxLength = 3
            Me.columnname.AllowDBNull = false
            Me.columnname.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewSelect_DFNsRow() As Select_DFNsRow
            Return CType(Me.NewRow,Select_DFNsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Select_DFNsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Select_DFNsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Select_DFNsRowChangedEvent) Is Nothing) Then
                RaiseEvent Select_DFNsRowChanged(Me, New Select_DFNsRowChangeEvent(CType(e.Row,Select_DFNsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Select_DFNsRowChangingEvent) Is Nothing) Then
                RaiseEvent Select_DFNsRowChanging(Me, New Select_DFNsRowChangeEvent(CType(e.Row,Select_DFNsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Select_DFNsRowDeletedEvent) Is Nothing) Then
                RaiseEvent Select_DFNsRowDeleted(Me, New Select_DFNsRowChangeEvent(CType(e.Row,Select_DFNsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Select_DFNsRowDeletingEvent) Is Nothing) Then
                RaiseEvent Select_DFNsRowDeleting(Me, New Select_DFNsRowChangeEvent(CType(e.Row,Select_DFNsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveSelect_DFNsRow(ByVal row As Select_DFNsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DB_NoSaziDataSet = New DB_NoSaziDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Select_DFNsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Select_Sal_Gheymat_AllDataTable
        Inherits Global.System.Data.TypedTableBase(Of Select_Sal_Gheymat_AllRow)
        
        Private columnCode As Global.System.Data.DataColumn
        
        Private columnBlock_Name As Global.System.Data.DataColumn
        
        Private columnsharh As Global.System.Data.DataColumn
        
        Private columngheymat As Global.System.Data.DataColumn
        
        Private columnsal As Global.System.Data.DataColumn
        
        Private columndarsad As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Select_Sal_Gheymat_All"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Block_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBlock_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sharhColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsharh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property gheymatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columngheymat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property salColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property darsadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndarsad
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Select_Sal_Gheymat_AllRow
            Get
                Return CType(Me.Rows(index),Select_Sal_Gheymat_AllRow)
            End Get
        End Property
        
        Public Event Select_Sal_Gheymat_AllRowChanging As Select_Sal_Gheymat_AllRowChangeEventHandler
        
        Public Event Select_Sal_Gheymat_AllRowChanged As Select_Sal_Gheymat_AllRowChangeEventHandler
        
        Public Event Select_Sal_Gheymat_AllRowDeleting As Select_Sal_Gheymat_AllRowChangeEventHandler
        
        Public Event Select_Sal_Gheymat_AllRowDeleted As Select_Sal_Gheymat_AllRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddSelect_Sal_Gheymat_AllRow(ByVal row As Select_Sal_Gheymat_AllRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddSelect_Sal_Gheymat_AllRow(ByVal Code As String, ByVal Block_Name As String, ByVal sharh As String, ByVal gheymat As Integer, ByVal sal As String, ByVal darsad As Byte) As Select_Sal_Gheymat_AllRow
            Dim rowSelect_Sal_Gheymat_AllRow As Select_Sal_Gheymat_AllRow = CType(Me.NewRow,Select_Sal_Gheymat_AllRow)
            Dim columnValuesArray() As Object = New Object() {Code, Block_Name, sharh, gheymat, sal, darsad}
            rowSelect_Sal_Gheymat_AllRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSelect_Sal_Gheymat_AllRow)
            Return rowSelect_Sal_Gheymat_AllRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Select_Sal_Gheymat_AllDataTable = CType(MyBase.Clone,Select_Sal_Gheymat_AllDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Select_Sal_Gheymat_AllDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnCode = MyBase.Columns("Code")
            Me.columnBlock_Name = MyBase.Columns("Block_Name")
            Me.columnsharh = MyBase.Columns("sharh")
            Me.columngheymat = MyBase.Columns("gheymat")
            Me.columnsal = MyBase.Columns("sal")
            Me.columndarsad = MyBase.Columns("darsad")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnCode = New Global.System.Data.DataColumn("Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCode)
            Me.columnBlock_Name = New Global.System.Data.DataColumn("Block_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBlock_Name)
            Me.columnsharh = New Global.System.Data.DataColumn("sharh", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsharh)
            Me.columngheymat = New Global.System.Data.DataColumn("gheymat", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columngheymat)
            Me.columnsal = New Global.System.Data.DataColumn("sal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsal)
            Me.columndarsad = New Global.System.Data.DataColumn("darsad", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndarsad)
            Me.columnCode.AllowDBNull = false
            Me.columnCode.MaxLength = 5
            Me.columnBlock_Name.ReadOnly = true
            Me.columnBlock_Name.MaxLength = 150
            Me.columnsharh.MaxLength = 200
            Me.columnsal.MaxLength = 4
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewSelect_Sal_Gheymat_AllRow() As Select_Sal_Gheymat_AllRow
            Return CType(Me.NewRow,Select_Sal_Gheymat_AllRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Select_Sal_Gheymat_AllRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Select_Sal_Gheymat_AllRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Select_Sal_Gheymat_AllRowChangedEvent) Is Nothing) Then
                RaiseEvent Select_Sal_Gheymat_AllRowChanged(Me, New Select_Sal_Gheymat_AllRowChangeEvent(CType(e.Row,Select_Sal_Gheymat_AllRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Select_Sal_Gheymat_AllRowChangingEvent) Is Nothing) Then
                RaiseEvent Select_Sal_Gheymat_AllRowChanging(Me, New Select_Sal_Gheymat_AllRowChangeEvent(CType(e.Row,Select_Sal_Gheymat_AllRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Select_Sal_Gheymat_AllRowDeletedEvent) Is Nothing) Then
                RaiseEvent Select_Sal_Gheymat_AllRowDeleted(Me, New Select_Sal_Gheymat_AllRowChangeEvent(CType(e.Row,Select_Sal_Gheymat_AllRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Select_Sal_Gheymat_AllRowDeletingEvent) Is Nothing) Then
                RaiseEvent Select_Sal_Gheymat_AllRowDeleting(Me, New Select_Sal_Gheymat_AllRowChangeEvent(CType(e.Row,Select_Sal_Gheymat_AllRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveSelect_Sal_Gheymat_AllRow(ByVal row As Select_Sal_Gheymat_AllRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DB_NoSaziDataSet = New DB_NoSaziDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Select_Sal_Gheymat_AllDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class FSelect_CalcDataTable
        Inherits Global.System.Data.TypedTableBase(Of FSelect_CalcRow)
        
        Private columnMasahat_Melk As Global.System.Data.DataColumn
        
        Private columnBar_Tedad As Global.System.Data.DataColumn
        
        Private columnN_Meydan As Global.System.Data.DataColumn
        
        Private columnRah_Mostaghel As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "FSelect_Calc"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Masahat_MelkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMasahat_Melk
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Bar_TedadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBar_Tedad
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property N_MeydanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnN_Meydan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Rah_MostaghelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRah_Mostaghel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As FSelect_CalcRow
            Get
                Return CType(Me.Rows(index),FSelect_CalcRow)
            End Get
        End Property
        
        Public Event FSelect_CalcRowChanging As FSelect_CalcRowChangeEventHandler
        
        Public Event FSelect_CalcRowChanged As FSelect_CalcRowChangeEventHandler
        
        Public Event FSelect_CalcRowDeleting As FSelect_CalcRowChangeEventHandler
        
        Public Event FSelect_CalcRowDeleted As FSelect_CalcRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddFSelect_CalcRow(ByVal row As FSelect_CalcRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddFSelect_CalcRow(ByVal Masahat_Melk As Single, ByVal Bar_Tedad As Byte, ByVal N_Meydan As String, ByVal Rah_Mostaghel As Boolean) As FSelect_CalcRow
            Dim rowFSelect_CalcRow As FSelect_CalcRow = CType(Me.NewRow,FSelect_CalcRow)
            Dim columnValuesArray() As Object = New Object() {Masahat_Melk, Bar_Tedad, N_Meydan, Rah_Mostaghel}
            rowFSelect_CalcRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowFSelect_CalcRow)
            Return rowFSelect_CalcRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As FSelect_CalcDataTable = CType(MyBase.Clone,FSelect_CalcDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New FSelect_CalcDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnMasahat_Melk = MyBase.Columns("Masahat_Melk")
            Me.columnBar_Tedad = MyBase.Columns("Bar_Tedad")
            Me.columnN_Meydan = MyBase.Columns("N_Meydan")
            Me.columnRah_Mostaghel = MyBase.Columns("Rah_Mostaghel")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnMasahat_Melk = New Global.System.Data.DataColumn("Masahat_Melk", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMasahat_Melk)
            Me.columnBar_Tedad = New Global.System.Data.DataColumn("Bar_Tedad", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBar_Tedad)
            Me.columnN_Meydan = New Global.System.Data.DataColumn("N_Meydan", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnN_Meydan)
            Me.columnRah_Mostaghel = New Global.System.Data.DataColumn("Rah_Mostaghel", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRah_Mostaghel)
            Me.columnN_Meydan.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewFSelect_CalcRow() As FSelect_CalcRow
            Return CType(Me.NewRow,FSelect_CalcRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New FSelect_CalcRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(FSelect_CalcRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.FSelect_CalcRowChangedEvent) Is Nothing) Then
                RaiseEvent FSelect_CalcRowChanged(Me, New FSelect_CalcRowChangeEvent(CType(e.Row,FSelect_CalcRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.FSelect_CalcRowChangingEvent) Is Nothing) Then
                RaiseEvent FSelect_CalcRowChanging(Me, New FSelect_CalcRowChangeEvent(CType(e.Row,FSelect_CalcRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.FSelect_CalcRowDeletedEvent) Is Nothing) Then
                RaiseEvent FSelect_CalcRowDeleted(Me, New FSelect_CalcRowChangeEvent(CType(e.Row,FSelect_CalcRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.FSelect_CalcRowDeletingEvent) Is Nothing) Then
                RaiseEvent FSelect_CalcRowDeleting(Me, New FSelect_CalcRowChangeEvent(CType(e.Row,FSelect_CalcRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveFSelect_CalcRow(ByVal row As FSelect_CalcRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DB_NoSaziDataSet = New DB_NoSaziDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "FSelect_CalcDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class FSelect_Calc_SalDataTable
        Inherits Global.System.Data.TypedTableBase(Of FSelect_Calc_SalRow)
        
        Private columnCode_Block As Global.System.Data.DataColumn
        
        Private columnGheymat As Global.System.Data.DataColumn
        
        Private columnsal As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "FSelect_Calc_Sal"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Code_BlockColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCode_Block
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property GheymatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGheymat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property salColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As FSelect_Calc_SalRow
            Get
                Return CType(Me.Rows(index),FSelect_Calc_SalRow)
            End Get
        End Property
        
        Public Event FSelect_Calc_SalRowChanging As FSelect_Calc_SalRowChangeEventHandler
        
        Public Event FSelect_Calc_SalRowChanged As FSelect_Calc_SalRowChangeEventHandler
        
        Public Event FSelect_Calc_SalRowDeleting As FSelect_Calc_SalRowChangeEventHandler
        
        Public Event FSelect_Calc_SalRowDeleted As FSelect_Calc_SalRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddFSelect_Calc_SalRow(ByVal row As FSelect_Calc_SalRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddFSelect_Calc_SalRow(ByVal Code_Block As String, ByVal Gheymat As Integer, ByVal sal As String) As FSelect_Calc_SalRow
            Dim rowFSelect_Calc_SalRow As FSelect_Calc_SalRow = CType(Me.NewRow,FSelect_Calc_SalRow)
            Dim columnValuesArray() As Object = New Object() {Code_Block, Gheymat, sal}
            rowFSelect_Calc_SalRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowFSelect_Calc_SalRow)
            Return rowFSelect_Calc_SalRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As FSelect_Calc_SalDataTable = CType(MyBase.Clone,FSelect_Calc_SalDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New FSelect_Calc_SalDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnCode_Block = MyBase.Columns("Code_Block")
            Me.columnGheymat = MyBase.Columns("Gheymat")
            Me.columnsal = MyBase.Columns("sal")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnCode_Block = New Global.System.Data.DataColumn("Code_Block", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCode_Block)
            Me.columnGheymat = New Global.System.Data.DataColumn("Gheymat", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGheymat)
            Me.columnsal = New Global.System.Data.DataColumn("sal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsal)
            Me.columnCode_Block.MaxLength = 5
            Me.columnsal.MaxLength = 4
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewFSelect_Calc_SalRow() As FSelect_Calc_SalRow
            Return CType(Me.NewRow,FSelect_Calc_SalRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New FSelect_Calc_SalRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(FSelect_Calc_SalRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.FSelect_Calc_SalRowChangedEvent) Is Nothing) Then
                RaiseEvent FSelect_Calc_SalRowChanged(Me, New FSelect_Calc_SalRowChangeEvent(CType(e.Row,FSelect_Calc_SalRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.FSelect_Calc_SalRowChangingEvent) Is Nothing) Then
                RaiseEvent FSelect_Calc_SalRowChanging(Me, New FSelect_Calc_SalRowChangeEvent(CType(e.Row,FSelect_Calc_SalRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.FSelect_Calc_SalRowDeletedEvent) Is Nothing) Then
                RaiseEvent FSelect_Calc_SalRowDeleted(Me, New FSelect_Calc_SalRowChangeEvent(CType(e.Row,FSelect_Calc_SalRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.FSelect_Calc_SalRowDeletingEvent) Is Nothing) Then
                RaiseEvent FSelect_Calc_SalRowDeleting(Me, New FSelect_Calc_SalRowChangeEvent(CType(e.Row,FSelect_Calc_SalRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveFSelect_Calc_SalRow(ByVal row As FSelect_Calc_SalRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DB_NoSaziDataSet = New DB_NoSaziDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "FSelect_Calc_SalDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class FSelect_SalDataTable
        Inherits Global.System.Data.TypedTableBase(Of FSelect_SalRow)
        
        Private columngheymat As Global.System.Data.DataColumn
        
        Private columnsal As Global.System.Data.DataColumn
        
        Private columndarsad As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "FSelect_Sal"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property gheymatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columngheymat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property salColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property darsadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndarsad
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As FSelect_SalRow
            Get
                Return CType(Me.Rows(index),FSelect_SalRow)
            End Get
        End Property
        
        Public Event FSelect_SalRowChanging As FSelect_SalRowChangeEventHandler
        
        Public Event FSelect_SalRowChanged As FSelect_SalRowChangeEventHandler
        
        Public Event FSelect_SalRowDeleting As FSelect_SalRowChangeEventHandler
        
        Public Event FSelect_SalRowDeleted As FSelect_SalRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddFSelect_SalRow(ByVal row As FSelect_SalRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddFSelect_SalRow(ByVal gheymat As Integer, ByVal sal As String, ByVal darsad As Byte) As FSelect_SalRow
            Dim rowFSelect_SalRow As FSelect_SalRow = CType(Me.NewRow,FSelect_SalRow)
            Dim columnValuesArray() As Object = New Object() {gheymat, sal, darsad}
            rowFSelect_SalRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowFSelect_SalRow)
            Return rowFSelect_SalRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As FSelect_SalDataTable = CType(MyBase.Clone,FSelect_SalDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New FSelect_SalDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columngheymat = MyBase.Columns("gheymat")
            Me.columnsal = MyBase.Columns("sal")
            Me.columndarsad = MyBase.Columns("darsad")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columngheymat = New Global.System.Data.DataColumn("gheymat", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columngheymat)
            Me.columnsal = New Global.System.Data.DataColumn("sal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsal)
            Me.columndarsad = New Global.System.Data.DataColumn("darsad", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndarsad)
            Me.columnsal.MaxLength = 4
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewFSelect_SalRow() As FSelect_SalRow
            Return CType(Me.NewRow,FSelect_SalRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New FSelect_SalRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(FSelect_SalRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.FSelect_SalRowChangedEvent) Is Nothing) Then
                RaiseEvent FSelect_SalRowChanged(Me, New FSelect_SalRowChangeEvent(CType(e.Row,FSelect_SalRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.FSelect_SalRowChangingEvent) Is Nothing) Then
                RaiseEvent FSelect_SalRowChanging(Me, New FSelect_SalRowChangeEvent(CType(e.Row,FSelect_SalRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.FSelect_SalRowDeletedEvent) Is Nothing) Then
                RaiseEvent FSelect_SalRowDeleted(Me, New FSelect_SalRowChangeEvent(CType(e.Row,FSelect_SalRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.FSelect_SalRowDeletingEvent) Is Nothing) Then
                RaiseEvent FSelect_SalRowDeleting(Me, New FSelect_SalRowChangeEvent(CType(e.Row,FSelect_SalRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveFSelect_SalRow(ByVal row As FSelect_SalRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DB_NoSaziDataSet = New DB_NoSaziDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "FSelect_SalDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class FSelect_Sal_GheymatDataTable
        Inherits Global.System.Data.TypedTableBase(Of FSelect_Sal_GheymatRow)
        
        Private columncode As Global.System.Data.DataColumn
        
        Private columnsharh As Global.System.Data.DataColumn
        
        Private columngheymat As Global.System.Data.DataColumn
        
        Private columnsal As Global.System.Data.DataColumn
        
        Private columndarsad As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "FSelect_Sal_Gheymat"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sharhColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsharh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property gheymatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columngheymat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property salColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property darsadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndarsad
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As FSelect_Sal_GheymatRow
            Get
                Return CType(Me.Rows(index),FSelect_Sal_GheymatRow)
            End Get
        End Property
        
        Public Event FSelect_Sal_GheymatRowChanging As FSelect_Sal_GheymatRowChangeEventHandler
        
        Public Event FSelect_Sal_GheymatRowChanged As FSelect_Sal_GheymatRowChangeEventHandler
        
        Public Event FSelect_Sal_GheymatRowDeleting As FSelect_Sal_GheymatRowChangeEventHandler
        
        Public Event FSelect_Sal_GheymatRowDeleted As FSelect_Sal_GheymatRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddFSelect_Sal_GheymatRow(ByVal row As FSelect_Sal_GheymatRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddFSelect_Sal_GheymatRow(ByVal code As String, ByVal sharh As String, ByVal gheymat As Integer, ByVal sal As String, ByVal darsad As Byte) As FSelect_Sal_GheymatRow
            Dim rowFSelect_Sal_GheymatRow As FSelect_Sal_GheymatRow = CType(Me.NewRow,FSelect_Sal_GheymatRow)
            Dim columnValuesArray() As Object = New Object() {code, sharh, gheymat, sal, darsad}
            rowFSelect_Sal_GheymatRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowFSelect_Sal_GheymatRow)
            Return rowFSelect_Sal_GheymatRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As FSelect_Sal_GheymatDataTable = CType(MyBase.Clone,FSelect_Sal_GheymatDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New FSelect_Sal_GheymatDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columncode = MyBase.Columns("code")
            Me.columnsharh = MyBase.Columns("sharh")
            Me.columngheymat = MyBase.Columns("gheymat")
            Me.columnsal = MyBase.Columns("sal")
            Me.columndarsad = MyBase.Columns("darsad")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columncode = New Global.System.Data.DataColumn("code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncode)
            Me.columnsharh = New Global.System.Data.DataColumn("sharh", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsharh)
            Me.columngheymat = New Global.System.Data.DataColumn("gheymat", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columngheymat)
            Me.columnsal = New Global.System.Data.DataColumn("sal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsal)
            Me.columndarsad = New Global.System.Data.DataColumn("darsad", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndarsad)
            Me.columncode.AllowDBNull = false
            Me.columncode.MaxLength = 5
            Me.columnsharh.MaxLength = 200
            Me.columnsal.MaxLength = 4
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewFSelect_Sal_GheymatRow() As FSelect_Sal_GheymatRow
            Return CType(Me.NewRow,FSelect_Sal_GheymatRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New FSelect_Sal_GheymatRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(FSelect_Sal_GheymatRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.FSelect_Sal_GheymatRowChangedEvent) Is Nothing) Then
                RaiseEvent FSelect_Sal_GheymatRowChanged(Me, New FSelect_Sal_GheymatRowChangeEvent(CType(e.Row,FSelect_Sal_GheymatRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.FSelect_Sal_GheymatRowChangingEvent) Is Nothing) Then
                RaiseEvent FSelect_Sal_GheymatRowChanging(Me, New FSelect_Sal_GheymatRowChangeEvent(CType(e.Row,FSelect_Sal_GheymatRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.FSelect_Sal_GheymatRowDeletedEvent) Is Nothing) Then
                RaiseEvent FSelect_Sal_GheymatRowDeleted(Me, New FSelect_Sal_GheymatRowChangeEvent(CType(e.Row,FSelect_Sal_GheymatRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.FSelect_Sal_GheymatRowDeletingEvent) Is Nothing) Then
                RaiseEvent FSelect_Sal_GheymatRowDeleting(Me, New FSelect_Sal_GheymatRowChangeEvent(CType(e.Row,FSelect_Sal_GheymatRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveFSelect_Sal_GheymatRow(ByVal row As FSelect_Sal_GheymatRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DB_NoSaziDataSet = New DB_NoSaziDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "FSelect_Sal_GheymatDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class FSelect_Sal_Gheymat_AllDataTable
        Inherits Global.System.Data.TypedTableBase(Of FSelect_Sal_Gheymat_AllRow)
        
        Private columnCode As Global.System.Data.DataColumn
        
        Private columnBlock_Name As Global.System.Data.DataColumn
        
        Private columnsharh As Global.System.Data.DataColumn
        
        Private columngheymat As Global.System.Data.DataColumn
        
        Private columnsal As Global.System.Data.DataColumn
        
        Private columndarsad As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "FSelect_Sal_Gheymat_All"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Block_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBlock_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property sharhColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsharh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property gheymatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columngheymat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property salColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property darsadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndarsad
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As FSelect_Sal_Gheymat_AllRow
            Get
                Return CType(Me.Rows(index),FSelect_Sal_Gheymat_AllRow)
            End Get
        End Property
        
        Public Event FSelect_Sal_Gheymat_AllRowChanging As FSelect_Sal_Gheymat_AllRowChangeEventHandler
        
        Public Event FSelect_Sal_Gheymat_AllRowChanged As FSelect_Sal_Gheymat_AllRowChangeEventHandler
        
        Public Event FSelect_Sal_Gheymat_AllRowDeleting As FSelect_Sal_Gheymat_AllRowChangeEventHandler
        
        Public Event FSelect_Sal_Gheymat_AllRowDeleted As FSelect_Sal_Gheymat_AllRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddFSelect_Sal_Gheymat_AllRow(ByVal row As FSelect_Sal_Gheymat_AllRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddFSelect_Sal_Gheymat_AllRow(ByVal Code As String, ByVal Block_Name As String, ByVal sharh As String, ByVal gheymat As Integer, ByVal sal As String, ByVal darsad As Byte) As FSelect_Sal_Gheymat_AllRow
            Dim rowFSelect_Sal_Gheymat_AllRow As FSelect_Sal_Gheymat_AllRow = CType(Me.NewRow,FSelect_Sal_Gheymat_AllRow)
            Dim columnValuesArray() As Object = New Object() {Code, Block_Name, sharh, gheymat, sal, darsad}
            rowFSelect_Sal_Gheymat_AllRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowFSelect_Sal_Gheymat_AllRow)
            Return rowFSelect_Sal_Gheymat_AllRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As FSelect_Sal_Gheymat_AllDataTable = CType(MyBase.Clone,FSelect_Sal_Gheymat_AllDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New FSelect_Sal_Gheymat_AllDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnCode = MyBase.Columns("Code")
            Me.columnBlock_Name = MyBase.Columns("Block_Name")
            Me.columnsharh = MyBase.Columns("sharh")
            Me.columngheymat = MyBase.Columns("gheymat")
            Me.columnsal = MyBase.Columns("sal")
            Me.columndarsad = MyBase.Columns("darsad")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnCode = New Global.System.Data.DataColumn("Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCode)
            Me.columnBlock_Name = New Global.System.Data.DataColumn("Block_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBlock_Name)
            Me.columnsharh = New Global.System.Data.DataColumn("sharh", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsharh)
            Me.columngheymat = New Global.System.Data.DataColumn("gheymat", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columngheymat)
            Me.columnsal = New Global.System.Data.DataColumn("sal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsal)
            Me.columndarsad = New Global.System.Data.DataColumn("darsad", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndarsad)
            Me.columnCode.AllowDBNull = false
            Me.columnCode.MaxLength = 5
            Me.columnBlock_Name.ReadOnly = true
            Me.columnBlock_Name.MaxLength = 150
            Me.columnsharh.MaxLength = 200
            Me.columnsal.MaxLength = 4
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewFSelect_Sal_Gheymat_AllRow() As FSelect_Sal_Gheymat_AllRow
            Return CType(Me.NewRow,FSelect_Sal_Gheymat_AllRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New FSelect_Sal_Gheymat_AllRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(FSelect_Sal_Gheymat_AllRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.FSelect_Sal_Gheymat_AllRowChangedEvent) Is Nothing) Then
                RaiseEvent FSelect_Sal_Gheymat_AllRowChanged(Me, New FSelect_Sal_Gheymat_AllRowChangeEvent(CType(e.Row,FSelect_Sal_Gheymat_AllRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.FSelect_Sal_Gheymat_AllRowChangingEvent) Is Nothing) Then
                RaiseEvent FSelect_Sal_Gheymat_AllRowChanging(Me, New FSelect_Sal_Gheymat_AllRowChangeEvent(CType(e.Row,FSelect_Sal_Gheymat_AllRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.FSelect_Sal_Gheymat_AllRowDeletedEvent) Is Nothing) Then
                RaiseEvent FSelect_Sal_Gheymat_AllRowDeleted(Me, New FSelect_Sal_Gheymat_AllRowChangeEvent(CType(e.Row,FSelect_Sal_Gheymat_AllRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.FSelect_Sal_Gheymat_AllRowDeletingEvent) Is Nothing) Then
                RaiseEvent FSelect_Sal_Gheymat_AllRowDeleting(Me, New FSelect_Sal_Gheymat_AllRowChangeEvent(CType(e.Row,FSelect_Sal_Gheymat_AllRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveFSelect_Sal_Gheymat_AllRow(ByVal row As FSelect_Sal_Gheymat_AllRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DB_NoSaziDataSet = New DB_NoSaziDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "FSelect_Sal_Gheymat_AllDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class FSelect_Tbl_Moshakhasat_MalekinDataTable
        Inherits Global.System.Data.TypedTableBase(Of FSelect_Tbl_Moshakhasat_MalekinRow)
        
        Private columnShomare_Shenasnameh As Global.System.Data.DataColumn
        
        Private columnTarikh_Tamallok As Global.System.Data.DataColumn
        
        Private columnNo_Malekiyat_Code As Global.System.Data.DataColumn
        
        Private columnNo_Malekiyat_Tedad As Global.System.Data.DataColumn
        
        Private columnVaziyat_Tamallok As Global.System.Data.DataColumn
        
        Private columnCode_No_Malekiat As Global.System.Data.DataColumn
        
        Private columnMalek_Name As Global.System.Data.DataColumn
        
        Private columnMalek_Family As Global.System.Data.DataColumn
        
        Private columnMalek_Name_Pedar As Global.System.Data.DataColumn
        
        Private columnMalek_SHsh As Global.System.Data.DataColumn
        
        Private columnMalek_CodeMelli As Global.System.Data.DataColumn
        
        Private columnMalek_MahalSodur As Global.System.Data.DataColumn
        
        Private columnMalek_Address As Global.System.Data.DataColumn
        
        Private columnMalek_Tel As Global.System.Data.DataColumn
        
        Private columnRadif As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "FSelect_Tbl_Moshakhasat_Malekin"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Shomare_ShenasnamehColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShomare_Shenasnameh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Tarikh_TamallokColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTarikh_Tamallok
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property No_Malekiyat_CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNo_Malekiyat_Code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property No_Malekiyat_TedadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNo_Malekiyat_Tedad
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Vaziyat_TamallokColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVaziyat_Tamallok
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Code_No_MalekiatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCode_No_Malekiat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Malek_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMalek_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Malek_FamilyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMalek_Family
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Malek_Name_PedarColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMalek_Name_Pedar
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Malek_SHshColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMalek_SHsh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Malek_CodeMelliColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMalek_CodeMelli
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Malek_MahalSodurColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMalek_MahalSodur
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Malek_AddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMalek_Address
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Malek_TelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMalek_Tel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RadifColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRadif
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As FSelect_Tbl_Moshakhasat_MalekinRow
            Get
                Return CType(Me.Rows(index),FSelect_Tbl_Moshakhasat_MalekinRow)
            End Get
        End Property
        
        Public Event FSelect_Tbl_Moshakhasat_MalekinRowChanging As FSelect_Tbl_Moshakhasat_MalekinRowChangeEventHandler
        
        Public Event FSelect_Tbl_Moshakhasat_MalekinRowChanged As FSelect_Tbl_Moshakhasat_MalekinRowChangeEventHandler
        
        Public Event FSelect_Tbl_Moshakhasat_MalekinRowDeleting As FSelect_Tbl_Moshakhasat_MalekinRowChangeEventHandler
        
        Public Event FSelect_Tbl_Moshakhasat_MalekinRowDeleted As FSelect_Tbl_Moshakhasat_MalekinRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddFSelect_Tbl_Moshakhasat_MalekinRow(ByVal row As FSelect_Tbl_Moshakhasat_MalekinRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddFSelect_Tbl_Moshakhasat_MalekinRow(ByVal Shomare_Shenasnameh As String, ByVal Tarikh_Tamallok As String, ByVal No_Malekiyat_Code As String, ByVal No_Malekiyat_Tedad As Byte, ByVal Vaziyat_Tamallok As String, ByVal Code_No_Malekiat As String, ByVal Malek_Name As String, ByVal Malek_Family As String, ByVal Malek_Name_Pedar As String, ByVal Malek_SHsh As Integer, ByVal Malek_CodeMelli As String, ByVal Malek_MahalSodur As String, ByVal Malek_Address As String, ByVal Malek_Tel As String, ByVal Radif As Byte) As FSelect_Tbl_Moshakhasat_MalekinRow
            Dim rowFSelect_Tbl_Moshakhasat_MalekinRow As FSelect_Tbl_Moshakhasat_MalekinRow = CType(Me.NewRow,FSelect_Tbl_Moshakhasat_MalekinRow)
            Dim columnValuesArray() As Object = New Object() {Shomare_Shenasnameh, Tarikh_Tamallok, No_Malekiyat_Code, No_Malekiyat_Tedad, Vaziyat_Tamallok, Code_No_Malekiat, Malek_Name, Malek_Family, Malek_Name_Pedar, Malek_SHsh, Malek_CodeMelli, Malek_MahalSodur, Malek_Address, Malek_Tel, Radif}
            rowFSelect_Tbl_Moshakhasat_MalekinRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowFSelect_Tbl_Moshakhasat_MalekinRow)
            Return rowFSelect_Tbl_Moshakhasat_MalekinRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As FSelect_Tbl_Moshakhasat_MalekinDataTable = CType(MyBase.Clone,FSelect_Tbl_Moshakhasat_MalekinDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New FSelect_Tbl_Moshakhasat_MalekinDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnShomare_Shenasnameh = MyBase.Columns("Shomare_Shenasnameh")
            Me.columnTarikh_Tamallok = MyBase.Columns("Tarikh_Tamallok")
            Me.columnNo_Malekiyat_Code = MyBase.Columns("No_Malekiyat_Code")
            Me.columnNo_Malekiyat_Tedad = MyBase.Columns("No_Malekiyat_Tedad")
            Me.columnVaziyat_Tamallok = MyBase.Columns("Vaziyat_Tamallok")
            Me.columnCode_No_Malekiat = MyBase.Columns("Code_No_Malekiat")
            Me.columnMalek_Name = MyBase.Columns("Malek_Name")
            Me.columnMalek_Family = MyBase.Columns("Malek_Family")
            Me.columnMalek_Name_Pedar = MyBase.Columns("Malek_Name_Pedar")
            Me.columnMalek_SHsh = MyBase.Columns("Malek_SHsh")
            Me.columnMalek_CodeMelli = MyBase.Columns("Malek_CodeMelli")
            Me.columnMalek_MahalSodur = MyBase.Columns("Malek_MahalSodur")
            Me.columnMalek_Address = MyBase.Columns("Malek_Address")
            Me.columnMalek_Tel = MyBase.Columns("Malek_Tel")
            Me.columnRadif = MyBase.Columns("Radif")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnShomare_Shenasnameh = New Global.System.Data.DataColumn("Shomare_Shenasnameh", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShomare_Shenasnameh)
            Me.columnTarikh_Tamallok = New Global.System.Data.DataColumn("Tarikh_Tamallok", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTarikh_Tamallok)
            Me.columnNo_Malekiyat_Code = New Global.System.Data.DataColumn("No_Malekiyat_Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNo_Malekiyat_Code)
            Me.columnNo_Malekiyat_Tedad = New Global.System.Data.DataColumn("No_Malekiyat_Tedad", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNo_Malekiyat_Tedad)
            Me.columnVaziyat_Tamallok = New Global.System.Data.DataColumn("Vaziyat_Tamallok", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVaziyat_Tamallok)
            Me.columnCode_No_Malekiat = New Global.System.Data.DataColumn("Code_No_Malekiat", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCode_No_Malekiat)
            Me.columnMalek_Name = New Global.System.Data.DataColumn("Malek_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMalek_Name)
            Me.columnMalek_Family = New Global.System.Data.DataColumn("Malek_Family", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMalek_Family)
            Me.columnMalek_Name_Pedar = New Global.System.Data.DataColumn("Malek_Name_Pedar", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMalek_Name_Pedar)
            Me.columnMalek_SHsh = New Global.System.Data.DataColumn("Malek_SHsh", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMalek_SHsh)
            Me.columnMalek_CodeMelli = New Global.System.Data.DataColumn("Malek_CodeMelli", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMalek_CodeMelli)
            Me.columnMalek_MahalSodur = New Global.System.Data.DataColumn("Malek_MahalSodur", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMalek_MahalSodur)
            Me.columnMalek_Address = New Global.System.Data.DataColumn("Malek_Address", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMalek_Address)
            Me.columnMalek_Tel = New Global.System.Data.DataColumn("Malek_Tel", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMalek_Tel)
            Me.columnRadif = New Global.System.Data.DataColumn("Radif", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRadif)
            Me.columnShomare_Shenasnameh.MaxLength = 27
            Me.columnTarikh_Tamallok.MaxLength = 8
            Me.columnNo_Malekiyat_Code.ReadOnly = true
            Me.columnNo_Malekiyat_Code.MaxLength = 50
            Me.columnVaziyat_Tamallok.ReadOnly = true
            Me.columnVaziyat_Tamallok.MaxLength = 50
            Me.columnCode_No_Malekiat.ReadOnly = true
            Me.columnCode_No_Malekiat.MaxLength = 50
            Me.columnMalek_Name.MaxLength = 30
            Me.columnMalek_Family.MaxLength = 35
            Me.columnMalek_Name_Pedar.MaxLength = 30
            Me.columnMalek_CodeMelli.MaxLength = 12
            Me.columnMalek_MahalSodur.MaxLength = 20
            Me.columnMalek_Address.MaxLength = 150
            Me.columnMalek_Tel.MaxLength = 30
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewFSelect_Tbl_Moshakhasat_MalekinRow() As FSelect_Tbl_Moshakhasat_MalekinRow
            Return CType(Me.NewRow,FSelect_Tbl_Moshakhasat_MalekinRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New FSelect_Tbl_Moshakhasat_MalekinRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(FSelect_Tbl_Moshakhasat_MalekinRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.FSelect_Tbl_Moshakhasat_MalekinRowChangedEvent) Is Nothing) Then
                RaiseEvent FSelect_Tbl_Moshakhasat_MalekinRowChanged(Me, New FSelect_Tbl_Moshakhasat_MalekinRowChangeEvent(CType(e.Row,FSelect_Tbl_Moshakhasat_MalekinRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.FSelect_Tbl_Moshakhasat_MalekinRowChangingEvent) Is Nothing) Then
                RaiseEvent FSelect_Tbl_Moshakhasat_MalekinRowChanging(Me, New FSelect_Tbl_Moshakhasat_MalekinRowChangeEvent(CType(e.Row,FSelect_Tbl_Moshakhasat_MalekinRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.FSelect_Tbl_Moshakhasat_MalekinRowDeletedEvent) Is Nothing) Then
                RaiseEvent FSelect_Tbl_Moshakhasat_MalekinRowDeleted(Me, New FSelect_Tbl_Moshakhasat_MalekinRowChangeEvent(CType(e.Row,FSelect_Tbl_Moshakhasat_MalekinRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.FSelect_Tbl_Moshakhasat_MalekinRowDeletingEvent) Is Nothing) Then
                RaiseEvent FSelect_Tbl_Moshakhasat_MalekinRowDeleting(Me, New FSelect_Tbl_Moshakhasat_MalekinRowChangeEvent(CType(e.Row,FSelect_Tbl_Moshakhasat_MalekinRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveFSelect_Tbl_Moshakhasat_MalekinRow(ByVal row As FSelect_Tbl_Moshakhasat_MalekinRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DB_NoSaziDataSet = New DB_NoSaziDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "FSelect_Tbl_Moshakhasat_MalekinDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Tbl_Moshakhasat_MalekinDataTable
        Inherits Global.System.Data.TypedTableBase(Of Tbl_Moshakhasat_MalekinRow)
        
        Private columnShomare_Shenasnameh As Global.System.Data.DataColumn
        
        Private columnRadif As Global.System.Data.DataColumn
        
        Private columnTarikh_Tamallok As Global.System.Data.DataColumn
        
        Private columnNo_Malekiyat_Code As Global.System.Data.DataColumn
        
        Private columnNo_Malekiyat_Tedad As Global.System.Data.DataColumn
        
        Private columnVaziyat_Tamallok As Global.System.Data.DataColumn
        
        Private columnCode_No_Malekiat As Global.System.Data.DataColumn
        
        Private columnMalek_Name As Global.System.Data.DataColumn
        
        Private columnMalek_Family As Global.System.Data.DataColumn
        
        Private columnMalek_Name_Pedar As Global.System.Data.DataColumn
        
        Private columnMalek_SHsh As Global.System.Data.DataColumn
        
        Private columnMalek_CodeMelli As Global.System.Data.DataColumn
        
        Private columnMalek_MahalSodur As Global.System.Data.DataColumn
        
        Private columnMalek_Address As Global.System.Data.DataColumn
        
        Private columnMalek_Tel As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Tbl_Moshakhasat_Malekin"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Shomare_ShenasnamehColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShomare_Shenasnameh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RadifColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRadif
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Tarikh_TamallokColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTarikh_Tamallok
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property No_Malekiyat_CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNo_Malekiyat_Code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property No_Malekiyat_TedadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNo_Malekiyat_Tedad
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Vaziyat_TamallokColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVaziyat_Tamallok
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Code_No_MalekiatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCode_No_Malekiat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Malek_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMalek_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Malek_FamilyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMalek_Family
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Malek_Name_PedarColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMalek_Name_Pedar
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Malek_SHshColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMalek_SHsh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Malek_CodeMelliColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMalek_CodeMelli
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Malek_MahalSodurColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMalek_MahalSodur
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Malek_AddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMalek_Address
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Malek_TelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMalek_Tel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Tbl_Moshakhasat_MalekinRow
            Get
                Return CType(Me.Rows(index),Tbl_Moshakhasat_MalekinRow)
            End Get
        End Property
        
        Public Event Tbl_Moshakhasat_MalekinRowChanging As Tbl_Moshakhasat_MalekinRowChangeEventHandler
        
        Public Event Tbl_Moshakhasat_MalekinRowChanged As Tbl_Moshakhasat_MalekinRowChangeEventHandler
        
        Public Event Tbl_Moshakhasat_MalekinRowDeleting As Tbl_Moshakhasat_MalekinRowChangeEventHandler
        
        Public Event Tbl_Moshakhasat_MalekinRowDeleted As Tbl_Moshakhasat_MalekinRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddTbl_Moshakhasat_MalekinRow(ByVal row As Tbl_Moshakhasat_MalekinRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddTbl_Moshakhasat_MalekinRow(ByVal Shomare_Shenasnameh As String, ByVal Radif As Byte, ByVal Tarikh_Tamallok As String, ByVal No_Malekiyat_Code As String, ByVal No_Malekiyat_Tedad As Byte, ByVal Vaziyat_Tamallok As String, ByVal Code_No_Malekiat As String, ByVal Malek_Name As String, ByVal Malek_Family As String, ByVal Malek_Name_Pedar As String, ByVal Malek_SHsh As Integer, ByVal Malek_CodeMelli As String, ByVal Malek_MahalSodur As String, ByVal Malek_Address As String, ByVal Malek_Tel As String) As Tbl_Moshakhasat_MalekinRow
            Dim rowTbl_Moshakhasat_MalekinRow As Tbl_Moshakhasat_MalekinRow = CType(Me.NewRow,Tbl_Moshakhasat_MalekinRow)
            Dim columnValuesArray() As Object = New Object() {Shomare_Shenasnameh, Radif, Tarikh_Tamallok, No_Malekiyat_Code, No_Malekiyat_Tedad, Vaziyat_Tamallok, Code_No_Malekiat, Malek_Name, Malek_Family, Malek_Name_Pedar, Malek_SHsh, Malek_CodeMelli, Malek_MahalSodur, Malek_Address, Malek_Tel}
            rowTbl_Moshakhasat_MalekinRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTbl_Moshakhasat_MalekinRow)
            Return rowTbl_Moshakhasat_MalekinRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Tbl_Moshakhasat_MalekinDataTable = CType(MyBase.Clone,Tbl_Moshakhasat_MalekinDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Tbl_Moshakhasat_MalekinDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnShomare_Shenasnameh = MyBase.Columns("Shomare_Shenasnameh")
            Me.columnRadif = MyBase.Columns("Radif")
            Me.columnTarikh_Tamallok = MyBase.Columns("Tarikh_Tamallok")
            Me.columnNo_Malekiyat_Code = MyBase.Columns("No_Malekiyat_Code")
            Me.columnNo_Malekiyat_Tedad = MyBase.Columns("No_Malekiyat_Tedad")
            Me.columnVaziyat_Tamallok = MyBase.Columns("Vaziyat_Tamallok")
            Me.columnCode_No_Malekiat = MyBase.Columns("Code_No_Malekiat")
            Me.columnMalek_Name = MyBase.Columns("Malek_Name")
            Me.columnMalek_Family = MyBase.Columns("Malek_Family")
            Me.columnMalek_Name_Pedar = MyBase.Columns("Malek_Name_Pedar")
            Me.columnMalek_SHsh = MyBase.Columns("Malek_SHsh")
            Me.columnMalek_CodeMelli = MyBase.Columns("Malek_CodeMelli")
            Me.columnMalek_MahalSodur = MyBase.Columns("Malek_MahalSodur")
            Me.columnMalek_Address = MyBase.Columns("Malek_Address")
            Me.columnMalek_Tel = MyBase.Columns("Malek_Tel")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnShomare_Shenasnameh = New Global.System.Data.DataColumn("Shomare_Shenasnameh", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShomare_Shenasnameh)
            Me.columnRadif = New Global.System.Data.DataColumn("Radif", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRadif)
            Me.columnTarikh_Tamallok = New Global.System.Data.DataColumn("Tarikh_Tamallok", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTarikh_Tamallok)
            Me.columnNo_Malekiyat_Code = New Global.System.Data.DataColumn("No_Malekiyat_Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNo_Malekiyat_Code)
            Me.columnNo_Malekiyat_Tedad = New Global.System.Data.DataColumn("No_Malekiyat_Tedad", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNo_Malekiyat_Tedad)
            Me.columnVaziyat_Tamallok = New Global.System.Data.DataColumn("Vaziyat_Tamallok", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVaziyat_Tamallok)
            Me.columnCode_No_Malekiat = New Global.System.Data.DataColumn("Code_No_Malekiat", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCode_No_Malekiat)
            Me.columnMalek_Name = New Global.System.Data.DataColumn("Malek_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMalek_Name)
            Me.columnMalek_Family = New Global.System.Data.DataColumn("Malek_Family", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMalek_Family)
            Me.columnMalek_Name_Pedar = New Global.System.Data.DataColumn("Malek_Name_Pedar", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMalek_Name_Pedar)
            Me.columnMalek_SHsh = New Global.System.Data.DataColumn("Malek_SHsh", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMalek_SHsh)
            Me.columnMalek_CodeMelli = New Global.System.Data.DataColumn("Malek_CodeMelli", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMalek_CodeMelli)
            Me.columnMalek_MahalSodur = New Global.System.Data.DataColumn("Malek_MahalSodur", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMalek_MahalSodur)
            Me.columnMalek_Address = New Global.System.Data.DataColumn("Malek_Address", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMalek_Address)
            Me.columnMalek_Tel = New Global.System.Data.DataColumn("Malek_Tel", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMalek_Tel)
            Me.columnShomare_Shenasnameh.MaxLength = 27
            Me.columnTarikh_Tamallok.MaxLength = 8
            Me.columnNo_Malekiyat_Code.MaxLength = 3
            Me.columnVaziyat_Tamallok.MaxLength = 3
            Me.columnCode_No_Malekiat.MaxLength = 3
            Me.columnMalek_Name.MaxLength = 30
            Me.columnMalek_Family.MaxLength = 35
            Me.columnMalek_Name_Pedar.MaxLength = 30
            Me.columnMalek_CodeMelli.MaxLength = 12
            Me.columnMalek_MahalSodur.MaxLength = 20
            Me.columnMalek_Address.MaxLength = 150
            Me.columnMalek_Tel.MaxLength = 30
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewTbl_Moshakhasat_MalekinRow() As Tbl_Moshakhasat_MalekinRow
            Return CType(Me.NewRow,Tbl_Moshakhasat_MalekinRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Tbl_Moshakhasat_MalekinRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Tbl_Moshakhasat_MalekinRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Tbl_Moshakhasat_MalekinRowChangedEvent) Is Nothing) Then
                RaiseEvent Tbl_Moshakhasat_MalekinRowChanged(Me, New Tbl_Moshakhasat_MalekinRowChangeEvent(CType(e.Row,Tbl_Moshakhasat_MalekinRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Tbl_Moshakhasat_MalekinRowChangingEvent) Is Nothing) Then
                RaiseEvent Tbl_Moshakhasat_MalekinRowChanging(Me, New Tbl_Moshakhasat_MalekinRowChangeEvent(CType(e.Row,Tbl_Moshakhasat_MalekinRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Tbl_Moshakhasat_MalekinRowDeletedEvent) Is Nothing) Then
                RaiseEvent Tbl_Moshakhasat_MalekinRowDeleted(Me, New Tbl_Moshakhasat_MalekinRowChangeEvent(CType(e.Row,Tbl_Moshakhasat_MalekinRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Tbl_Moshakhasat_MalekinRowDeletingEvent) Is Nothing) Then
                RaiseEvent Tbl_Moshakhasat_MalekinRowDeleting(Me, New Tbl_Moshakhasat_MalekinRowChangeEvent(CType(e.Row,Tbl_Moshakhasat_MalekinRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveTbl_Moshakhasat_MalekinRow(ByVal row As Tbl_Moshakhasat_MalekinRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DB_NoSaziDataSet = New DB_NoSaziDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Tbl_Moshakhasat_MalekinDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Select_Tbl_Moshakhasat_MalekinDataTable
        Inherits Global.System.Data.TypedTableBase(Of Select_Tbl_Moshakhasat_MalekinRow)
        
        Private columnShomare_Shenasnameh As Global.System.Data.DataColumn
        
        Private columnRadif As Global.System.Data.DataColumn
        
        Private columnTarikh_Tamallok As Global.System.Data.DataColumn
        
        Private columnNo_Malekiyat_Code As Global.System.Data.DataColumn
        
        Private columnNo_Malekiyat_Tedad As Global.System.Data.DataColumn
        
        Private columnVaziyat_Tamallok As Global.System.Data.DataColumn
        
        Private columnCode_No_Malekiat As Global.System.Data.DataColumn
        
        Private columnMalek_Name As Global.System.Data.DataColumn
        
        Private columnMalek_Family As Global.System.Data.DataColumn
        
        Private columnMalek_Name_Pedar As Global.System.Data.DataColumn
        
        Private columnMalek_SHsh As Global.System.Data.DataColumn
        
        Private columnMalek_CodeMelli As Global.System.Data.DataColumn
        
        Private columnMalek_MahalSodur As Global.System.Data.DataColumn
        
        Private columnMalek_Address As Global.System.Data.DataColumn
        
        Private columnMalek_Tel As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Select_Tbl_Moshakhasat_Malekin"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Shomare_ShenasnamehColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShomare_Shenasnameh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RadifColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRadif
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Tarikh_TamallokColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTarikh_Tamallok
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property No_Malekiyat_CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNo_Malekiyat_Code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property No_Malekiyat_TedadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNo_Malekiyat_Tedad
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Vaziyat_TamallokColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVaziyat_Tamallok
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Code_No_MalekiatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCode_No_Malekiat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Malek_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMalek_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Malek_FamilyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMalek_Family
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Malek_Name_PedarColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMalek_Name_Pedar
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Malek_SHshColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMalek_SHsh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Malek_CodeMelliColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMalek_CodeMelli
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Malek_MahalSodurColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMalek_MahalSodur
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Malek_AddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMalek_Address
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Malek_TelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMalek_Tel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Select_Tbl_Moshakhasat_MalekinRow
            Get
                Return CType(Me.Rows(index),Select_Tbl_Moshakhasat_MalekinRow)
            End Get
        End Property
        
        Public Event Select_Tbl_Moshakhasat_MalekinRowChanging As Select_Tbl_Moshakhasat_MalekinRowChangeEventHandler
        
        Public Event Select_Tbl_Moshakhasat_MalekinRowChanged As Select_Tbl_Moshakhasat_MalekinRowChangeEventHandler
        
        Public Event Select_Tbl_Moshakhasat_MalekinRowDeleting As Select_Tbl_Moshakhasat_MalekinRowChangeEventHandler
        
        Public Event Select_Tbl_Moshakhasat_MalekinRowDeleted As Select_Tbl_Moshakhasat_MalekinRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddSelect_Tbl_Moshakhasat_MalekinRow(ByVal row As Select_Tbl_Moshakhasat_MalekinRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddSelect_Tbl_Moshakhasat_MalekinRow(ByVal Shomare_Shenasnameh As String, ByVal Radif As Byte, ByVal Tarikh_Tamallok As String, ByVal No_Malekiyat_Code As String, ByVal No_Malekiyat_Tedad As Byte, ByVal Vaziyat_Tamallok As String, ByVal Code_No_Malekiat As String, ByVal Malek_Name As String, ByVal Malek_Family As String, ByVal Malek_Name_Pedar As String, ByVal Malek_SHsh As Integer, ByVal Malek_CodeMelli As String, ByVal Malek_MahalSodur As String, ByVal Malek_Address As String, ByVal Malek_Tel As String) As Select_Tbl_Moshakhasat_MalekinRow
            Dim rowSelect_Tbl_Moshakhasat_MalekinRow As Select_Tbl_Moshakhasat_MalekinRow = CType(Me.NewRow,Select_Tbl_Moshakhasat_MalekinRow)
            Dim columnValuesArray() As Object = New Object() {Shomare_Shenasnameh, Radif, Tarikh_Tamallok, No_Malekiyat_Code, No_Malekiyat_Tedad, Vaziyat_Tamallok, Code_No_Malekiat, Malek_Name, Malek_Family, Malek_Name_Pedar, Malek_SHsh, Malek_CodeMelli, Malek_MahalSodur, Malek_Address, Malek_Tel}
            rowSelect_Tbl_Moshakhasat_MalekinRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSelect_Tbl_Moshakhasat_MalekinRow)
            Return rowSelect_Tbl_Moshakhasat_MalekinRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Select_Tbl_Moshakhasat_MalekinDataTable = CType(MyBase.Clone,Select_Tbl_Moshakhasat_MalekinDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Select_Tbl_Moshakhasat_MalekinDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnShomare_Shenasnameh = MyBase.Columns("Shomare_Shenasnameh")
            Me.columnRadif = MyBase.Columns("Radif")
            Me.columnTarikh_Tamallok = MyBase.Columns("Tarikh_Tamallok")
            Me.columnNo_Malekiyat_Code = MyBase.Columns("No_Malekiyat_Code")
            Me.columnNo_Malekiyat_Tedad = MyBase.Columns("No_Malekiyat_Tedad")
            Me.columnVaziyat_Tamallok = MyBase.Columns("Vaziyat_Tamallok")
            Me.columnCode_No_Malekiat = MyBase.Columns("Code_No_Malekiat")
            Me.columnMalek_Name = MyBase.Columns("Malek_Name")
            Me.columnMalek_Family = MyBase.Columns("Malek_Family")
            Me.columnMalek_Name_Pedar = MyBase.Columns("Malek_Name_Pedar")
            Me.columnMalek_SHsh = MyBase.Columns("Malek_SHsh")
            Me.columnMalek_CodeMelli = MyBase.Columns("Malek_CodeMelli")
            Me.columnMalek_MahalSodur = MyBase.Columns("Malek_MahalSodur")
            Me.columnMalek_Address = MyBase.Columns("Malek_Address")
            Me.columnMalek_Tel = MyBase.Columns("Malek_Tel")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnShomare_Shenasnameh = New Global.System.Data.DataColumn("Shomare_Shenasnameh", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShomare_Shenasnameh)
            Me.columnRadif = New Global.System.Data.DataColumn("Radif", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRadif)
            Me.columnTarikh_Tamallok = New Global.System.Data.DataColumn("Tarikh_Tamallok", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTarikh_Tamallok)
            Me.columnNo_Malekiyat_Code = New Global.System.Data.DataColumn("No_Malekiyat_Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNo_Malekiyat_Code)
            Me.columnNo_Malekiyat_Tedad = New Global.System.Data.DataColumn("No_Malekiyat_Tedad", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNo_Malekiyat_Tedad)
            Me.columnVaziyat_Tamallok = New Global.System.Data.DataColumn("Vaziyat_Tamallok", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVaziyat_Tamallok)
            Me.columnCode_No_Malekiat = New Global.System.Data.DataColumn("Code_No_Malekiat", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCode_No_Malekiat)
            Me.columnMalek_Name = New Global.System.Data.DataColumn("Malek_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMalek_Name)
            Me.columnMalek_Family = New Global.System.Data.DataColumn("Malek_Family", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMalek_Family)
            Me.columnMalek_Name_Pedar = New Global.System.Data.DataColumn("Malek_Name_Pedar", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMalek_Name_Pedar)
            Me.columnMalek_SHsh = New Global.System.Data.DataColumn("Malek_SHsh", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMalek_SHsh)
            Me.columnMalek_CodeMelli = New Global.System.Data.DataColumn("Malek_CodeMelli", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMalek_CodeMelli)
            Me.columnMalek_MahalSodur = New Global.System.Data.DataColumn("Malek_MahalSodur", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMalek_MahalSodur)
            Me.columnMalek_Address = New Global.System.Data.DataColumn("Malek_Address", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMalek_Address)
            Me.columnMalek_Tel = New Global.System.Data.DataColumn("Malek_Tel", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMalek_Tel)
            Me.columnShomare_Shenasnameh.MaxLength = 27
            Me.columnTarikh_Tamallok.MaxLength = 8
            Me.columnNo_Malekiyat_Code.ReadOnly = true
            Me.columnNo_Malekiyat_Code.MaxLength = 50
            Me.columnVaziyat_Tamallok.ReadOnly = true
            Me.columnVaziyat_Tamallok.MaxLength = 50
            Me.columnCode_No_Malekiat.ReadOnly = true
            Me.columnCode_No_Malekiat.MaxLength = 50
            Me.columnMalek_Name.MaxLength = 30
            Me.columnMalek_Family.MaxLength = 35
            Me.columnMalek_Name_Pedar.MaxLength = 30
            Me.columnMalek_CodeMelli.MaxLength = 12
            Me.columnMalek_MahalSodur.MaxLength = 20
            Me.columnMalek_Address.MaxLength = 150
            Me.columnMalek_Tel.MaxLength = 30
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewSelect_Tbl_Moshakhasat_MalekinRow() As Select_Tbl_Moshakhasat_MalekinRow
            Return CType(Me.NewRow,Select_Tbl_Moshakhasat_MalekinRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Select_Tbl_Moshakhasat_MalekinRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Select_Tbl_Moshakhasat_MalekinRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Select_Tbl_Moshakhasat_MalekinRowChangedEvent) Is Nothing) Then
                RaiseEvent Select_Tbl_Moshakhasat_MalekinRowChanged(Me, New Select_Tbl_Moshakhasat_MalekinRowChangeEvent(CType(e.Row,Select_Tbl_Moshakhasat_MalekinRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Select_Tbl_Moshakhasat_MalekinRowChangingEvent) Is Nothing) Then
                RaiseEvent Select_Tbl_Moshakhasat_MalekinRowChanging(Me, New Select_Tbl_Moshakhasat_MalekinRowChangeEvent(CType(e.Row,Select_Tbl_Moshakhasat_MalekinRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Select_Tbl_Moshakhasat_MalekinRowDeletedEvent) Is Nothing) Then
                RaiseEvent Select_Tbl_Moshakhasat_MalekinRowDeleted(Me, New Select_Tbl_Moshakhasat_MalekinRowChangeEvent(CType(e.Row,Select_Tbl_Moshakhasat_MalekinRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Select_Tbl_Moshakhasat_MalekinRowDeletingEvent) Is Nothing) Then
                RaiseEvent Select_Tbl_Moshakhasat_MalekinRowDeleting(Me, New Select_Tbl_Moshakhasat_MalekinRowChangeEvent(CType(e.Row,Select_Tbl_Moshakhasat_MalekinRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveSelect_Tbl_Moshakhasat_MalekinRow(ByVal row As Select_Tbl_Moshakhasat_MalekinRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DB_NoSaziDataSet = New DB_NoSaziDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Select_Tbl_Moshakhasat_MalekinDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Tbl_Mahiyat_FizikiDataTable
        Inherits Global.System.Data.TypedTableBase(Of Tbl_Mahiyat_FizikiRow)
        
        Private columnShomare_Shenasnameh As Global.System.Data.DataColumn
        
        Private columnC300 As Global.System.Data.DataColumn
        
        Private columnC301 As Global.System.Data.DataColumn
        
        Private columnC302 As Global.System.Data.DataColumn
        
        Private columnC303 As Global.System.Data.DataColumn
        
        Private columnC304 As Global.System.Data.DataColumn
        
        Private columnC305 As Global.System.Data.DataColumn
        
        Private columnC306 As Global.System.Data.DataColumn
        
        Private columnC307 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Tbl_Mahiyat_Fiziki"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Shomare_ShenasnamehColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShomare_Shenasnameh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property C300Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC300
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property C301Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC301
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property C302Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC302
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property C303Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC303
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property C304Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC304
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property C305Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC305
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property C306Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC306
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property C307Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC307
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Tbl_Mahiyat_FizikiRow
            Get
                Return CType(Me.Rows(index),Tbl_Mahiyat_FizikiRow)
            End Get
        End Property
        
        Public Event Tbl_Mahiyat_FizikiRowChanging As Tbl_Mahiyat_FizikiRowChangeEventHandler
        
        Public Event Tbl_Mahiyat_FizikiRowChanged As Tbl_Mahiyat_FizikiRowChangeEventHandler
        
        Public Event Tbl_Mahiyat_FizikiRowDeleting As Tbl_Mahiyat_FizikiRowChangeEventHandler
        
        Public Event Tbl_Mahiyat_FizikiRowDeleted As Tbl_Mahiyat_FizikiRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddTbl_Mahiyat_FizikiRow(ByVal row As Tbl_Mahiyat_FizikiRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddTbl_Mahiyat_FizikiRow(ByVal Shomare_Shenasnameh As String, ByVal C300 As Boolean, ByVal C301 As Boolean, ByVal C302 As Boolean, ByVal C303 As Boolean, ByVal C304 As Boolean, ByVal C305 As Boolean, ByVal C306 As Boolean, ByVal C307 As Boolean) As Tbl_Mahiyat_FizikiRow
            Dim rowTbl_Mahiyat_FizikiRow As Tbl_Mahiyat_FizikiRow = CType(Me.NewRow,Tbl_Mahiyat_FizikiRow)
            Dim columnValuesArray() As Object = New Object() {Shomare_Shenasnameh, C300, C301, C302, C303, C304, C305, C306, C307}
            rowTbl_Mahiyat_FizikiRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTbl_Mahiyat_FizikiRow)
            Return rowTbl_Mahiyat_FizikiRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Tbl_Mahiyat_FizikiDataTable = CType(MyBase.Clone,Tbl_Mahiyat_FizikiDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Tbl_Mahiyat_FizikiDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnShomare_Shenasnameh = MyBase.Columns("Shomare_Shenasnameh")
            Me.columnC300 = MyBase.Columns("C300")
            Me.columnC301 = MyBase.Columns("C301")
            Me.columnC302 = MyBase.Columns("C302")
            Me.columnC303 = MyBase.Columns("C303")
            Me.columnC304 = MyBase.Columns("C304")
            Me.columnC305 = MyBase.Columns("C305")
            Me.columnC306 = MyBase.Columns("C306")
            Me.columnC307 = MyBase.Columns("C307")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnShomare_Shenasnameh = New Global.System.Data.DataColumn("Shomare_Shenasnameh", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShomare_Shenasnameh)
            Me.columnC300 = New Global.System.Data.DataColumn("C300", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC300)
            Me.columnC301 = New Global.System.Data.DataColumn("C301", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC301)
            Me.columnC302 = New Global.System.Data.DataColumn("C302", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC302)
            Me.columnC303 = New Global.System.Data.DataColumn("C303", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC303)
            Me.columnC304 = New Global.System.Data.DataColumn("C304", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC304)
            Me.columnC305 = New Global.System.Data.DataColumn("C305", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC305)
            Me.columnC306 = New Global.System.Data.DataColumn("C306", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC306)
            Me.columnC307 = New Global.System.Data.DataColumn("C307", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC307)
            Me.columnShomare_Shenasnameh.MaxLength = 27
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewTbl_Mahiyat_FizikiRow() As Tbl_Mahiyat_FizikiRow
            Return CType(Me.NewRow,Tbl_Mahiyat_FizikiRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Tbl_Mahiyat_FizikiRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Tbl_Mahiyat_FizikiRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Tbl_Mahiyat_FizikiRowChangedEvent) Is Nothing) Then
                RaiseEvent Tbl_Mahiyat_FizikiRowChanged(Me, New Tbl_Mahiyat_FizikiRowChangeEvent(CType(e.Row,Tbl_Mahiyat_FizikiRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Tbl_Mahiyat_FizikiRowChangingEvent) Is Nothing) Then
                RaiseEvent Tbl_Mahiyat_FizikiRowChanging(Me, New Tbl_Mahiyat_FizikiRowChangeEvent(CType(e.Row,Tbl_Mahiyat_FizikiRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Tbl_Mahiyat_FizikiRowDeletedEvent) Is Nothing) Then
                RaiseEvent Tbl_Mahiyat_FizikiRowDeleted(Me, New Tbl_Mahiyat_FizikiRowChangeEvent(CType(e.Row,Tbl_Mahiyat_FizikiRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Tbl_Mahiyat_FizikiRowDeletingEvent) Is Nothing) Then
                RaiseEvent Tbl_Mahiyat_FizikiRowDeleting(Me, New Tbl_Mahiyat_FizikiRowChangeEvent(CType(e.Row,Tbl_Mahiyat_FizikiRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveTbl_Mahiyat_FizikiRow(ByVal row As Tbl_Mahiyat_FizikiRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DB_NoSaziDataSet = New DB_NoSaziDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Tbl_Mahiyat_FizikiDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Select_Tbl_Mahiyat_FizikiDataTable
        Inherits Global.System.Data.TypedTableBase(Of Select_Tbl_Mahiyat_FizikiRow)
        
        Private columnShomare_Shenasnameh As Global.System.Data.DataColumn
        
        Private columnC300 As Global.System.Data.DataColumn
        
        Private columnC301 As Global.System.Data.DataColumn
        
        Private columnC302 As Global.System.Data.DataColumn
        
        Private columnC303 As Global.System.Data.DataColumn
        
        Private columnC304 As Global.System.Data.DataColumn
        
        Private columnC305 As Global.System.Data.DataColumn
        
        Private columnC306 As Global.System.Data.DataColumn
        
        Private columnC307 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Select_Tbl_Mahiyat_Fiziki"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Shomare_ShenasnamehColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShomare_Shenasnameh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property C300Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC300
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property C301Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC301
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property C302Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC302
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property C303Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC303
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property C304Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC304
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property C305Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC305
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property C306Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC306
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property C307Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC307
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Select_Tbl_Mahiyat_FizikiRow
            Get
                Return CType(Me.Rows(index),Select_Tbl_Mahiyat_FizikiRow)
            End Get
        End Property
        
        Public Event Select_Tbl_Mahiyat_FizikiRowChanging As Select_Tbl_Mahiyat_FizikiRowChangeEventHandler
        
        Public Event Select_Tbl_Mahiyat_FizikiRowChanged As Select_Tbl_Mahiyat_FizikiRowChangeEventHandler
        
        Public Event Select_Tbl_Mahiyat_FizikiRowDeleting As Select_Tbl_Mahiyat_FizikiRowChangeEventHandler
        
        Public Event Select_Tbl_Mahiyat_FizikiRowDeleted As Select_Tbl_Mahiyat_FizikiRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddSelect_Tbl_Mahiyat_FizikiRow(ByVal row As Select_Tbl_Mahiyat_FizikiRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddSelect_Tbl_Mahiyat_FizikiRow(ByVal Shomare_Shenasnameh As String, ByVal C300 As Boolean, ByVal C301 As Boolean, ByVal C302 As Boolean, ByVal C303 As Boolean, ByVal C304 As Boolean, ByVal C305 As Boolean, ByVal C306 As Boolean, ByVal C307 As Boolean) As Select_Tbl_Mahiyat_FizikiRow
            Dim rowSelect_Tbl_Mahiyat_FizikiRow As Select_Tbl_Mahiyat_FizikiRow = CType(Me.NewRow,Select_Tbl_Mahiyat_FizikiRow)
            Dim columnValuesArray() As Object = New Object() {Shomare_Shenasnameh, C300, C301, C302, C303, C304, C305, C306, C307}
            rowSelect_Tbl_Mahiyat_FizikiRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSelect_Tbl_Mahiyat_FizikiRow)
            Return rowSelect_Tbl_Mahiyat_FizikiRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Select_Tbl_Mahiyat_FizikiDataTable = CType(MyBase.Clone,Select_Tbl_Mahiyat_FizikiDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Select_Tbl_Mahiyat_FizikiDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnShomare_Shenasnameh = MyBase.Columns("Shomare_Shenasnameh")
            Me.columnC300 = MyBase.Columns("C300")
            Me.columnC301 = MyBase.Columns("C301")
            Me.columnC302 = MyBase.Columns("C302")
            Me.columnC303 = MyBase.Columns("C303")
            Me.columnC304 = MyBase.Columns("C304")
            Me.columnC305 = MyBase.Columns("C305")
            Me.columnC306 = MyBase.Columns("C306")
            Me.columnC307 = MyBase.Columns("C307")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnShomare_Shenasnameh = New Global.System.Data.DataColumn("Shomare_Shenasnameh", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShomare_Shenasnameh)
            Me.columnC300 = New Global.System.Data.DataColumn("C300", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC300)
            Me.columnC301 = New Global.System.Data.DataColumn("C301", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC301)
            Me.columnC302 = New Global.System.Data.DataColumn("C302", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC302)
            Me.columnC303 = New Global.System.Data.DataColumn("C303", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC303)
            Me.columnC304 = New Global.System.Data.DataColumn("C304", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC304)
            Me.columnC305 = New Global.System.Data.DataColumn("C305", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC305)
            Me.columnC306 = New Global.System.Data.DataColumn("C306", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC306)
            Me.columnC307 = New Global.System.Data.DataColumn("C307", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC307)
            Me.columnShomare_Shenasnameh.MaxLength = 27
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewSelect_Tbl_Mahiyat_FizikiRow() As Select_Tbl_Mahiyat_FizikiRow
            Return CType(Me.NewRow,Select_Tbl_Mahiyat_FizikiRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Select_Tbl_Mahiyat_FizikiRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Select_Tbl_Mahiyat_FizikiRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Select_Tbl_Mahiyat_FizikiRowChangedEvent) Is Nothing) Then
                RaiseEvent Select_Tbl_Mahiyat_FizikiRowChanged(Me, New Select_Tbl_Mahiyat_FizikiRowChangeEvent(CType(e.Row,Select_Tbl_Mahiyat_FizikiRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Select_Tbl_Mahiyat_FizikiRowChangingEvent) Is Nothing) Then
                RaiseEvent Select_Tbl_Mahiyat_FizikiRowChanging(Me, New Select_Tbl_Mahiyat_FizikiRowChangeEvent(CType(e.Row,Select_Tbl_Mahiyat_FizikiRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Select_Tbl_Mahiyat_FizikiRowDeletedEvent) Is Nothing) Then
                RaiseEvent Select_Tbl_Mahiyat_FizikiRowDeleted(Me, New Select_Tbl_Mahiyat_FizikiRowChangeEvent(CType(e.Row,Select_Tbl_Mahiyat_FizikiRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Select_Tbl_Mahiyat_FizikiRowDeletingEvent) Is Nothing) Then
                RaiseEvent Select_Tbl_Mahiyat_FizikiRowDeleting(Me, New Select_Tbl_Mahiyat_FizikiRowChangeEvent(CType(e.Row,Select_Tbl_Mahiyat_FizikiRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveSelect_Tbl_Mahiyat_FizikiRow(ByVal row As Select_Tbl_Mahiyat_FizikiRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DB_NoSaziDataSet = New DB_NoSaziDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Select_Tbl_Mahiyat_FizikiDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Tbl_No_EstefadehDataTable
        Inherits Global.System.Data.TypedTableBase(Of Tbl_No_EstefadehRow)
        
        Private columnShomare_Shenasnameh As Global.System.Data.DataColumn
        
        Private columnC350 As Global.System.Data.DataColumn
        
        Private columnC351 As Global.System.Data.DataColumn
        
        Private columnC352 As Global.System.Data.DataColumn
        
        Private columnC353 As Global.System.Data.DataColumn
        
        Private columnC354 As Global.System.Data.DataColumn
        
        Private columnC355 As Global.System.Data.DataColumn
        
        Private columnC356 As Global.System.Data.DataColumn
        
        Private columnC357 As Global.System.Data.DataColumn
        
        Private columnC358 As Global.System.Data.DataColumn
        
        Private columnC359 As Global.System.Data.DataColumn
        
        Private columnC360 As Global.System.Data.DataColumn
        
        Private columnC361 As Global.System.Data.DataColumn
        
        Private columnC362 As Global.System.Data.DataColumn
        
        Private columnC363 As Global.System.Data.DataColumn
        
        Private columnC364 As Global.System.Data.DataColumn
        
        Private columnC365 As Global.System.Data.DataColumn
        
        Private columnC366 As Global.System.Data.DataColumn
        
        Private columnC367 As Global.System.Data.DataColumn
        
        Private columnC368 As Global.System.Data.DataColumn
        
        Private columnC369 As Global.System.Data.DataColumn
        
        Private columnC370 As Global.System.Data.DataColumn
        
        Private columnC371 As Global.System.Data.DataColumn
        
        Private columnC372 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Tbl_No_Estefadeh"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Shomare_ShenasnamehColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShomare_Shenasnameh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property C350Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC350
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property C351Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC351
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property C352Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC352
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property C353Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC353
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property C354Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC354
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property C355Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC355
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property C356Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC356
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property C357Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC357
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property C358Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC358
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property C359Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC359
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property C360Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC360
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property C361Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC361
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property C362Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC362
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property C363Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC363
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property C364Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC364
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property C365Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC365
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property C366Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC366
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property C367Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC367
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property C368Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC368
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property C369Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC369
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property C370Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC370
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property C371Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC371
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property C372Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC372
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Tbl_No_EstefadehRow
            Get
                Return CType(Me.Rows(index),Tbl_No_EstefadehRow)
            End Get
        End Property
        
        Public Event Tbl_No_EstefadehRowChanging As Tbl_No_EstefadehRowChangeEventHandler
        
        Public Event Tbl_No_EstefadehRowChanged As Tbl_No_EstefadehRowChangeEventHandler
        
        Public Event Tbl_No_EstefadehRowDeleting As Tbl_No_EstefadehRowChangeEventHandler
        
        Public Event Tbl_No_EstefadehRowDeleted As Tbl_No_EstefadehRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddTbl_No_EstefadehRow(ByVal row As Tbl_No_EstefadehRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddTbl_No_EstefadehRow( _
                    ByVal Shomare_Shenasnameh As String,  _
                    ByVal C350 As Boolean,  _
                    ByVal C351 As Boolean,  _
                    ByVal C352 As Boolean,  _
                    ByVal C353 As Boolean,  _
                    ByVal C354 As Boolean,  _
                    ByVal C355 As Boolean,  _
                    ByVal C356 As Boolean,  _
                    ByVal C357 As Boolean,  _
                    ByVal C358 As Boolean,  _
                    ByVal C359 As Boolean,  _
                    ByVal C360 As Boolean,  _
                    ByVal C361 As Boolean,  _
                    ByVal C362 As Boolean,  _
                    ByVal C363 As Boolean,  _
                    ByVal C364 As Boolean,  _
                    ByVal C365 As Boolean,  _
                    ByVal C366 As Boolean,  _
                    ByVal C367 As Boolean,  _
                    ByVal C368 As Boolean,  _
                    ByVal C369 As Boolean,  _
                    ByVal C370 As Boolean,  _
                    ByVal C371 As Boolean,  _
                    ByVal C372 As Boolean) As Tbl_No_EstefadehRow
            Dim rowTbl_No_EstefadehRow As Tbl_No_EstefadehRow = CType(Me.NewRow,Tbl_No_EstefadehRow)
            Dim columnValuesArray() As Object = New Object() {Shomare_Shenasnameh, C350, C351, C352, C353, C354, C355, C356, C357, C358, C359, C360, C361, C362, C363, C364, C365, C366, C367, C368, C369, C370, C371, C372}
            rowTbl_No_EstefadehRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTbl_No_EstefadehRow)
            Return rowTbl_No_EstefadehRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Tbl_No_EstefadehDataTable = CType(MyBase.Clone,Tbl_No_EstefadehDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Tbl_No_EstefadehDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnShomare_Shenasnameh = MyBase.Columns("Shomare_Shenasnameh")
            Me.columnC350 = MyBase.Columns("C350")
            Me.columnC351 = MyBase.Columns("C351")
            Me.columnC352 = MyBase.Columns("C352")
            Me.columnC353 = MyBase.Columns("C353")
            Me.columnC354 = MyBase.Columns("C354")
            Me.columnC355 = MyBase.Columns("C355")
            Me.columnC356 = MyBase.Columns("C356")
            Me.columnC357 = MyBase.Columns("C357")
            Me.columnC358 = MyBase.Columns("C358")
            Me.columnC359 = MyBase.Columns("C359")
            Me.columnC360 = MyBase.Columns("C360")
            Me.columnC361 = MyBase.Columns("C361")
            Me.columnC362 = MyBase.Columns("C362")
            Me.columnC363 = MyBase.Columns("C363")
            Me.columnC364 = MyBase.Columns("C364")
            Me.columnC365 = MyBase.Columns("C365")
            Me.columnC366 = MyBase.Columns("C366")
            Me.columnC367 = MyBase.Columns("C367")
            Me.columnC368 = MyBase.Columns("C368")
            Me.columnC369 = MyBase.Columns("C369")
            Me.columnC370 = MyBase.Columns("C370")
            Me.columnC371 = MyBase.Columns("C371")
            Me.columnC372 = MyBase.Columns("C372")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnShomare_Shenasnameh = New Global.System.Data.DataColumn("Shomare_Shenasnameh", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShomare_Shenasnameh)
            Me.columnC350 = New Global.System.Data.DataColumn("C350", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC350)
            Me.columnC351 = New Global.System.Data.DataColumn("C351", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC351)
            Me.columnC352 = New Global.System.Data.DataColumn("C352", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC352)
            Me.columnC353 = New Global.System.Data.DataColumn("C353", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC353)
            Me.columnC354 = New Global.System.Data.DataColumn("C354", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC354)
            Me.columnC355 = New Global.System.Data.DataColumn("C355", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC355)
            Me.columnC356 = New Global.System.Data.DataColumn("C356", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC356)
            Me.columnC357 = New Global.System.Data.DataColumn("C357", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC357)
            Me.columnC358 = New Global.System.Data.DataColumn("C358", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC358)
            Me.columnC359 = New Global.System.Data.DataColumn("C359", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC359)
            Me.columnC360 = New Global.System.Data.DataColumn("C360", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC360)
            Me.columnC361 = New Global.System.Data.DataColumn("C361", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC361)
            Me.columnC362 = New Global.System.Data.DataColumn("C362", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC362)
            Me.columnC363 = New Global.System.Data.DataColumn("C363", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC363)
            Me.columnC364 = New Global.System.Data.DataColumn("C364", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC364)
            Me.columnC365 = New Global.System.Data.DataColumn("C365", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC365)
            Me.columnC366 = New Global.System.Data.DataColumn("C366", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC366)
            Me.columnC367 = New Global.System.Data.DataColumn("C367", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC367)
            Me.columnC368 = New Global.System.Data.DataColumn("C368", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC368)
            Me.columnC369 = New Global.System.Data.DataColumn("C369", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC369)
            Me.columnC370 = New Global.System.Data.DataColumn("C370", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC370)
            Me.columnC371 = New Global.System.Data.DataColumn("C371", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC371)
            Me.columnC372 = New Global.System.Data.DataColumn("C372", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC372)
            Me.columnShomare_Shenasnameh.MaxLength = 27
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewTbl_No_EstefadehRow() As Tbl_No_EstefadehRow
            Return CType(Me.NewRow,Tbl_No_EstefadehRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Tbl_No_EstefadehRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Tbl_No_EstefadehRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Tbl_No_EstefadehRowChangedEvent) Is Nothing) Then
                RaiseEvent Tbl_No_EstefadehRowChanged(Me, New Tbl_No_EstefadehRowChangeEvent(CType(e.Row,Tbl_No_EstefadehRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Tbl_No_EstefadehRowChangingEvent) Is Nothing) Then
                RaiseEvent Tbl_No_EstefadehRowChanging(Me, New Tbl_No_EstefadehRowChangeEvent(CType(e.Row,Tbl_No_EstefadehRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Tbl_No_EstefadehRowDeletedEvent) Is Nothing) Then
                RaiseEvent Tbl_No_EstefadehRowDeleted(Me, New Tbl_No_EstefadehRowChangeEvent(CType(e.Row,Tbl_No_EstefadehRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Tbl_No_EstefadehRowDeletingEvent) Is Nothing) Then
                RaiseEvent Tbl_No_EstefadehRowDeleting(Me, New Tbl_No_EstefadehRowChangeEvent(CType(e.Row,Tbl_No_EstefadehRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveTbl_No_EstefadehRow(ByVal row As Tbl_No_EstefadehRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DB_NoSaziDataSet = New DB_NoSaziDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Tbl_No_EstefadehDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TAmlakDataTable
        Inherits Global.System.Data.TypedTableBase(Of TAmlakRow)
        
        Private columnSHsh As Global.System.Data.DataColumn
        
        Private columnKasri As Global.System.Data.DataColumn
        
        Private columnEzafat As Global.System.Data.DataColumn
        
        Private columnNo_Melk As Global.System.Data.DataColumn
        
        Private columnMasahat_ZirBana As Global.System.Data.DataColumn
        
        Private columnTedad_vahed As Global.System.Data.DataColumn
        
        Private columnMasahat_Bana As Global.System.Data.DataColumn
        
        Private columnArzesh_Moamelati As Global.System.Data.DataColumn
        
        Private columnTKasri_Zamin As Global.System.Data.DataColumn
        
        Private columnTAzafe_tarakom As Global.System.Data.DataColumn
        
        Private columnTHagh_Nezareh As Global.System.Data.DataColumn
        
        Private columnTSodore_ParvanehAnboh As Global.System.Data.DataColumn
        
        Private columnTSodore_ParvanehVilaie As Global.System.Data.DataColumn
        
        Private columnTSath_Shahr As Global.System.Data.DataColumn
        
        Private columnTNosazi As Global.System.Data.DataColumn
        
        Private columnTTamirat As Global.System.Data.DataColumn
        
        Private columnTTransfer As Global.System.Data.DataColumn
        
        Private columnTPazireh As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TAmlak"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SHshColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSHsh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property KasriColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKasri
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EzafatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEzafat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property No_MelkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNo_Melk
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Masahat_ZirBanaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMasahat_ZirBana
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Tedad_vahedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTedad_vahed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Masahat_BanaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMasahat_Bana
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Arzesh_MoamelatiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnArzesh_Moamelati
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TKasri_ZaminColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTKasri_Zamin
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TAzafe_tarakomColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTAzafe_tarakom
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property THagh_NezarehColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTHagh_Nezareh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TSodore_ParvanehAnbohColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTSodore_ParvanehAnboh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TSodore_ParvanehVilaieColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTSodore_ParvanehVilaie
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TSath_ShahrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTSath_Shahr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TNosaziColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTNosazi
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TTamiratColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTTamirat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TTransferColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTTransfer
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TPazirehColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTPazireh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TAmlakRow
            Get
                Return CType(Me.Rows(index),TAmlakRow)
            End Get
        End Property
        
        Public Event TAmlakRowChanging As TAmlakRowChangeEventHandler
        
        Public Event TAmlakRowChanged As TAmlakRowChangeEventHandler
        
        Public Event TAmlakRowDeleting As TAmlakRowChangeEventHandler
        
        Public Event TAmlakRowDeleted As TAmlakRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddTAmlakRow(ByVal row As TAmlakRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddTAmlakRow( _
                    ByVal SHsh As String,  _
                    ByVal Kasri As Single,  _
                    ByVal Ezafat As Single,  _
                    ByVal No_Melk As Byte,  _
                    ByVal Masahat_ZirBana As Single,  _
                    ByVal Tedad_vahed As Integer,  _
                    ByVal Masahat_Bana As Single,  _
                    ByVal Arzesh_Moamelati As Single,  _
                    ByVal TKasri_Zamin As Boolean,  _
                    ByVal TAzafe_tarakom As Boolean,  _
                    ByVal THagh_Nezareh As Boolean,  _
                    ByVal TSodore_ParvanehAnboh As Boolean,  _
                    ByVal TSodore_ParvanehVilaie As Boolean,  _
                    ByVal TSath_Shahr As String,  _
                    ByVal TNosazi As String,  _
                    ByVal TTamirat As String,  _
                    ByVal TTransfer As Boolean,  _
                    ByVal TPazireh As Boolean) As TAmlakRow
            Dim rowTAmlakRow As TAmlakRow = CType(Me.NewRow,TAmlakRow)
            Dim columnValuesArray() As Object = New Object() {SHsh, Kasri, Ezafat, No_Melk, Masahat_ZirBana, Tedad_vahed, Masahat_Bana, Arzesh_Moamelati, TKasri_Zamin, TAzafe_tarakom, THagh_Nezareh, TSodore_ParvanehAnboh, TSodore_ParvanehVilaie, TSath_Shahr, TNosazi, TTamirat, TTransfer, TPazireh}
            rowTAmlakRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTAmlakRow)
            Return rowTAmlakRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TAmlakDataTable = CType(MyBase.Clone,TAmlakDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TAmlakDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnSHsh = MyBase.Columns("SHsh")
            Me.columnKasri = MyBase.Columns("Kasri")
            Me.columnEzafat = MyBase.Columns("Ezafat")
            Me.columnNo_Melk = MyBase.Columns("No_Melk")
            Me.columnMasahat_ZirBana = MyBase.Columns("Masahat_ZirBana")
            Me.columnTedad_vahed = MyBase.Columns("Tedad_vahed")
            Me.columnMasahat_Bana = MyBase.Columns("Masahat_Bana")
            Me.columnArzesh_Moamelati = MyBase.Columns("Arzesh_Moamelati")
            Me.columnTKasri_Zamin = MyBase.Columns("TKasri_Zamin")
            Me.columnTAzafe_tarakom = MyBase.Columns("TAzafe_tarakom")
            Me.columnTHagh_Nezareh = MyBase.Columns("THagh_Nezareh")
            Me.columnTSodore_ParvanehAnboh = MyBase.Columns("TSodore_ParvanehAnboh")
            Me.columnTSodore_ParvanehVilaie = MyBase.Columns("TSodore_ParvanehVilaie")
            Me.columnTSath_Shahr = MyBase.Columns("TSath_Shahr")
            Me.columnTNosazi = MyBase.Columns("TNosazi")
            Me.columnTTamirat = MyBase.Columns("TTamirat")
            Me.columnTTransfer = MyBase.Columns("TTransfer")
            Me.columnTPazireh = MyBase.Columns("TPazireh")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnSHsh = New Global.System.Data.DataColumn("SHsh", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSHsh)
            Me.columnKasri = New Global.System.Data.DataColumn("Kasri", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKasri)
            Me.columnEzafat = New Global.System.Data.DataColumn("Ezafat", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEzafat)
            Me.columnNo_Melk = New Global.System.Data.DataColumn("No_Melk", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNo_Melk)
            Me.columnMasahat_ZirBana = New Global.System.Data.DataColumn("Masahat_ZirBana", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMasahat_ZirBana)
            Me.columnTedad_vahed = New Global.System.Data.DataColumn("Tedad_vahed", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTedad_vahed)
            Me.columnMasahat_Bana = New Global.System.Data.DataColumn("Masahat_Bana", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMasahat_Bana)
            Me.columnArzesh_Moamelati = New Global.System.Data.DataColumn("Arzesh_Moamelati", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArzesh_Moamelati)
            Me.columnTKasri_Zamin = New Global.System.Data.DataColumn("TKasri_Zamin", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTKasri_Zamin)
            Me.columnTAzafe_tarakom = New Global.System.Data.DataColumn("TAzafe_tarakom", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTAzafe_tarakom)
            Me.columnTHagh_Nezareh = New Global.System.Data.DataColumn("THagh_Nezareh", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTHagh_Nezareh)
            Me.columnTSodore_ParvanehAnboh = New Global.System.Data.DataColumn("TSodore_ParvanehAnboh", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTSodore_ParvanehAnboh)
            Me.columnTSodore_ParvanehVilaie = New Global.System.Data.DataColumn("TSodore_ParvanehVilaie", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTSodore_ParvanehVilaie)
            Me.columnTSath_Shahr = New Global.System.Data.DataColumn("TSath_Shahr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTSath_Shahr)
            Me.columnTNosazi = New Global.System.Data.DataColumn("TNosazi", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTNosazi)
            Me.columnTTamirat = New Global.System.Data.DataColumn("TTamirat", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTTamirat)
            Me.columnTTransfer = New Global.System.Data.DataColumn("TTransfer", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTTransfer)
            Me.columnTPazireh = New Global.System.Data.DataColumn("TPazireh", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTPazireh)
            Me.columnSHsh.MaxLength = 27
            Me.columnTSath_Shahr.MaxLength = 10
            Me.columnTNosazi.MaxLength = 10
            Me.columnTTamirat.MaxLength = 10
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewTAmlakRow() As TAmlakRow
            Return CType(Me.NewRow,TAmlakRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TAmlakRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TAmlakRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TAmlakRowChangedEvent) Is Nothing) Then
                RaiseEvent TAmlakRowChanged(Me, New TAmlakRowChangeEvent(CType(e.Row,TAmlakRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TAmlakRowChangingEvent) Is Nothing) Then
                RaiseEvent TAmlakRowChanging(Me, New TAmlakRowChangeEvent(CType(e.Row,TAmlakRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TAmlakRowDeletedEvent) Is Nothing) Then
                RaiseEvent TAmlakRowDeleted(Me, New TAmlakRowChangeEvent(CType(e.Row,TAmlakRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TAmlakRowDeletingEvent) Is Nothing) Then
                RaiseEvent TAmlakRowDeleting(Me, New TAmlakRowChangeEvent(CType(e.Row,TAmlakRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveTAmlakRow(ByVal row As TAmlakRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DB_NoSaziDataSet = New DB_NoSaziDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TAmlakDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Tbl_Moshakhasat_Zamin1DataTable
        Inherits Global.System.Data.TypedTableBase(Of Tbl_Moshakhasat_Zamin1Row)
        
        Private columnShomare_Shenasnameh As Global.System.Data.DataColumn
        
        Private columnRadif As Global.System.Data.DataColumn
        
        Private columnJahat As Global.System.Data.DataColumn
        
        Private columnTool_Zel As Global.System.Data.DataColumn
        
        Private columnTool_Bar As Global.System.Data.DataColumn
        
        Private columnMaAbar_Name As Global.System.Data.DataColumn
        
        Private columnMaAbar_Arz As Global.System.Data.DataColumn
        
        Private columnMaAbar_radif As Global.System.Data.DataColumn
        
        Private columnzavieh As Global.System.Data.DataColumn
        
        Private columnMasahat_jebheh1 As Global.System.Data.DataColumn
        
        Private columnMasahat_Jebheh2 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Tbl_Moshakhasat_Zamin1"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Shomare_ShenasnamehColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShomare_Shenasnameh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RadifColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRadif
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property JahatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJahat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Tool_ZelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTool_Zel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Tool_BarColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTool_Bar
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MaAbar_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaAbar_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MaAbar_ArzColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaAbar_Arz
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MaAbar_radifColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaAbar_radif
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property zaviehColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnzavieh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Masahat_jebheh1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMasahat_jebheh1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Masahat_Jebheh2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMasahat_Jebheh2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Tbl_Moshakhasat_Zamin1Row
            Get
                Return CType(Me.Rows(index),Tbl_Moshakhasat_Zamin1Row)
            End Get
        End Property
        
        Public Event Tbl_Moshakhasat_Zamin1RowChanging As Tbl_Moshakhasat_Zamin1RowChangeEventHandler
        
        Public Event Tbl_Moshakhasat_Zamin1RowChanged As Tbl_Moshakhasat_Zamin1RowChangeEventHandler
        
        Public Event Tbl_Moshakhasat_Zamin1RowDeleting As Tbl_Moshakhasat_Zamin1RowChangeEventHandler
        
        Public Event Tbl_Moshakhasat_Zamin1RowDeleted As Tbl_Moshakhasat_Zamin1RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddTbl_Moshakhasat_Zamin1Row(ByVal row As Tbl_Moshakhasat_Zamin1Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddTbl_Moshakhasat_Zamin1Row(ByVal Shomare_Shenasnameh As String, ByVal Radif As Byte, ByVal Jahat As String, ByVal Tool_Zel As Single, ByVal Tool_Bar As Single, ByVal MaAbar_Name As String, ByVal MaAbar_Arz As Single, ByVal MaAbar_radif As Byte, ByVal zavieh As Integer, ByVal Masahat_jebheh1 As Single, ByVal Masahat_Jebheh2 As Single) As Tbl_Moshakhasat_Zamin1Row
            Dim rowTbl_Moshakhasat_Zamin1Row As Tbl_Moshakhasat_Zamin1Row = CType(Me.NewRow,Tbl_Moshakhasat_Zamin1Row)
            Dim columnValuesArray() As Object = New Object() {Shomare_Shenasnameh, Radif, Jahat, Tool_Zel, Tool_Bar, MaAbar_Name, MaAbar_Arz, MaAbar_radif, zavieh, Masahat_jebheh1, Masahat_Jebheh2}
            rowTbl_Moshakhasat_Zamin1Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowTbl_Moshakhasat_Zamin1Row)
            Return rowTbl_Moshakhasat_Zamin1Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Tbl_Moshakhasat_Zamin1DataTable = CType(MyBase.Clone,Tbl_Moshakhasat_Zamin1DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Tbl_Moshakhasat_Zamin1DataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnShomare_Shenasnameh = MyBase.Columns("Shomare_Shenasnameh")
            Me.columnRadif = MyBase.Columns("Radif")
            Me.columnJahat = MyBase.Columns("Jahat")
            Me.columnTool_Zel = MyBase.Columns("Tool_Zel")
            Me.columnTool_Bar = MyBase.Columns("Tool_Bar")
            Me.columnMaAbar_Name = MyBase.Columns("MaAbar_Name")
            Me.columnMaAbar_Arz = MyBase.Columns("MaAbar_Arz")
            Me.columnMaAbar_radif = MyBase.Columns("MaAbar_radif")
            Me.columnzavieh = MyBase.Columns("zavieh")
            Me.columnMasahat_jebheh1 = MyBase.Columns("Masahat_jebheh1")
            Me.columnMasahat_Jebheh2 = MyBase.Columns("Masahat_Jebheh2")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnShomare_Shenasnameh = New Global.System.Data.DataColumn("Shomare_Shenasnameh", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShomare_Shenasnameh)
            Me.columnRadif = New Global.System.Data.DataColumn("Radif", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRadif)
            Me.columnJahat = New Global.System.Data.DataColumn("Jahat", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJahat)
            Me.columnTool_Zel = New Global.System.Data.DataColumn("Tool_Zel", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTool_Zel)
            Me.columnTool_Bar = New Global.System.Data.DataColumn("Tool_Bar", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTool_Bar)
            Me.columnMaAbar_Name = New Global.System.Data.DataColumn("MaAbar_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaAbar_Name)
            Me.columnMaAbar_Arz = New Global.System.Data.DataColumn("MaAbar_Arz", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaAbar_Arz)
            Me.columnMaAbar_radif = New Global.System.Data.DataColumn("MaAbar_radif", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaAbar_radif)
            Me.columnzavieh = New Global.System.Data.DataColumn("zavieh", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnzavieh)
            Me.columnMasahat_jebheh1 = New Global.System.Data.DataColumn("Masahat_jebheh1", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMasahat_jebheh1)
            Me.columnMasahat_Jebheh2 = New Global.System.Data.DataColumn("Masahat_Jebheh2", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMasahat_Jebheh2)
            Me.columnShomare_Shenasnameh.MaxLength = 27
            Me.columnJahat.MaxLength = 3
            Me.columnMaAbar_Name.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewTbl_Moshakhasat_Zamin1Row() As Tbl_Moshakhasat_Zamin1Row
            Return CType(Me.NewRow,Tbl_Moshakhasat_Zamin1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Tbl_Moshakhasat_Zamin1Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Tbl_Moshakhasat_Zamin1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Tbl_Moshakhasat_Zamin1RowChangedEvent) Is Nothing) Then
                RaiseEvent Tbl_Moshakhasat_Zamin1RowChanged(Me, New Tbl_Moshakhasat_Zamin1RowChangeEvent(CType(e.Row,Tbl_Moshakhasat_Zamin1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Tbl_Moshakhasat_Zamin1RowChangingEvent) Is Nothing) Then
                RaiseEvent Tbl_Moshakhasat_Zamin1RowChanging(Me, New Tbl_Moshakhasat_Zamin1RowChangeEvent(CType(e.Row,Tbl_Moshakhasat_Zamin1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Tbl_Moshakhasat_Zamin1RowDeletedEvent) Is Nothing) Then
                RaiseEvent Tbl_Moshakhasat_Zamin1RowDeleted(Me, New Tbl_Moshakhasat_Zamin1RowChangeEvent(CType(e.Row,Tbl_Moshakhasat_Zamin1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Tbl_Moshakhasat_Zamin1RowDeletingEvent) Is Nothing) Then
                RaiseEvent Tbl_Moshakhasat_Zamin1RowDeleting(Me, New Tbl_Moshakhasat_Zamin1RowChangeEvent(CType(e.Row,Tbl_Moshakhasat_Zamin1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveTbl_Moshakhasat_Zamin1Row(ByVal row As Tbl_Moshakhasat_Zamin1Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DB_NoSaziDataSet = New DB_NoSaziDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Tbl_Moshakhasat_Zamin1DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Tbl_Moshakhasat_Zamin2DataTable
        Inherits Global.System.Data.TypedTableBase(Of Tbl_Moshakhasat_Zamin2Row)
        
        Private columnShomare_Shenasnameh As Global.System.Data.DataColumn
        
        Private columnRadif As Global.System.Data.DataColumn
        
        Private columnJahat As Global.System.Data.DataColumn
        
        Private columnTool_Zel As Global.System.Data.DataColumn
        
        Private columnTool_Bar As Global.System.Data.DataColumn
        
        Private columnMaAbar_Name As Global.System.Data.DataColumn
        
        Private columnMaAbar_Arz As Global.System.Data.DataColumn
        
        Private columnMaAbar_radif As Global.System.Data.DataColumn
        
        Private columnzavieh As Global.System.Data.DataColumn
        
        Private columnMasahat_jebheh1 As Global.System.Data.DataColumn
        
        Private columnMasahat_Jebheh2 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Tbl_Moshakhasat_Zamin2"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Shomare_ShenasnamehColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShomare_Shenasnameh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RadifColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRadif
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property JahatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJahat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Tool_ZelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTool_Zel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Tool_BarColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTool_Bar
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MaAbar_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaAbar_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MaAbar_ArzColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaAbar_Arz
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MaAbar_radifColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaAbar_radif
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property zaviehColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnzavieh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Masahat_jebheh1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMasahat_jebheh1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Masahat_Jebheh2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMasahat_Jebheh2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Tbl_Moshakhasat_Zamin2Row
            Get
                Return CType(Me.Rows(index),Tbl_Moshakhasat_Zamin2Row)
            End Get
        End Property
        
        Public Event Tbl_Moshakhasat_Zamin2RowChanging As Tbl_Moshakhasat_Zamin2RowChangeEventHandler
        
        Public Event Tbl_Moshakhasat_Zamin2RowChanged As Tbl_Moshakhasat_Zamin2RowChangeEventHandler
        
        Public Event Tbl_Moshakhasat_Zamin2RowDeleting As Tbl_Moshakhasat_Zamin2RowChangeEventHandler
        
        Public Event Tbl_Moshakhasat_Zamin2RowDeleted As Tbl_Moshakhasat_Zamin2RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddTbl_Moshakhasat_Zamin2Row(ByVal row As Tbl_Moshakhasat_Zamin2Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddTbl_Moshakhasat_Zamin2Row(ByVal Shomare_Shenasnameh As String, ByVal Radif As Byte, ByVal Jahat As String, ByVal Tool_Zel As Single, ByVal Tool_Bar As Single, ByVal MaAbar_Name As String, ByVal MaAbar_Arz As Single, ByVal MaAbar_radif As Byte, ByVal zavieh As Integer, ByVal Masahat_jebheh1 As Single, ByVal Masahat_Jebheh2 As Single) As Tbl_Moshakhasat_Zamin2Row
            Dim rowTbl_Moshakhasat_Zamin2Row As Tbl_Moshakhasat_Zamin2Row = CType(Me.NewRow,Tbl_Moshakhasat_Zamin2Row)
            Dim columnValuesArray() As Object = New Object() {Shomare_Shenasnameh, Radif, Jahat, Tool_Zel, Tool_Bar, MaAbar_Name, MaAbar_Arz, MaAbar_radif, zavieh, Masahat_jebheh1, Masahat_Jebheh2}
            rowTbl_Moshakhasat_Zamin2Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowTbl_Moshakhasat_Zamin2Row)
            Return rowTbl_Moshakhasat_Zamin2Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Tbl_Moshakhasat_Zamin2DataTable = CType(MyBase.Clone,Tbl_Moshakhasat_Zamin2DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Tbl_Moshakhasat_Zamin2DataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnShomare_Shenasnameh = MyBase.Columns("Shomare_Shenasnameh")
            Me.columnRadif = MyBase.Columns("Radif")
            Me.columnJahat = MyBase.Columns("Jahat")
            Me.columnTool_Zel = MyBase.Columns("Tool_Zel")
            Me.columnTool_Bar = MyBase.Columns("Tool_Bar")
            Me.columnMaAbar_Name = MyBase.Columns("MaAbar_Name")
            Me.columnMaAbar_Arz = MyBase.Columns("MaAbar_Arz")
            Me.columnMaAbar_radif = MyBase.Columns("MaAbar_radif")
            Me.columnzavieh = MyBase.Columns("zavieh")
            Me.columnMasahat_jebheh1 = MyBase.Columns("Masahat_jebheh1")
            Me.columnMasahat_Jebheh2 = MyBase.Columns("Masahat_Jebheh2")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnShomare_Shenasnameh = New Global.System.Data.DataColumn("Shomare_Shenasnameh", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShomare_Shenasnameh)
            Me.columnRadif = New Global.System.Data.DataColumn("Radif", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRadif)
            Me.columnJahat = New Global.System.Data.DataColumn("Jahat", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJahat)
            Me.columnTool_Zel = New Global.System.Data.DataColumn("Tool_Zel", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTool_Zel)
            Me.columnTool_Bar = New Global.System.Data.DataColumn("Tool_Bar", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTool_Bar)
            Me.columnMaAbar_Name = New Global.System.Data.DataColumn("MaAbar_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaAbar_Name)
            Me.columnMaAbar_Arz = New Global.System.Data.DataColumn("MaAbar_Arz", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaAbar_Arz)
            Me.columnMaAbar_radif = New Global.System.Data.DataColumn("MaAbar_radif", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaAbar_radif)
            Me.columnzavieh = New Global.System.Data.DataColumn("zavieh", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnzavieh)
            Me.columnMasahat_jebheh1 = New Global.System.Data.DataColumn("Masahat_jebheh1", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMasahat_jebheh1)
            Me.columnMasahat_Jebheh2 = New Global.System.Data.DataColumn("Masahat_Jebheh2", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMasahat_Jebheh2)
            Me.columnShomare_Shenasnameh.MaxLength = 27
            Me.columnJahat.MaxLength = 3
            Me.columnMaAbar_Name.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewTbl_Moshakhasat_Zamin2Row() As Tbl_Moshakhasat_Zamin2Row
            Return CType(Me.NewRow,Tbl_Moshakhasat_Zamin2Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Tbl_Moshakhasat_Zamin2Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Tbl_Moshakhasat_Zamin2Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Tbl_Moshakhasat_Zamin2RowChangedEvent) Is Nothing) Then
                RaiseEvent Tbl_Moshakhasat_Zamin2RowChanged(Me, New Tbl_Moshakhasat_Zamin2RowChangeEvent(CType(e.Row,Tbl_Moshakhasat_Zamin2Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Tbl_Moshakhasat_Zamin2RowChangingEvent) Is Nothing) Then
                RaiseEvent Tbl_Moshakhasat_Zamin2RowChanging(Me, New Tbl_Moshakhasat_Zamin2RowChangeEvent(CType(e.Row,Tbl_Moshakhasat_Zamin2Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Tbl_Moshakhasat_Zamin2RowDeletedEvent) Is Nothing) Then
                RaiseEvent Tbl_Moshakhasat_Zamin2RowDeleted(Me, New Tbl_Moshakhasat_Zamin2RowChangeEvent(CType(e.Row,Tbl_Moshakhasat_Zamin2Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Tbl_Moshakhasat_Zamin2RowDeletingEvent) Is Nothing) Then
                RaiseEvent Tbl_Moshakhasat_Zamin2RowDeleting(Me, New Tbl_Moshakhasat_Zamin2RowChangeEvent(CType(e.Row,Tbl_Moshakhasat_Zamin2Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveTbl_Moshakhasat_Zamin2Row(ByVal row As Tbl_Moshakhasat_Zamin2Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DB_NoSaziDataSet = New DB_NoSaziDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Tbl_Moshakhasat_Zamin2DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Select_Tbl_Moshakhasat_ZaminDataTable
        Inherits Global.System.Data.TypedTableBase(Of Select_Tbl_Moshakhasat_ZaminRow)
        
        Private columnShomare_Shenasnameh As Global.System.Data.DataColumn
        
        Private columnRadif As Global.System.Data.DataColumn
        
        Private columnjahat_value As Global.System.Data.DataColumn
        
        Private columnjahat As Global.System.Data.DataColumn
        
        Private columnTool_Zel As Global.System.Data.DataColumn
        
        Private columnTool_Bar As Global.System.Data.DataColumn
        
        Private columnMaAbar_Name As Global.System.Data.DataColumn
        
        Private columnMaAbar_Arz As Global.System.Data.DataColumn
        
        Private columnMaAbar_radif As Global.System.Data.DataColumn
        
        Private columnzavieh As Global.System.Data.DataColumn
        
        Private columnMasahat_jebheh1 As Global.System.Data.DataColumn
        
        Private columnMasahat_Jebheh2 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Select_Tbl_Moshakhasat_Zamin"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Shomare_ShenasnamehColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShomare_Shenasnameh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RadifColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRadif
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property jahat_valueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnjahat_value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property jahatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnjahat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Tool_ZelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTool_Zel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Tool_BarColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTool_Bar
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MaAbar_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaAbar_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MaAbar_ArzColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaAbar_Arz
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MaAbar_radifColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaAbar_radif
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property zaviehColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnzavieh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Masahat_jebheh1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMasahat_jebheh1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Masahat_Jebheh2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMasahat_Jebheh2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Select_Tbl_Moshakhasat_ZaminRow
            Get
                Return CType(Me.Rows(index),Select_Tbl_Moshakhasat_ZaminRow)
            End Get
        End Property
        
        Public Event Select_Tbl_Moshakhasat_ZaminRowChanging As Select_Tbl_Moshakhasat_ZaminRowChangeEventHandler
        
        Public Event Select_Tbl_Moshakhasat_ZaminRowChanged As Select_Tbl_Moshakhasat_ZaminRowChangeEventHandler
        
        Public Event Select_Tbl_Moshakhasat_ZaminRowDeleting As Select_Tbl_Moshakhasat_ZaminRowChangeEventHandler
        
        Public Event Select_Tbl_Moshakhasat_ZaminRowDeleted As Select_Tbl_Moshakhasat_ZaminRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddSelect_Tbl_Moshakhasat_ZaminRow(ByVal row As Select_Tbl_Moshakhasat_ZaminRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddSelect_Tbl_Moshakhasat_ZaminRow(ByVal Shomare_Shenasnameh As String, ByVal Radif As Byte, ByVal jahat_value As String, ByVal jahat As String, ByVal Tool_Zel As Single, ByVal Tool_Bar As Single, ByVal MaAbar_Name As String, ByVal MaAbar_Arz As Single, ByVal MaAbar_radif As Byte, ByVal zavieh As Integer, ByVal Masahat_jebheh1 As Single, ByVal Masahat_Jebheh2 As Single) As Select_Tbl_Moshakhasat_ZaminRow
            Dim rowSelect_Tbl_Moshakhasat_ZaminRow As Select_Tbl_Moshakhasat_ZaminRow = CType(Me.NewRow,Select_Tbl_Moshakhasat_ZaminRow)
            Dim columnValuesArray() As Object = New Object() {Shomare_Shenasnameh, Radif, jahat_value, jahat, Tool_Zel, Tool_Bar, MaAbar_Name, MaAbar_Arz, MaAbar_radif, zavieh, Masahat_jebheh1, Masahat_Jebheh2}
            rowSelect_Tbl_Moshakhasat_ZaminRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSelect_Tbl_Moshakhasat_ZaminRow)
            Return rowSelect_Tbl_Moshakhasat_ZaminRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Select_Tbl_Moshakhasat_ZaminDataTable = CType(MyBase.Clone,Select_Tbl_Moshakhasat_ZaminDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Select_Tbl_Moshakhasat_ZaminDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnShomare_Shenasnameh = MyBase.Columns("Shomare_Shenasnameh")
            Me.columnRadif = MyBase.Columns("Radif")
            Me.columnjahat_value = MyBase.Columns("jahat_value")
            Me.columnjahat = MyBase.Columns("jahat")
            Me.columnTool_Zel = MyBase.Columns("Tool_Zel")
            Me.columnTool_Bar = MyBase.Columns("Tool_Bar")
            Me.columnMaAbar_Name = MyBase.Columns("MaAbar_Name")
            Me.columnMaAbar_Arz = MyBase.Columns("MaAbar_Arz")
            Me.columnMaAbar_radif = MyBase.Columns("MaAbar_radif")
            Me.columnzavieh = MyBase.Columns("zavieh")
            Me.columnMasahat_jebheh1 = MyBase.Columns("Masahat_jebheh1")
            Me.columnMasahat_Jebheh2 = MyBase.Columns("Masahat_Jebheh2")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnShomare_Shenasnameh = New Global.System.Data.DataColumn("Shomare_Shenasnameh", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShomare_Shenasnameh)
            Me.columnRadif = New Global.System.Data.DataColumn("Radif", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRadif)
            Me.columnjahat_value = New Global.System.Data.DataColumn("jahat_value", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnjahat_value)
            Me.columnjahat = New Global.System.Data.DataColumn("jahat", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnjahat)
            Me.columnTool_Zel = New Global.System.Data.DataColumn("Tool_Zel", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTool_Zel)
            Me.columnTool_Bar = New Global.System.Data.DataColumn("Tool_Bar", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTool_Bar)
            Me.columnMaAbar_Name = New Global.System.Data.DataColumn("MaAbar_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaAbar_Name)
            Me.columnMaAbar_Arz = New Global.System.Data.DataColumn("MaAbar_Arz", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaAbar_Arz)
            Me.columnMaAbar_radif = New Global.System.Data.DataColumn("MaAbar_radif", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaAbar_radif)
            Me.columnzavieh = New Global.System.Data.DataColumn("zavieh", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnzavieh)
            Me.columnMasahat_jebheh1 = New Global.System.Data.DataColumn("Masahat_jebheh1", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMasahat_jebheh1)
            Me.columnMasahat_Jebheh2 = New Global.System.Data.DataColumn("Masahat_Jebheh2", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMasahat_Jebheh2)
            Me.columnShomare_Shenasnameh.MaxLength = 27
            Me.columnjahat_value.MaxLength = 3
            Me.columnjahat.ReadOnly = true
            Me.columnjahat.MaxLength = 50
            Me.columnMaAbar_Name.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewSelect_Tbl_Moshakhasat_ZaminRow() As Select_Tbl_Moshakhasat_ZaminRow
            Return CType(Me.NewRow,Select_Tbl_Moshakhasat_ZaminRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Select_Tbl_Moshakhasat_ZaminRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Select_Tbl_Moshakhasat_ZaminRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Select_Tbl_Moshakhasat_ZaminRowChangedEvent) Is Nothing) Then
                RaiseEvent Select_Tbl_Moshakhasat_ZaminRowChanged(Me, New Select_Tbl_Moshakhasat_ZaminRowChangeEvent(CType(e.Row,Select_Tbl_Moshakhasat_ZaminRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Select_Tbl_Moshakhasat_ZaminRowChangingEvent) Is Nothing) Then
                RaiseEvent Select_Tbl_Moshakhasat_ZaminRowChanging(Me, New Select_Tbl_Moshakhasat_ZaminRowChangeEvent(CType(e.Row,Select_Tbl_Moshakhasat_ZaminRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Select_Tbl_Moshakhasat_ZaminRowDeletedEvent) Is Nothing) Then
                RaiseEvent Select_Tbl_Moshakhasat_ZaminRowDeleted(Me, New Select_Tbl_Moshakhasat_ZaminRowChangeEvent(CType(e.Row,Select_Tbl_Moshakhasat_ZaminRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Select_Tbl_Moshakhasat_ZaminRowDeletingEvent) Is Nothing) Then
                RaiseEvent Select_Tbl_Moshakhasat_ZaminRowDeleting(Me, New Select_Tbl_Moshakhasat_ZaminRowChangeEvent(CType(e.Row,Select_Tbl_Moshakhasat_ZaminRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveSelect_Tbl_Moshakhasat_ZaminRow(ByVal row As Select_Tbl_Moshakhasat_ZaminRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DB_NoSaziDataSet = New DB_NoSaziDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Select_Tbl_Moshakhasat_ZaminDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class FSelect_Tbl_Moshakhasat_ZaminDataTable
        Inherits Global.System.Data.TypedTableBase(Of FSelect_Tbl_Moshakhasat_ZaminRow)
        
        Private columnShomare_Shenasnameh As Global.System.Data.DataColumn
        
        Private columnRadif As Global.System.Data.DataColumn
        
        Private columnJahat As Global.System.Data.DataColumn
        
        Private columnJahat2 As Global.System.Data.DataColumn
        
        Private columnTool_Zel As Global.System.Data.DataColumn
        
        Private columnTool_Bar As Global.System.Data.DataColumn
        
        Private columnMaAbar_Name As Global.System.Data.DataColumn
        
        Private columnMaAbar_Arz As Global.System.Data.DataColumn
        
        Private columnMaAbar_radif As Global.System.Data.DataColumn
        
        Private columnzavieh As Global.System.Data.DataColumn
        
        Private columnMasahat_jebheh1 As Global.System.Data.DataColumn
        
        Private columnMasahat_Jebheh2 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "FSelect_Tbl_Moshakhasat_Zamin"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Shomare_ShenasnamehColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShomare_Shenasnameh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RadifColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRadif
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property JahatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJahat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Jahat2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnJahat2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Tool_ZelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTool_Zel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Tool_BarColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTool_Bar
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MaAbar_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaAbar_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MaAbar_ArzColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaAbar_Arz
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MaAbar_radifColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaAbar_radif
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property zaviehColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnzavieh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Masahat_jebheh1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMasahat_jebheh1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Masahat_Jebheh2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnMasahat_Jebheh2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As FSelect_Tbl_Moshakhasat_ZaminRow
            Get
                Return CType(Me.Rows(index),FSelect_Tbl_Moshakhasat_ZaminRow)
            End Get
        End Property
        
        Public Event FSelect_Tbl_Moshakhasat_ZaminRowChanging As FSelect_Tbl_Moshakhasat_ZaminRowChangeEventHandler
        
        Public Event FSelect_Tbl_Moshakhasat_ZaminRowChanged As FSelect_Tbl_Moshakhasat_ZaminRowChangeEventHandler
        
        Public Event FSelect_Tbl_Moshakhasat_ZaminRowDeleting As FSelect_Tbl_Moshakhasat_ZaminRowChangeEventHandler
        
        Public Event FSelect_Tbl_Moshakhasat_ZaminRowDeleted As FSelect_Tbl_Moshakhasat_ZaminRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddFSelect_Tbl_Moshakhasat_ZaminRow(ByVal row As FSelect_Tbl_Moshakhasat_ZaminRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddFSelect_Tbl_Moshakhasat_ZaminRow(ByVal Shomare_Shenasnameh As String, ByVal Radif As Byte, ByVal Jahat As String, ByVal Jahat2 As String, ByVal Tool_Zel As Single, ByVal Tool_Bar As Single, ByVal MaAbar_Name As String, ByVal MaAbar_Arz As Single, ByVal MaAbar_radif As Byte, ByVal zavieh As Integer, ByVal Masahat_jebheh1 As Single, ByVal Masahat_Jebheh2 As Single) As FSelect_Tbl_Moshakhasat_ZaminRow
            Dim rowFSelect_Tbl_Moshakhasat_ZaminRow As FSelect_Tbl_Moshakhasat_ZaminRow = CType(Me.NewRow,FSelect_Tbl_Moshakhasat_ZaminRow)
            Dim columnValuesArray() As Object = New Object() {Shomare_Shenasnameh, Radif, Jahat, Jahat2, Tool_Zel, Tool_Bar, MaAbar_Name, MaAbar_Arz, MaAbar_radif, zavieh, Masahat_jebheh1, Masahat_Jebheh2}
            rowFSelect_Tbl_Moshakhasat_ZaminRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowFSelect_Tbl_Moshakhasat_ZaminRow)
            Return rowFSelect_Tbl_Moshakhasat_ZaminRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As FSelect_Tbl_Moshakhasat_ZaminDataTable = CType(MyBase.Clone,FSelect_Tbl_Moshakhasat_ZaminDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New FSelect_Tbl_Moshakhasat_ZaminDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnShomare_Shenasnameh = MyBase.Columns("Shomare_Shenasnameh")
            Me.columnRadif = MyBase.Columns("Radif")
            Me.columnJahat = MyBase.Columns("Jahat")
            Me.columnJahat2 = MyBase.Columns("Jahat2")
            Me.columnTool_Zel = MyBase.Columns("Tool_Zel")
            Me.columnTool_Bar = MyBase.Columns("Tool_Bar")
            Me.columnMaAbar_Name = MyBase.Columns("MaAbar_Name")
            Me.columnMaAbar_Arz = MyBase.Columns("MaAbar_Arz")
            Me.columnMaAbar_radif = MyBase.Columns("MaAbar_radif")
            Me.columnzavieh = MyBase.Columns("zavieh")
            Me.columnMasahat_jebheh1 = MyBase.Columns("Masahat_jebheh1")
            Me.columnMasahat_Jebheh2 = MyBase.Columns("Masahat_Jebheh2")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnShomare_Shenasnameh = New Global.System.Data.DataColumn("Shomare_Shenasnameh", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShomare_Shenasnameh)
            Me.columnRadif = New Global.System.Data.DataColumn("Radif", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRadif)
            Me.columnJahat = New Global.System.Data.DataColumn("Jahat", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJahat)
            Me.columnJahat2 = New Global.System.Data.DataColumn("Jahat2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJahat2)
            Me.columnTool_Zel = New Global.System.Data.DataColumn("Tool_Zel", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTool_Zel)
            Me.columnTool_Bar = New Global.System.Data.DataColumn("Tool_Bar", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTool_Bar)
            Me.columnMaAbar_Name = New Global.System.Data.DataColumn("MaAbar_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaAbar_Name)
            Me.columnMaAbar_Arz = New Global.System.Data.DataColumn("MaAbar_Arz", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaAbar_Arz)
            Me.columnMaAbar_radif = New Global.System.Data.DataColumn("MaAbar_radif", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaAbar_radif)
            Me.columnzavieh = New Global.System.Data.DataColumn("zavieh", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnzavieh)
            Me.columnMasahat_jebheh1 = New Global.System.Data.DataColumn("Masahat_jebheh1", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMasahat_jebheh1)
            Me.columnMasahat_Jebheh2 = New Global.System.Data.DataColumn("Masahat_Jebheh2", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMasahat_Jebheh2)
            Me.columnShomare_Shenasnameh.MaxLength = 27
            Me.columnJahat.ReadOnly = true
            Me.columnJahat.MaxLength = 50
            Me.columnJahat2.MaxLength = 3
            Me.columnMaAbar_Name.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewFSelect_Tbl_Moshakhasat_ZaminRow() As FSelect_Tbl_Moshakhasat_ZaminRow
            Return CType(Me.NewRow,FSelect_Tbl_Moshakhasat_ZaminRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New FSelect_Tbl_Moshakhasat_ZaminRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(FSelect_Tbl_Moshakhasat_ZaminRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.FSelect_Tbl_Moshakhasat_ZaminRowChangedEvent) Is Nothing) Then
                RaiseEvent FSelect_Tbl_Moshakhasat_ZaminRowChanged(Me, New FSelect_Tbl_Moshakhasat_ZaminRowChangeEvent(CType(e.Row,FSelect_Tbl_Moshakhasat_ZaminRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.FSelect_Tbl_Moshakhasat_ZaminRowChangingEvent) Is Nothing) Then
                RaiseEvent FSelect_Tbl_Moshakhasat_ZaminRowChanging(Me, New FSelect_Tbl_Moshakhasat_ZaminRowChangeEvent(CType(e.Row,FSelect_Tbl_Moshakhasat_ZaminRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.FSelect_Tbl_Moshakhasat_ZaminRowDeletedEvent) Is Nothing) Then
                RaiseEvent FSelect_Tbl_Moshakhasat_ZaminRowDeleted(Me, New FSelect_Tbl_Moshakhasat_ZaminRowChangeEvent(CType(e.Row,FSelect_Tbl_Moshakhasat_ZaminRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.FSelect_Tbl_Moshakhasat_ZaminRowDeletingEvent) Is Nothing) Then
                RaiseEvent FSelect_Tbl_Moshakhasat_ZaminRowDeleting(Me, New FSelect_Tbl_Moshakhasat_ZaminRowChangeEvent(CType(e.Row,FSelect_Tbl_Moshakhasat_ZaminRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveFSelect_Tbl_Moshakhasat_ZaminRow(ByVal row As FSelect_Tbl_Moshakhasat_ZaminRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DB_NoSaziDataSet = New DB_NoSaziDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "FSelect_Tbl_Moshakhasat_ZaminDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Select_Tbl_No_EstefadehDataTable
        Inherits Global.System.Data.TypedTableBase(Of Select_Tbl_No_EstefadehRow)
        
        Private columnShomare_Shenasnameh As Global.System.Data.DataColumn
        
        Private columnC350 As Global.System.Data.DataColumn
        
        Private columnC351 As Global.System.Data.DataColumn
        
        Private columnC352 As Global.System.Data.DataColumn
        
        Private columnC353 As Global.System.Data.DataColumn
        
        Private columnC354 As Global.System.Data.DataColumn
        
        Private columnC355 As Global.System.Data.DataColumn
        
        Private columnC356 As Global.System.Data.DataColumn
        
        Private columnC357 As Global.System.Data.DataColumn
        
        Private columnC358 As Global.System.Data.DataColumn
        
        Private columnC359 As Global.System.Data.DataColumn
        
        Private columnC360 As Global.System.Data.DataColumn
        
        Private columnC361 As Global.System.Data.DataColumn
        
        Private columnC362 As Global.System.Data.DataColumn
        
        Private columnC363 As Global.System.Data.DataColumn
        
        Private columnC364 As Global.System.Data.DataColumn
        
        Private columnC365 As Global.System.Data.DataColumn
        
        Private columnC366 As Global.System.Data.DataColumn
        
        Private columnC367 As Global.System.Data.DataColumn
        
        Private columnC368 As Global.System.Data.DataColumn
        
        Private columnC369 As Global.System.Data.DataColumn
        
        Private columnC370 As Global.System.Data.DataColumn
        
        Private columnC371 As Global.System.Data.DataColumn
        
        Private columnC372 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Select_Tbl_No_Estefadeh"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Shomare_ShenasnamehColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShomare_Shenasnameh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property C350Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC350
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property C351Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC351
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property C352Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC352
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property C353Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC353
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property C354Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC354
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property C355Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC355
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property C356Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC356
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property C357Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC357
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property C358Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC358
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property C359Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC359
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property C360Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC360
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property C361Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC361
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property C362Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC362
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property C363Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC363
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property C364Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC364
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property C365Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC365
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property C366Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC366
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property C367Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC367
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property C368Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC368
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property C369Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC369
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property C370Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC370
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property C371Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC371
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property C372Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC372
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Select_Tbl_No_EstefadehRow
            Get
                Return CType(Me.Rows(index),Select_Tbl_No_EstefadehRow)
            End Get
        End Property
        
        Public Event Select_Tbl_No_EstefadehRowChanging As Select_Tbl_No_EstefadehRowChangeEventHandler
        
        Public Event Select_Tbl_No_EstefadehRowChanged As Select_Tbl_No_EstefadehRowChangeEventHandler
        
        Public Event Select_Tbl_No_EstefadehRowDeleting As Select_Tbl_No_EstefadehRowChangeEventHandler
        
        Public Event Select_Tbl_No_EstefadehRowDeleted As Select_Tbl_No_EstefadehRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddSelect_Tbl_No_EstefadehRow(ByVal row As Select_Tbl_No_EstefadehRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddSelect_Tbl_No_EstefadehRow( _
                    ByVal Shomare_Shenasnameh As String,  _
                    ByVal C350 As Boolean,  _
                    ByVal C351 As Boolean,  _
                    ByVal C352 As Boolean,  _
                    ByVal C353 As Boolean,  _
                    ByVal C354 As Boolean,  _
                    ByVal C355 As Boolean,  _
                    ByVal C356 As Boolean,  _
                    ByVal C357 As Boolean,  _
                    ByVal C358 As Boolean,  _
                    ByVal C359 As Boolean,  _
                    ByVal C360 As Boolean,  _
                    ByVal C361 As Boolean,  _
                    ByVal C362 As Boolean,  _
                    ByVal C363 As Boolean,  _
                    ByVal C364 As Boolean,  _
                    ByVal C365 As Boolean,  _
                    ByVal C366 As Boolean,  _
                    ByVal C367 As Boolean,  _
                    ByVal C368 As Boolean,  _
                    ByVal C369 As Boolean,  _
                    ByVal C370 As Boolean,  _
                    ByVal C371 As Boolean,  _
                    ByVal C372 As Boolean) As Select_Tbl_No_EstefadehRow
            Dim rowSelect_Tbl_No_EstefadehRow As Select_Tbl_No_EstefadehRow = CType(Me.NewRow,Select_Tbl_No_EstefadehRow)
            Dim columnValuesArray() As Object = New Object() {Shomare_Shenasnameh, C350, C351, C352, C353, C354, C355, C356, C357, C358, C359, C360, C361, C362, C363, C364, C365, C366, C367, C368, C369, C370, C371, C372}
            rowSelect_Tbl_No_EstefadehRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSelect_Tbl_No_EstefadehRow)
            Return rowSelect_Tbl_No_EstefadehRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Select_Tbl_No_EstefadehDataTable = CType(MyBase.Clone,Select_Tbl_No_EstefadehDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Select_Tbl_No_EstefadehDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnShomare_Shenasnameh = MyBase.Columns("Shomare_Shenasnameh")
            Me.columnC350 = MyBase.Columns("C350")
            Me.columnC351 = MyBase.Columns("C351")
            Me.columnC352 = MyBase.Columns("C352")
            Me.columnC353 = MyBase.Columns("C353")
            Me.columnC354 = MyBase.Columns("C354")
            Me.columnC355 = MyBase.Columns("C355")
            Me.columnC356 = MyBase.Columns("C356")
            Me.columnC357 = MyBase.Columns("C357")
            Me.columnC358 = MyBase.Columns("C358")
            Me.columnC359 = MyBase.Columns("C359")
            Me.columnC360 = MyBase.Columns("C360")
            Me.columnC361 = MyBase.Columns("C361")
            Me.columnC362 = MyBase.Columns("C362")
            Me.columnC363 = MyBase.Columns("C363")
            Me.columnC364 = MyBase.Columns("C364")
            Me.columnC365 = MyBase.Columns("C365")
            Me.columnC366 = MyBase.Columns("C366")
            Me.columnC367 = MyBase.Columns("C367")
            Me.columnC368 = MyBase.Columns("C368")
            Me.columnC369 = MyBase.Columns("C369")
            Me.columnC370 = MyBase.Columns("C370")
            Me.columnC371 = MyBase.Columns("C371")
            Me.columnC372 = MyBase.Columns("C372")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnShomare_Shenasnameh = New Global.System.Data.DataColumn("Shomare_Shenasnameh", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShomare_Shenasnameh)
            Me.columnC350 = New Global.System.Data.DataColumn("C350", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC350)
            Me.columnC351 = New Global.System.Data.DataColumn("C351", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC351)
            Me.columnC352 = New Global.System.Data.DataColumn("C352", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC352)
            Me.columnC353 = New Global.System.Data.DataColumn("C353", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC353)
            Me.columnC354 = New Global.System.Data.DataColumn("C354", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC354)
            Me.columnC355 = New Global.System.Data.DataColumn("C355", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC355)
            Me.columnC356 = New Global.System.Data.DataColumn("C356", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC356)
            Me.columnC357 = New Global.System.Data.DataColumn("C357", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC357)
            Me.columnC358 = New Global.System.Data.DataColumn("C358", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC358)
            Me.columnC359 = New Global.System.Data.DataColumn("C359", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC359)
            Me.columnC360 = New Global.System.Data.DataColumn("C360", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC360)
            Me.columnC361 = New Global.System.Data.DataColumn("C361", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC361)
            Me.columnC362 = New Global.System.Data.DataColumn("C362", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC362)
            Me.columnC363 = New Global.System.Data.DataColumn("C363", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC363)
            Me.columnC364 = New Global.System.Data.DataColumn("C364", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC364)
            Me.columnC365 = New Global.System.Data.DataColumn("C365", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC365)
            Me.columnC366 = New Global.System.Data.DataColumn("C366", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC366)
            Me.columnC367 = New Global.System.Data.DataColumn("C367", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC367)
            Me.columnC368 = New Global.System.Data.DataColumn("C368", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC368)
            Me.columnC369 = New Global.System.Data.DataColumn("C369", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC369)
            Me.columnC370 = New Global.System.Data.DataColumn("C370", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC370)
            Me.columnC371 = New Global.System.Data.DataColumn("C371", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC371)
            Me.columnC372 = New Global.System.Data.DataColumn("C372", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC372)
            Me.columnShomare_Shenasnameh.MaxLength = 27
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewSelect_Tbl_No_EstefadehRow() As Select_Tbl_No_EstefadehRow
            Return CType(Me.NewRow,Select_Tbl_No_EstefadehRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Select_Tbl_No_EstefadehRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Select_Tbl_No_EstefadehRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Select_Tbl_No_EstefadehRowChangedEvent) Is Nothing) Then
                RaiseEvent Select_Tbl_No_EstefadehRowChanged(Me, New Select_Tbl_No_EstefadehRowChangeEvent(CType(e.Row,Select_Tbl_No_EstefadehRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Select_Tbl_No_EstefadehRowChangingEvent) Is Nothing) Then
                RaiseEvent Select_Tbl_No_EstefadehRowChanging(Me, New Select_Tbl_No_EstefadehRowChangeEvent(CType(e.Row,Select_Tbl_No_EstefadehRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Select_Tbl_No_EstefadehRowDeletedEvent) Is Nothing) Then
                RaiseEvent Select_Tbl_No_EstefadehRowDeleted(Me, New Select_Tbl_No_EstefadehRowChangeEvent(CType(e.Row,Select_Tbl_No_EstefadehRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Select_Tbl_No_EstefadehRowDeletingEvent) Is Nothing) Then
                RaiseEvent Select_Tbl_No_EstefadehRowDeleting(Me, New Select_Tbl_No_EstefadehRowChangeEvent(CType(e.Row,Select_Tbl_No_EstefadehRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveSelect_Tbl_No_EstefadehRow(ByVal row As Select_Tbl_No_EstefadehRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DB_NoSaziDataSet = New DB_NoSaziDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Select_Tbl_No_EstefadehDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Select_TBL_Amlak_MostaghelatDataTable
        Inherits Global.System.Data.TypedTableBase(Of Select_TBL_Amlak_MostaghelatRow)
        
        Private columnTarikh_Malekiat As Global.System.Data.DataColumn
        
        Private columnTarikh_PMalekiat As Global.System.Data.DataColumn
        
        Private columnShomare_Shenasnameh As Global.System.Data.DataColumn
        
        Private columnN_Mashhoor As Global.System.Data.DataColumn
        
        Private columnN_Khiaban As Global.System.Data.DataColumn
        
        Private columnN_Meydan As Global.System.Data.DataColumn
        
        Private columnN_Bazar As Global.System.Data.DataColumn
        
        Private columnN_Pasaj As Global.System.Data.DataColumn
        
        Private columnN_Koocheh As Global.System.Data.DataColumn
        
        Private columnN_BonBast As Global.System.Data.DataColumn
        
        Private columnN_PelakAbi As Global.System.Data.DataColumn
        
        Private columnN_Name_Block As Global.System.Data.DataColumn
        
        Private columnN_Tabagheh As Global.System.Data.DataColumn
        
        Private columnN_Code_Posti As Global.System.Data.DataColumn
        
        Private columnN_Radif_MGhabli As Global.System.Data.DataColumn
        
        Private columnMasahat_Zamin As Global.System.Data.DataColumn
        
        Private columnMasahat_Jebheh As Global.System.Data.DataColumn
        
        Private columnMasahat_PJebheh As Global.System.Data.DataColumn
        
        Private columnTedad_Zel As Global.System.Data.DataColumn
        
        Private columnBar_Tedad As Global.System.Data.DataColumn
        
        Private columnBar_Onvan As Global.System.Data.DataColumn
        
        Private columnTedad_Malek As Global.System.Data.DataColumn
        
        Private columnNo_Moshakhasat As Global.System.Data.DataColumn
        
        Private columnTedad_Sakhteman As Global.System.Data.DataColumn
        
        Private columnTedad_Aparteman As Global.System.Data.DataColumn
        
        Private columnTedad_Vahed_Kasb As Global.System.Data.DataColumn
        
        Private columnMasahat_Melk As Global.System.Data.DataColumn
        
        Private columnMetr_Dar As Global.System.Data.DataColumn
        
        Private columnRah_Mostaghel As Global.System.Data.DataColumn
        
        Private columnTedad_Vahed As Global.System.Data.DataColumn
        
        Private columnNo_Malekiyat As Global.System.Data.DataColumn
        
        Private columnName_Malek As Global.System.Data.DataColumn
        
        Private columnHozoor As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Select_TBL_Amlak_Mostaghelat"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Tarikh_MalekiatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTarikh_Malekiat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Tarikh_PMalekiatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTarikh_PMalekiat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Shomare_ShenasnamehColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShomare_Shenasnameh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property N_MashhoorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnN_Mashhoor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property N_KhiabanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnN_Khiaban
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property N_MeydanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnN_Meydan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property N_BazarColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnN_Bazar
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property N_PasajColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnN_Pasaj
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property N_KoochehColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnN_Koocheh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property N_BonBastColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnN_BonBast
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property N_PelakAbiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnN_PelakAbi
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property N_Name_BlockColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnN_Name_Block
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property N_TabaghehColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnN_Tabagheh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property N_Code_PostiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnN_Code_Posti
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property N_Radif_MGhabliColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnN_Radif_MGhabli
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Masahat_ZaminColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMasahat_Zamin
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Masahat_JebhehColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMasahat_Jebheh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Masahat_PJebhehColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMasahat_PJebheh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Tedad_ZelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTedad_Zel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Bar_TedadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBar_Tedad
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Bar_OnvanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBar_Onvan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Tedad_MalekColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTedad_Malek
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property No_MoshakhasatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNo_Moshakhasat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Tedad_SakhtemanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTedad_Sakhteman
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Tedad_ApartemanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTedad_Aparteman
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Tedad_Vahed_KasbColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTedad_Vahed_Kasb
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Masahat_MelkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMasahat_Melk
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Metr_DarColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMetr_Dar
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Rah_MostaghelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRah_Mostaghel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Tedad_VahedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTedad_Vahed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property No_MalekiyatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNo_Malekiyat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Name_MalekColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_Malek
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HozoorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHozoor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Select_TBL_Amlak_MostaghelatRow
            Get
                Return CType(Me.Rows(index),Select_TBL_Amlak_MostaghelatRow)
            End Get
        End Property
        
        Public Event Select_TBL_Amlak_MostaghelatRowChanging As Select_TBL_Amlak_MostaghelatRowChangeEventHandler
        
        Public Event Select_TBL_Amlak_MostaghelatRowChanged As Select_TBL_Amlak_MostaghelatRowChangeEventHandler
        
        Public Event Select_TBL_Amlak_MostaghelatRowDeleting As Select_TBL_Amlak_MostaghelatRowChangeEventHandler
        
        Public Event Select_TBL_Amlak_MostaghelatRowDeleted As Select_TBL_Amlak_MostaghelatRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddSelect_TBL_Amlak_MostaghelatRow(ByVal row As Select_TBL_Amlak_MostaghelatRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddSelect_TBL_Amlak_MostaghelatRow( _
                    ByVal Tarikh_Malekiat As String,  _
                    ByVal Tarikh_PMalekiat As String,  _
                    ByVal Shomare_Shenasnameh As String,  _
                    ByVal N_Mashhoor As String,  _
                    ByVal N_Khiaban As String,  _
                    ByVal N_Meydan As String,  _
                    ByVal N_Bazar As String,  _
                    ByVal N_Pasaj As String,  _
                    ByVal N_Koocheh As String,  _
                    ByVal N_BonBast As String,  _
                    ByVal N_PelakAbi As String,  _
                    ByVal N_Name_Block As String,  _
                    ByVal N_Tabagheh As String,  _
                    ByVal N_Code_Posti As String,  _
                    ByVal N_Radif_MGhabli As String,  _
                    ByVal Masahat_Zamin As Single,  _
                    ByVal Masahat_Jebheh As Single,  _
                    ByVal Masahat_PJebheh As Single,  _
                    ByVal Tedad_Zel As Byte,  _
                    ByVal Bar_Tedad As Byte,  _
                    ByVal Bar_Onvan As String,  _
                    ByVal Tedad_Malek As Byte,  _
                    ByVal No_Moshakhasat As String,  _
                    ByVal Tedad_Sakhteman As Integer,  _
                    ByVal Tedad_Aparteman As Single,  _
                    ByVal Tedad_Vahed_Kasb As Integer,  _
                    ByVal Masahat_Melk As Single,  _
                    ByVal Metr_Dar As String,  _
                    ByVal Rah_Mostaghel As Boolean,  _
                    ByVal Tedad_Vahed As Integer,  _
                    ByVal No_Malekiyat As String,  _
                    ByVal Name_Malek As String,  _
                    ByVal Hozoor As Boolean) As Select_TBL_Amlak_MostaghelatRow
            Dim rowSelect_TBL_Amlak_MostaghelatRow As Select_TBL_Amlak_MostaghelatRow = CType(Me.NewRow,Select_TBL_Amlak_MostaghelatRow)
            Dim columnValuesArray() As Object = New Object() {Tarikh_Malekiat, Tarikh_PMalekiat, Shomare_Shenasnameh, N_Mashhoor, N_Khiaban, N_Meydan, N_Bazar, N_Pasaj, N_Koocheh, N_BonBast, N_PelakAbi, N_Name_Block, N_Tabagheh, N_Code_Posti, N_Radif_MGhabli, Masahat_Zamin, Masahat_Jebheh, Masahat_PJebheh, Tedad_Zel, Bar_Tedad, Bar_Onvan, Tedad_Malek, No_Moshakhasat, Tedad_Sakhteman, Tedad_Aparteman, Tedad_Vahed_Kasb, Masahat_Melk, Metr_Dar, Rah_Mostaghel, Tedad_Vahed, No_Malekiyat, Name_Malek, Hozoor}
            rowSelect_TBL_Amlak_MostaghelatRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSelect_TBL_Amlak_MostaghelatRow)
            Return rowSelect_TBL_Amlak_MostaghelatRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Select_TBL_Amlak_MostaghelatDataTable = CType(MyBase.Clone,Select_TBL_Amlak_MostaghelatDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Select_TBL_Amlak_MostaghelatDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnTarikh_Malekiat = MyBase.Columns("Tarikh_Malekiat")
            Me.columnTarikh_PMalekiat = MyBase.Columns("Tarikh_PMalekiat")
            Me.columnShomare_Shenasnameh = MyBase.Columns("Shomare_Shenasnameh")
            Me.columnN_Mashhoor = MyBase.Columns("N_Mashhoor")
            Me.columnN_Khiaban = MyBase.Columns("N_Khiaban")
            Me.columnN_Meydan = MyBase.Columns("N_Meydan")
            Me.columnN_Bazar = MyBase.Columns("N_Bazar")
            Me.columnN_Pasaj = MyBase.Columns("N_Pasaj")
            Me.columnN_Koocheh = MyBase.Columns("N_Koocheh")
            Me.columnN_BonBast = MyBase.Columns("N_BonBast")
            Me.columnN_PelakAbi = MyBase.Columns("N_PelakAbi")
            Me.columnN_Name_Block = MyBase.Columns("N_Name_Block")
            Me.columnN_Tabagheh = MyBase.Columns("N_Tabagheh")
            Me.columnN_Code_Posti = MyBase.Columns("N_Code_Posti")
            Me.columnN_Radif_MGhabli = MyBase.Columns("N_Radif_MGhabli")
            Me.columnMasahat_Zamin = MyBase.Columns("Masahat_Zamin")
            Me.columnMasahat_Jebheh = MyBase.Columns("Masahat_Jebheh")
            Me.columnMasahat_PJebheh = MyBase.Columns("Masahat_PJebheh")
            Me.columnTedad_Zel = MyBase.Columns("Tedad_Zel")
            Me.columnBar_Tedad = MyBase.Columns("Bar_Tedad")
            Me.columnBar_Onvan = MyBase.Columns("Bar_Onvan")
            Me.columnTedad_Malek = MyBase.Columns("Tedad_Malek")
            Me.columnNo_Moshakhasat = MyBase.Columns("No_Moshakhasat")
            Me.columnTedad_Sakhteman = MyBase.Columns("Tedad_Sakhteman")
            Me.columnTedad_Aparteman = MyBase.Columns("Tedad_Aparteman")
            Me.columnTedad_Vahed_Kasb = MyBase.Columns("Tedad_Vahed_Kasb")
            Me.columnMasahat_Melk = MyBase.Columns("Masahat_Melk")
            Me.columnMetr_Dar = MyBase.Columns("Metr_Dar")
            Me.columnRah_Mostaghel = MyBase.Columns("Rah_Mostaghel")
            Me.columnTedad_Vahed = MyBase.Columns("Tedad_Vahed")
            Me.columnNo_Malekiyat = MyBase.Columns("No_Malekiyat")
            Me.columnName_Malek = MyBase.Columns("Name_Malek")
            Me.columnHozoor = MyBase.Columns("Hozoor")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnTarikh_Malekiat = New Global.System.Data.DataColumn("Tarikh_Malekiat", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTarikh_Malekiat)
            Me.columnTarikh_PMalekiat = New Global.System.Data.DataColumn("Tarikh_PMalekiat", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTarikh_PMalekiat)
            Me.columnShomare_Shenasnameh = New Global.System.Data.DataColumn("Shomare_Shenasnameh", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShomare_Shenasnameh)
            Me.columnN_Mashhoor = New Global.System.Data.DataColumn("N_Mashhoor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnN_Mashhoor)
            Me.columnN_Khiaban = New Global.System.Data.DataColumn("N_Khiaban", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnN_Khiaban)
            Me.columnN_Meydan = New Global.System.Data.DataColumn("N_Meydan", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnN_Meydan)
            Me.columnN_Bazar = New Global.System.Data.DataColumn("N_Bazar", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnN_Bazar)
            Me.columnN_Pasaj = New Global.System.Data.DataColumn("N_Pasaj", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnN_Pasaj)
            Me.columnN_Koocheh = New Global.System.Data.DataColumn("N_Koocheh", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnN_Koocheh)
            Me.columnN_BonBast = New Global.System.Data.DataColumn("N_BonBast", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnN_BonBast)
            Me.columnN_PelakAbi = New Global.System.Data.DataColumn("N_PelakAbi", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnN_PelakAbi)
            Me.columnN_Name_Block = New Global.System.Data.DataColumn("N_Name_Block", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnN_Name_Block)
            Me.columnN_Tabagheh = New Global.System.Data.DataColumn("N_Tabagheh", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnN_Tabagheh)
            Me.columnN_Code_Posti = New Global.System.Data.DataColumn("N_Code_Posti", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnN_Code_Posti)
            Me.columnN_Radif_MGhabli = New Global.System.Data.DataColumn("N_Radif_MGhabli", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnN_Radif_MGhabli)
            Me.columnMasahat_Zamin = New Global.System.Data.DataColumn("Masahat_Zamin", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMasahat_Zamin)
            Me.columnMasahat_Jebheh = New Global.System.Data.DataColumn("Masahat_Jebheh", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMasahat_Jebheh)
            Me.columnMasahat_PJebheh = New Global.System.Data.DataColumn("Masahat_PJebheh", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMasahat_PJebheh)
            Me.columnTedad_Zel = New Global.System.Data.DataColumn("Tedad_Zel", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTedad_Zel)
            Me.columnBar_Tedad = New Global.System.Data.DataColumn("Bar_Tedad", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBar_Tedad)
            Me.columnBar_Onvan = New Global.System.Data.DataColumn("Bar_Onvan", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBar_Onvan)
            Me.columnTedad_Malek = New Global.System.Data.DataColumn("Tedad_Malek", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTedad_Malek)
            Me.columnNo_Moshakhasat = New Global.System.Data.DataColumn("No_Moshakhasat", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNo_Moshakhasat)
            Me.columnTedad_Sakhteman = New Global.System.Data.DataColumn("Tedad_Sakhteman", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTedad_Sakhteman)
            Me.columnTedad_Aparteman = New Global.System.Data.DataColumn("Tedad_Aparteman", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTedad_Aparteman)
            Me.columnTedad_Vahed_Kasb = New Global.System.Data.DataColumn("Tedad_Vahed_Kasb", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTedad_Vahed_Kasb)
            Me.columnMasahat_Melk = New Global.System.Data.DataColumn("Masahat_Melk", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMasahat_Melk)
            Me.columnMetr_Dar = New Global.System.Data.DataColumn("Metr_Dar", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMetr_Dar)
            Me.columnRah_Mostaghel = New Global.System.Data.DataColumn("Rah_Mostaghel", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRah_Mostaghel)
            Me.columnTedad_Vahed = New Global.System.Data.DataColumn("Tedad_Vahed", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTedad_Vahed)
            Me.columnNo_Malekiyat = New Global.System.Data.DataColumn("No_Malekiyat", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNo_Malekiyat)
            Me.columnName_Malek = New Global.System.Data.DataColumn("Name_Malek", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_Malek)
            Me.columnHozoor = New Global.System.Data.DataColumn("Hozoor", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHozoor)
            Me.columnTarikh_Malekiat.MaxLength = 8
            Me.columnTarikh_PMalekiat.MaxLength = 8
            Me.columnShomare_Shenasnameh.MaxLength = 27
            Me.columnN_Mashhoor.MaxLength = 50
            Me.columnN_Khiaban.MaxLength = 50
            Me.columnN_Meydan.MaxLength = 50
            Me.columnN_Bazar.MaxLength = 50
            Me.columnN_Pasaj.MaxLength = 50
            Me.columnN_Koocheh.MaxLength = 50
            Me.columnN_BonBast.MaxLength = 50
            Me.columnN_PelakAbi.MaxLength = 20
            Me.columnN_Name_Block.MaxLength = 50
            Me.columnN_Tabagheh.MaxLength = 10
            Me.columnN_Code_Posti.MaxLength = 20
            Me.columnN_Radif_MGhabli.MaxLength = 10
            Me.columnBar_Onvan.MaxLength = 30
            Me.columnNo_Moshakhasat.ReadOnly = true
            Me.columnNo_Moshakhasat.MaxLength = 50
            Me.columnMetr_Dar.MaxLength = 15
            Me.columnNo_Malekiyat.ReadOnly = true
            Me.columnNo_Malekiyat.MaxLength = 50
            Me.columnName_Malek.MaxLength = 60
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewSelect_TBL_Amlak_MostaghelatRow() As Select_TBL_Amlak_MostaghelatRow
            Return CType(Me.NewRow,Select_TBL_Amlak_MostaghelatRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Select_TBL_Amlak_MostaghelatRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Select_TBL_Amlak_MostaghelatRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Select_TBL_Amlak_MostaghelatRowChangedEvent) Is Nothing) Then
                RaiseEvent Select_TBL_Amlak_MostaghelatRowChanged(Me, New Select_TBL_Amlak_MostaghelatRowChangeEvent(CType(e.Row,Select_TBL_Amlak_MostaghelatRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Select_TBL_Amlak_MostaghelatRowChangingEvent) Is Nothing) Then
                RaiseEvent Select_TBL_Amlak_MostaghelatRowChanging(Me, New Select_TBL_Amlak_MostaghelatRowChangeEvent(CType(e.Row,Select_TBL_Amlak_MostaghelatRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Select_TBL_Amlak_MostaghelatRowDeletedEvent) Is Nothing) Then
                RaiseEvent Select_TBL_Amlak_MostaghelatRowDeleted(Me, New Select_TBL_Amlak_MostaghelatRowChangeEvent(CType(e.Row,Select_TBL_Amlak_MostaghelatRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Select_TBL_Amlak_MostaghelatRowDeletingEvent) Is Nothing) Then
                RaiseEvent Select_TBL_Amlak_MostaghelatRowDeleting(Me, New Select_TBL_Amlak_MostaghelatRowChangeEvent(CType(e.Row,Select_TBL_Amlak_MostaghelatRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveSelect_TBL_Amlak_MostaghelatRow(ByVal row As Select_TBL_Amlak_MostaghelatRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DB_NoSaziDataSet = New DB_NoSaziDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Select_TBL_Amlak_MostaghelatDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class FSelect_TBL_Amlak_MostaghelatDataTable
        Inherits Global.System.Data.TypedTableBase(Of FSelect_TBL_Amlak_MostaghelatRow)
        
        Private columnTarikh_Malekiat As Global.System.Data.DataColumn
        
        Private columnTarikh_PMalekiat As Global.System.Data.DataColumn
        
        Private columnShomare_Shenasnameh As Global.System.Data.DataColumn
        
        Private columnN_Mashhoor As Global.System.Data.DataColumn
        
        Private columnN_Khiaban As Global.System.Data.DataColumn
        
        Private columnN_Meydan As Global.System.Data.DataColumn
        
        Private columnN_Bazar As Global.System.Data.DataColumn
        
        Private columnN_Pasaj As Global.System.Data.DataColumn
        
        Private columnN_Koocheh As Global.System.Data.DataColumn
        
        Private columnN_BonBast As Global.System.Data.DataColumn
        
        Private columnN_PelakAbi As Global.System.Data.DataColumn
        
        Private columnN_Name_Block As Global.System.Data.DataColumn
        
        Private columnN_Tabagheh As Global.System.Data.DataColumn
        
        Private columnN_Code_Posti As Global.System.Data.DataColumn
        
        Private columnN_Radif_MGhabli As Global.System.Data.DataColumn
        
        Private columnMasahat_Zamin As Global.System.Data.DataColumn
        
        Private columnMasahat_Jebheh As Global.System.Data.DataColumn
        
        Private columnMasahat_PJebheh As Global.System.Data.DataColumn
        
        Private columnTedad_Zel As Global.System.Data.DataColumn
        
        Private columnBar_Tedad As Global.System.Data.DataColumn
        
        Private columnBar_Onvan As Global.System.Data.DataColumn
        
        Private columnTedad_Malek As Global.System.Data.DataColumn
        
        Private columnNo_Moshakhasat As Global.System.Data.DataColumn
        
        Private columnTedad_Sakhteman As Global.System.Data.DataColumn
        
        Private columnTedad_Aparteman As Global.System.Data.DataColumn
        
        Private columnTedad_Vahed_Kasb As Global.System.Data.DataColumn
        
        Private columnMasahat_Melk As Global.System.Data.DataColumn
        
        Private columnMetr_Dar As Global.System.Data.DataColumn
        
        Private columnRah_Mostaghel As Global.System.Data.DataColumn
        
        Private columnTedad_Vahed As Global.System.Data.DataColumn
        
        Private columnNo_Malekiyat As Global.System.Data.DataColumn
        
        Private columnName_Malek As Global.System.Data.DataColumn
        
        Private columnHozoor As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "FSelect_TBL_Amlak_Mostaghelat"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Tarikh_MalekiatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTarikh_Malekiat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Tarikh_PMalekiatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTarikh_PMalekiat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Shomare_ShenasnamehColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShomare_Shenasnameh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property N_MashhoorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnN_Mashhoor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property N_KhiabanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnN_Khiaban
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property N_MeydanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnN_Meydan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property N_BazarColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnN_Bazar
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property N_PasajColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnN_Pasaj
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property N_KoochehColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnN_Koocheh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property N_BonBastColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnN_BonBast
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property N_PelakAbiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnN_PelakAbi
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property N_Name_BlockColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnN_Name_Block
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property N_TabaghehColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnN_Tabagheh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property N_Code_PostiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnN_Code_Posti
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property N_Radif_MGhabliColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnN_Radif_MGhabli
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Masahat_ZaminColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMasahat_Zamin
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Masahat_JebhehColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMasahat_Jebheh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Masahat_PJebhehColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMasahat_PJebheh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Tedad_ZelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTedad_Zel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Bar_TedadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBar_Tedad
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Bar_OnvanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBar_Onvan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Tedad_MalekColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTedad_Malek
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property No_MoshakhasatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNo_Moshakhasat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Tedad_SakhtemanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTedad_Sakhteman
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Tedad_ApartemanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTedad_Aparteman
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Tedad_Vahed_KasbColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTedad_Vahed_Kasb
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Masahat_MelkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMasahat_Melk
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Metr_DarColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMetr_Dar
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Rah_MostaghelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRah_Mostaghel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Tedad_VahedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTedad_Vahed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property No_MalekiyatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNo_Malekiyat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Name_MalekColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_Malek
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HozoorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHozoor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As FSelect_TBL_Amlak_MostaghelatRow
            Get
                Return CType(Me.Rows(index),FSelect_TBL_Amlak_MostaghelatRow)
            End Get
        End Property
        
        Public Event FSelect_TBL_Amlak_MostaghelatRowChanging As FSelect_TBL_Amlak_MostaghelatRowChangeEventHandler
        
        Public Event FSelect_TBL_Amlak_MostaghelatRowChanged As FSelect_TBL_Amlak_MostaghelatRowChangeEventHandler
        
        Public Event FSelect_TBL_Amlak_MostaghelatRowDeleting As FSelect_TBL_Amlak_MostaghelatRowChangeEventHandler
        
        Public Event FSelect_TBL_Amlak_MostaghelatRowDeleted As FSelect_TBL_Amlak_MostaghelatRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddFSelect_TBL_Amlak_MostaghelatRow(ByVal row As FSelect_TBL_Amlak_MostaghelatRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddFSelect_TBL_Amlak_MostaghelatRow( _
                    ByVal Tarikh_Malekiat As String,  _
                    ByVal Tarikh_PMalekiat As String,  _
                    ByVal Shomare_Shenasnameh As String,  _
                    ByVal N_Mashhoor As String,  _
                    ByVal N_Khiaban As String,  _
                    ByVal N_Meydan As String,  _
                    ByVal N_Bazar As String,  _
                    ByVal N_Pasaj As String,  _
                    ByVal N_Koocheh As String,  _
                    ByVal N_BonBast As String,  _
                    ByVal N_PelakAbi As String,  _
                    ByVal N_Name_Block As String,  _
                    ByVal N_Tabagheh As String,  _
                    ByVal N_Code_Posti As String,  _
                    ByVal N_Radif_MGhabli As String,  _
                    ByVal Masahat_Zamin As Single,  _
                    ByVal Masahat_Jebheh As Single,  _
                    ByVal Masahat_PJebheh As Single,  _
                    ByVal Tedad_Zel As Byte,  _
                    ByVal Bar_Tedad As Byte,  _
                    ByVal Bar_Onvan As String,  _
                    ByVal Tedad_Malek As Byte,  _
                    ByVal No_Moshakhasat As String,  _
                    ByVal Tedad_Sakhteman As Integer,  _
                    ByVal Tedad_Aparteman As Single,  _
                    ByVal Tedad_Vahed_Kasb As Integer,  _
                    ByVal Masahat_Melk As Single,  _
                    ByVal Metr_Dar As String,  _
                    ByVal Rah_Mostaghel As Boolean,  _
                    ByVal Tedad_Vahed As Integer,  _
                    ByVal No_Malekiyat As String,  _
                    ByVal Name_Malek As String,  _
                    ByVal Hozoor As Boolean) As FSelect_TBL_Amlak_MostaghelatRow
            Dim rowFSelect_TBL_Amlak_MostaghelatRow As FSelect_TBL_Amlak_MostaghelatRow = CType(Me.NewRow,FSelect_TBL_Amlak_MostaghelatRow)
            Dim columnValuesArray() As Object = New Object() {Tarikh_Malekiat, Tarikh_PMalekiat, Shomare_Shenasnameh, N_Mashhoor, N_Khiaban, N_Meydan, N_Bazar, N_Pasaj, N_Koocheh, N_BonBast, N_PelakAbi, N_Name_Block, N_Tabagheh, N_Code_Posti, N_Radif_MGhabli, Masahat_Zamin, Masahat_Jebheh, Masahat_PJebheh, Tedad_Zel, Bar_Tedad, Bar_Onvan, Tedad_Malek, No_Moshakhasat, Tedad_Sakhteman, Tedad_Aparteman, Tedad_Vahed_Kasb, Masahat_Melk, Metr_Dar, Rah_Mostaghel, Tedad_Vahed, No_Malekiyat, Name_Malek, Hozoor}
            rowFSelect_TBL_Amlak_MostaghelatRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowFSelect_TBL_Amlak_MostaghelatRow)
            Return rowFSelect_TBL_Amlak_MostaghelatRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As FSelect_TBL_Amlak_MostaghelatDataTable = CType(MyBase.Clone,FSelect_TBL_Amlak_MostaghelatDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New FSelect_TBL_Amlak_MostaghelatDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnTarikh_Malekiat = MyBase.Columns("Tarikh_Malekiat")
            Me.columnTarikh_PMalekiat = MyBase.Columns("Tarikh_PMalekiat")
            Me.columnShomare_Shenasnameh = MyBase.Columns("Shomare_Shenasnameh")
            Me.columnN_Mashhoor = MyBase.Columns("N_Mashhoor")
            Me.columnN_Khiaban = MyBase.Columns("N_Khiaban")
            Me.columnN_Meydan = MyBase.Columns("N_Meydan")
            Me.columnN_Bazar = MyBase.Columns("N_Bazar")
            Me.columnN_Pasaj = MyBase.Columns("N_Pasaj")
            Me.columnN_Koocheh = MyBase.Columns("N_Koocheh")
            Me.columnN_BonBast = MyBase.Columns("N_BonBast")
            Me.columnN_PelakAbi = MyBase.Columns("N_PelakAbi")
            Me.columnN_Name_Block = MyBase.Columns("N_Name_Block")
            Me.columnN_Tabagheh = MyBase.Columns("N_Tabagheh")
            Me.columnN_Code_Posti = MyBase.Columns("N_Code_Posti")
            Me.columnN_Radif_MGhabli = MyBase.Columns("N_Radif_MGhabli")
            Me.columnMasahat_Zamin = MyBase.Columns("Masahat_Zamin")
            Me.columnMasahat_Jebheh = MyBase.Columns("Masahat_Jebheh")
            Me.columnMasahat_PJebheh = MyBase.Columns("Masahat_PJebheh")
            Me.columnTedad_Zel = MyBase.Columns("Tedad_Zel")
            Me.columnBar_Tedad = MyBase.Columns("Bar_Tedad")
            Me.columnBar_Onvan = MyBase.Columns("Bar_Onvan")
            Me.columnTedad_Malek = MyBase.Columns("Tedad_Malek")
            Me.columnNo_Moshakhasat = MyBase.Columns("No_Moshakhasat")
            Me.columnTedad_Sakhteman = MyBase.Columns("Tedad_Sakhteman")
            Me.columnTedad_Aparteman = MyBase.Columns("Tedad_Aparteman")
            Me.columnTedad_Vahed_Kasb = MyBase.Columns("Tedad_Vahed_Kasb")
            Me.columnMasahat_Melk = MyBase.Columns("Masahat_Melk")
            Me.columnMetr_Dar = MyBase.Columns("Metr_Dar")
            Me.columnRah_Mostaghel = MyBase.Columns("Rah_Mostaghel")
            Me.columnTedad_Vahed = MyBase.Columns("Tedad_Vahed")
            Me.columnNo_Malekiyat = MyBase.Columns("No_Malekiyat")
            Me.columnName_Malek = MyBase.Columns("Name_Malek")
            Me.columnHozoor = MyBase.Columns("Hozoor")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnTarikh_Malekiat = New Global.System.Data.DataColumn("Tarikh_Malekiat", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTarikh_Malekiat)
            Me.columnTarikh_PMalekiat = New Global.System.Data.DataColumn("Tarikh_PMalekiat", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTarikh_PMalekiat)
            Me.columnShomare_Shenasnameh = New Global.System.Data.DataColumn("Shomare_Shenasnameh", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShomare_Shenasnameh)
            Me.columnN_Mashhoor = New Global.System.Data.DataColumn("N_Mashhoor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnN_Mashhoor)
            Me.columnN_Khiaban = New Global.System.Data.DataColumn("N_Khiaban", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnN_Khiaban)
            Me.columnN_Meydan = New Global.System.Data.DataColumn("N_Meydan", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnN_Meydan)
            Me.columnN_Bazar = New Global.System.Data.DataColumn("N_Bazar", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnN_Bazar)
            Me.columnN_Pasaj = New Global.System.Data.DataColumn("N_Pasaj", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnN_Pasaj)
            Me.columnN_Koocheh = New Global.System.Data.DataColumn("N_Koocheh", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnN_Koocheh)
            Me.columnN_BonBast = New Global.System.Data.DataColumn("N_BonBast", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnN_BonBast)
            Me.columnN_PelakAbi = New Global.System.Data.DataColumn("N_PelakAbi", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnN_PelakAbi)
            Me.columnN_Name_Block = New Global.System.Data.DataColumn("N_Name_Block", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnN_Name_Block)
            Me.columnN_Tabagheh = New Global.System.Data.DataColumn("N_Tabagheh", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnN_Tabagheh)
            Me.columnN_Code_Posti = New Global.System.Data.DataColumn("N_Code_Posti", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnN_Code_Posti)
            Me.columnN_Radif_MGhabli = New Global.System.Data.DataColumn("N_Radif_MGhabli", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnN_Radif_MGhabli)
            Me.columnMasahat_Zamin = New Global.System.Data.DataColumn("Masahat_Zamin", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMasahat_Zamin)
            Me.columnMasahat_Jebheh = New Global.System.Data.DataColumn("Masahat_Jebheh", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMasahat_Jebheh)
            Me.columnMasahat_PJebheh = New Global.System.Data.DataColumn("Masahat_PJebheh", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMasahat_PJebheh)
            Me.columnTedad_Zel = New Global.System.Data.DataColumn("Tedad_Zel", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTedad_Zel)
            Me.columnBar_Tedad = New Global.System.Data.DataColumn("Bar_Tedad", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBar_Tedad)
            Me.columnBar_Onvan = New Global.System.Data.DataColumn("Bar_Onvan", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBar_Onvan)
            Me.columnTedad_Malek = New Global.System.Data.DataColumn("Tedad_Malek", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTedad_Malek)
            Me.columnNo_Moshakhasat = New Global.System.Data.DataColumn("No_Moshakhasat", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNo_Moshakhasat)
            Me.columnTedad_Sakhteman = New Global.System.Data.DataColumn("Tedad_Sakhteman", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTedad_Sakhteman)
            Me.columnTedad_Aparteman = New Global.System.Data.DataColumn("Tedad_Aparteman", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTedad_Aparteman)
            Me.columnTedad_Vahed_Kasb = New Global.System.Data.DataColumn("Tedad_Vahed_Kasb", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTedad_Vahed_Kasb)
            Me.columnMasahat_Melk = New Global.System.Data.DataColumn("Masahat_Melk", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMasahat_Melk)
            Me.columnMetr_Dar = New Global.System.Data.DataColumn("Metr_Dar", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMetr_Dar)
            Me.columnRah_Mostaghel = New Global.System.Data.DataColumn("Rah_Mostaghel", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRah_Mostaghel)
            Me.columnTedad_Vahed = New Global.System.Data.DataColumn("Tedad_Vahed", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTedad_Vahed)
            Me.columnNo_Malekiyat = New Global.System.Data.DataColumn("No_Malekiyat", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNo_Malekiyat)
            Me.columnName_Malek = New Global.System.Data.DataColumn("Name_Malek", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_Malek)
            Me.columnHozoor = New Global.System.Data.DataColumn("Hozoor", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHozoor)
            Me.columnTarikh_Malekiat.MaxLength = 8
            Me.columnTarikh_PMalekiat.MaxLength = 8
            Me.columnShomare_Shenasnameh.MaxLength = 27
            Me.columnN_Mashhoor.MaxLength = 50
            Me.columnN_Khiaban.MaxLength = 50
            Me.columnN_Meydan.MaxLength = 50
            Me.columnN_Bazar.MaxLength = 50
            Me.columnN_Pasaj.MaxLength = 50
            Me.columnN_Koocheh.MaxLength = 50
            Me.columnN_BonBast.MaxLength = 50
            Me.columnN_PelakAbi.MaxLength = 20
            Me.columnN_Name_Block.MaxLength = 50
            Me.columnN_Tabagheh.MaxLength = 10
            Me.columnN_Code_Posti.MaxLength = 20
            Me.columnN_Radif_MGhabli.MaxLength = 10
            Me.columnBar_Onvan.MaxLength = 30
            Me.columnNo_Moshakhasat.ReadOnly = true
            Me.columnNo_Moshakhasat.MaxLength = 50
            Me.columnMetr_Dar.MaxLength = 15
            Me.columnNo_Malekiyat.ReadOnly = true
            Me.columnNo_Malekiyat.MaxLength = 50
            Me.columnName_Malek.MaxLength = 60
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewFSelect_TBL_Amlak_MostaghelatRow() As FSelect_TBL_Amlak_MostaghelatRow
            Return CType(Me.NewRow,FSelect_TBL_Amlak_MostaghelatRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New FSelect_TBL_Amlak_MostaghelatRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(FSelect_TBL_Amlak_MostaghelatRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.FSelect_TBL_Amlak_MostaghelatRowChangedEvent) Is Nothing) Then
                RaiseEvent FSelect_TBL_Amlak_MostaghelatRowChanged(Me, New FSelect_TBL_Amlak_MostaghelatRowChangeEvent(CType(e.Row,FSelect_TBL_Amlak_MostaghelatRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.FSelect_TBL_Amlak_MostaghelatRowChangingEvent) Is Nothing) Then
                RaiseEvent FSelect_TBL_Amlak_MostaghelatRowChanging(Me, New FSelect_TBL_Amlak_MostaghelatRowChangeEvent(CType(e.Row,FSelect_TBL_Amlak_MostaghelatRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.FSelect_TBL_Amlak_MostaghelatRowDeletedEvent) Is Nothing) Then
                RaiseEvent FSelect_TBL_Amlak_MostaghelatRowDeleted(Me, New FSelect_TBL_Amlak_MostaghelatRowChangeEvent(CType(e.Row,FSelect_TBL_Amlak_MostaghelatRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.FSelect_TBL_Amlak_MostaghelatRowDeletingEvent) Is Nothing) Then
                RaiseEvent FSelect_TBL_Amlak_MostaghelatRowDeleting(Me, New FSelect_TBL_Amlak_MostaghelatRowChangeEvent(CType(e.Row,FSelect_TBL_Amlak_MostaghelatRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveFSelect_TBL_Amlak_MostaghelatRow(ByVal row As FSelect_TBL_Amlak_MostaghelatRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DB_NoSaziDataSet = New DB_NoSaziDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "FSelect_TBL_Amlak_MostaghelatDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Tbl_Amlak_MostaghelatDataTable
        Inherits Global.System.Data.TypedTableBase(Of Tbl_Amlak_MostaghelatRow)
        
        Private columnTarikh_Malekiat As Global.System.Data.DataColumn
        
        Private columnTarikh_PMalekiat As Global.System.Data.DataColumn
        
        Private columnShomare_Shenasnameh As Global.System.Data.DataColumn
        
        Private columnN_Mashhoor As Global.System.Data.DataColumn
        
        Private columnN_Khiaban As Global.System.Data.DataColumn
        
        Private columnN_Meydan As Global.System.Data.DataColumn
        
        Private columnN_Bazar As Global.System.Data.DataColumn
        
        Private columnN_Pasaj As Global.System.Data.DataColumn
        
        Private columnN_Koocheh As Global.System.Data.DataColumn
        
        Private columnN_BonBast As Global.System.Data.DataColumn
        
        Private columnN_PelakAbi As Global.System.Data.DataColumn
        
        Private columnN_Name_Block As Global.System.Data.DataColumn
        
        Private columnN_Tabagheh As Global.System.Data.DataColumn
        
        Private columnN_Code_Posti As Global.System.Data.DataColumn
        
        Private columnN_Radif_MGhabli As Global.System.Data.DataColumn
        
        Private columnMasahat_Zamin As Global.System.Data.DataColumn
        
        Private columnMasahat_Jebheh As Global.System.Data.DataColumn
        
        Private columnMasahat_PJebheh As Global.System.Data.DataColumn
        
        Private columnTedad_Zel As Global.System.Data.DataColumn
        
        Private columnBar_Tedad As Global.System.Data.DataColumn
        
        Private columnBar_Onvan As Global.System.Data.DataColumn
        
        Private columnTedad_Malek As Global.System.Data.DataColumn
        
        Private columnNo_Moshakhasat As Global.System.Data.DataColumn
        
        Private columnTedad_Sakhteman As Global.System.Data.DataColumn
        
        Private columnTedad_Aparteman As Global.System.Data.DataColumn
        
        Private columnTedad_Vahed_Kasb As Global.System.Data.DataColumn
        
        Private columnMasahat_Melk As Global.System.Data.DataColumn
        
        Private columnMetr_Dar As Global.System.Data.DataColumn
        
        Private columnRah_Mostaghel As Global.System.Data.DataColumn
        
        Private columnTedad_Vahed As Global.System.Data.DataColumn
        
        Private columnNo_Malekiyat As Global.System.Data.DataColumn
        
        Private columnName_Malek As Global.System.Data.DataColumn
        
        Private columnHozoor As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Tbl_Amlak_Mostaghelat"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Tarikh_MalekiatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTarikh_Malekiat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Tarikh_PMalekiatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTarikh_PMalekiat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Shomare_ShenasnamehColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShomare_Shenasnameh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property N_MashhoorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnN_Mashhoor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property N_KhiabanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnN_Khiaban
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property N_MeydanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnN_Meydan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property N_BazarColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnN_Bazar
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property N_PasajColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnN_Pasaj
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property N_KoochehColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnN_Koocheh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property N_BonBastColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnN_BonBast
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property N_PelakAbiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnN_PelakAbi
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property N_Name_BlockColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnN_Name_Block
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property N_TabaghehColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnN_Tabagheh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property N_Code_PostiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnN_Code_Posti
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property N_Radif_MGhabliColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnN_Radif_MGhabli
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Masahat_ZaminColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMasahat_Zamin
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Masahat_JebhehColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMasahat_Jebheh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Masahat_PJebhehColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMasahat_PJebheh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Tedad_ZelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTedad_Zel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Bar_TedadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBar_Tedad
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Bar_OnvanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBar_Onvan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Tedad_MalekColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTedad_Malek
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property No_MoshakhasatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNo_Moshakhasat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Tedad_SakhtemanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTedad_Sakhteman
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Tedad_ApartemanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTedad_Aparteman
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Tedad_Vahed_KasbColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTedad_Vahed_Kasb
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Masahat_MelkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMasahat_Melk
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Metr_DarColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMetr_Dar
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Rah_MostaghelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRah_Mostaghel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Tedad_VahedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTedad_Vahed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property No_MalekiyatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNo_Malekiyat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Name_MalekColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName_Malek
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HozoorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHozoor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Tbl_Amlak_MostaghelatRow
            Get
                Return CType(Me.Rows(index),Tbl_Amlak_MostaghelatRow)
            End Get
        End Property
        
        Public Event Tbl_Amlak_MostaghelatRowChanging As Tbl_Amlak_MostaghelatRowChangeEventHandler
        
        Public Event Tbl_Amlak_MostaghelatRowChanged As Tbl_Amlak_MostaghelatRowChangeEventHandler
        
        Public Event Tbl_Amlak_MostaghelatRowDeleting As Tbl_Amlak_MostaghelatRowChangeEventHandler
        
        Public Event Tbl_Amlak_MostaghelatRowDeleted As Tbl_Amlak_MostaghelatRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddTbl_Amlak_MostaghelatRow(ByVal row As Tbl_Amlak_MostaghelatRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddTbl_Amlak_MostaghelatRow( _
                    ByVal Tarikh_Malekiat As String,  _
                    ByVal Tarikh_PMalekiat As String,  _
                    ByVal Shomare_Shenasnameh As String,  _
                    ByVal N_Mashhoor As String,  _
                    ByVal N_Khiaban As String,  _
                    ByVal N_Meydan As String,  _
                    ByVal N_Bazar As String,  _
                    ByVal N_Pasaj As String,  _
                    ByVal N_Koocheh As String,  _
                    ByVal N_BonBast As String,  _
                    ByVal N_PelakAbi As String,  _
                    ByVal N_Name_Block As String,  _
                    ByVal N_Tabagheh As String,  _
                    ByVal N_Code_Posti As String,  _
                    ByVal N_Radif_MGhabli As String,  _
                    ByVal Masahat_Zamin As Single,  _
                    ByVal Masahat_Jebheh As Single,  _
                    ByVal Masahat_PJebheh As Single,  _
                    ByVal Tedad_Zel As Byte,  _
                    ByVal Bar_Tedad As Byte,  _
                    ByVal Bar_Onvan As String,  _
                    ByVal Tedad_Malek As Byte,  _
                    ByVal No_Moshakhasat As String,  _
                    ByVal Tedad_Sakhteman As Integer,  _
                    ByVal Tedad_Aparteman As Single,  _
                    ByVal Tedad_Vahed_Kasb As Integer,  _
                    ByVal Masahat_Melk As Single,  _
                    ByVal Metr_Dar As String,  _
                    ByVal Rah_Mostaghel As Boolean,  _
                    ByVal Tedad_Vahed As Integer,  _
                    ByVal No_Malekiyat As String,  _
                    ByVal Name_Malek As String,  _
                    ByVal Hozoor As Boolean) As Tbl_Amlak_MostaghelatRow
            Dim rowTbl_Amlak_MostaghelatRow As Tbl_Amlak_MostaghelatRow = CType(Me.NewRow,Tbl_Amlak_MostaghelatRow)
            Dim columnValuesArray() As Object = New Object() {Tarikh_Malekiat, Tarikh_PMalekiat, Shomare_Shenasnameh, N_Mashhoor, N_Khiaban, N_Meydan, N_Bazar, N_Pasaj, N_Koocheh, N_BonBast, N_PelakAbi, N_Name_Block, N_Tabagheh, N_Code_Posti, N_Radif_MGhabli, Masahat_Zamin, Masahat_Jebheh, Masahat_PJebheh, Tedad_Zel, Bar_Tedad, Bar_Onvan, Tedad_Malek, No_Moshakhasat, Tedad_Sakhteman, Tedad_Aparteman, Tedad_Vahed_Kasb, Masahat_Melk, Metr_Dar, Rah_Mostaghel, Tedad_Vahed, No_Malekiyat, Name_Malek, Hozoor}
            rowTbl_Amlak_MostaghelatRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTbl_Amlak_MostaghelatRow)
            Return rowTbl_Amlak_MostaghelatRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Tbl_Amlak_MostaghelatDataTable = CType(MyBase.Clone,Tbl_Amlak_MostaghelatDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Tbl_Amlak_MostaghelatDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnTarikh_Malekiat = MyBase.Columns("Tarikh_Malekiat")
            Me.columnTarikh_PMalekiat = MyBase.Columns("Tarikh_PMalekiat")
            Me.columnShomare_Shenasnameh = MyBase.Columns("Shomare_Shenasnameh")
            Me.columnN_Mashhoor = MyBase.Columns("N_Mashhoor")
            Me.columnN_Khiaban = MyBase.Columns("N_Khiaban")
            Me.columnN_Meydan = MyBase.Columns("N_Meydan")
            Me.columnN_Bazar = MyBase.Columns("N_Bazar")
            Me.columnN_Pasaj = MyBase.Columns("N_Pasaj")
            Me.columnN_Koocheh = MyBase.Columns("N_Koocheh")
            Me.columnN_BonBast = MyBase.Columns("N_BonBast")
            Me.columnN_PelakAbi = MyBase.Columns("N_PelakAbi")
            Me.columnN_Name_Block = MyBase.Columns("N_Name_Block")
            Me.columnN_Tabagheh = MyBase.Columns("N_Tabagheh")
            Me.columnN_Code_Posti = MyBase.Columns("N_Code_Posti")
            Me.columnN_Radif_MGhabli = MyBase.Columns("N_Radif_MGhabli")
            Me.columnMasahat_Zamin = MyBase.Columns("Masahat_Zamin")
            Me.columnMasahat_Jebheh = MyBase.Columns("Masahat_Jebheh")
            Me.columnMasahat_PJebheh = MyBase.Columns("Masahat_PJebheh")
            Me.columnTedad_Zel = MyBase.Columns("Tedad_Zel")
            Me.columnBar_Tedad = MyBase.Columns("Bar_Tedad")
            Me.columnBar_Onvan = MyBase.Columns("Bar_Onvan")
            Me.columnTedad_Malek = MyBase.Columns("Tedad_Malek")
            Me.columnNo_Moshakhasat = MyBase.Columns("No_Moshakhasat")
            Me.columnTedad_Sakhteman = MyBase.Columns("Tedad_Sakhteman")
            Me.columnTedad_Aparteman = MyBase.Columns("Tedad_Aparteman")
            Me.columnTedad_Vahed_Kasb = MyBase.Columns("Tedad_Vahed_Kasb")
            Me.columnMasahat_Melk = MyBase.Columns("Masahat_Melk")
            Me.columnMetr_Dar = MyBase.Columns("Metr_Dar")
            Me.columnRah_Mostaghel = MyBase.Columns("Rah_Mostaghel")
            Me.columnTedad_Vahed = MyBase.Columns("Tedad_Vahed")
            Me.columnNo_Malekiyat = MyBase.Columns("No_Malekiyat")
            Me.columnName_Malek = MyBase.Columns("Name_Malek")
            Me.columnHozoor = MyBase.Columns("Hozoor")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnTarikh_Malekiat = New Global.System.Data.DataColumn("Tarikh_Malekiat", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTarikh_Malekiat)
            Me.columnTarikh_PMalekiat = New Global.System.Data.DataColumn("Tarikh_PMalekiat", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTarikh_PMalekiat)
            Me.columnShomare_Shenasnameh = New Global.System.Data.DataColumn("Shomare_Shenasnameh", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShomare_Shenasnameh)
            Me.columnN_Mashhoor = New Global.System.Data.DataColumn("N_Mashhoor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnN_Mashhoor)
            Me.columnN_Khiaban = New Global.System.Data.DataColumn("N_Khiaban", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnN_Khiaban)
            Me.columnN_Meydan = New Global.System.Data.DataColumn("N_Meydan", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnN_Meydan)
            Me.columnN_Bazar = New Global.System.Data.DataColumn("N_Bazar", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnN_Bazar)
            Me.columnN_Pasaj = New Global.System.Data.DataColumn("N_Pasaj", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnN_Pasaj)
            Me.columnN_Koocheh = New Global.System.Data.DataColumn("N_Koocheh", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnN_Koocheh)
            Me.columnN_BonBast = New Global.System.Data.DataColumn("N_BonBast", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnN_BonBast)
            Me.columnN_PelakAbi = New Global.System.Data.DataColumn("N_PelakAbi", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnN_PelakAbi)
            Me.columnN_Name_Block = New Global.System.Data.DataColumn("N_Name_Block", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnN_Name_Block)
            Me.columnN_Tabagheh = New Global.System.Data.DataColumn("N_Tabagheh", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnN_Tabagheh)
            Me.columnN_Code_Posti = New Global.System.Data.DataColumn("N_Code_Posti", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnN_Code_Posti)
            Me.columnN_Radif_MGhabli = New Global.System.Data.DataColumn("N_Radif_MGhabli", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnN_Radif_MGhabli)
            Me.columnMasahat_Zamin = New Global.System.Data.DataColumn("Masahat_Zamin", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMasahat_Zamin)
            Me.columnMasahat_Jebheh = New Global.System.Data.DataColumn("Masahat_Jebheh", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMasahat_Jebheh)
            Me.columnMasahat_PJebheh = New Global.System.Data.DataColumn("Masahat_PJebheh", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMasahat_PJebheh)
            Me.columnTedad_Zel = New Global.System.Data.DataColumn("Tedad_Zel", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTedad_Zel)
            Me.columnBar_Tedad = New Global.System.Data.DataColumn("Bar_Tedad", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBar_Tedad)
            Me.columnBar_Onvan = New Global.System.Data.DataColumn("Bar_Onvan", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBar_Onvan)
            Me.columnTedad_Malek = New Global.System.Data.DataColumn("Tedad_Malek", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTedad_Malek)
            Me.columnNo_Moshakhasat = New Global.System.Data.DataColumn("No_Moshakhasat", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNo_Moshakhasat)
            Me.columnTedad_Sakhteman = New Global.System.Data.DataColumn("Tedad_Sakhteman", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTedad_Sakhteman)
            Me.columnTedad_Aparteman = New Global.System.Data.DataColumn("Tedad_Aparteman", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTedad_Aparteman)
            Me.columnTedad_Vahed_Kasb = New Global.System.Data.DataColumn("Tedad_Vahed_Kasb", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTedad_Vahed_Kasb)
            Me.columnMasahat_Melk = New Global.System.Data.DataColumn("Masahat_Melk", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMasahat_Melk)
            Me.columnMetr_Dar = New Global.System.Data.DataColumn("Metr_Dar", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMetr_Dar)
            Me.columnRah_Mostaghel = New Global.System.Data.DataColumn("Rah_Mostaghel", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRah_Mostaghel)
            Me.columnTedad_Vahed = New Global.System.Data.DataColumn("Tedad_Vahed", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTedad_Vahed)
            Me.columnNo_Malekiyat = New Global.System.Data.DataColumn("No_Malekiyat", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNo_Malekiyat)
            Me.columnName_Malek = New Global.System.Data.DataColumn("Name_Malek", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName_Malek)
            Me.columnHozoor = New Global.System.Data.DataColumn("Hozoor", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHozoor)
            Me.columnTarikh_Malekiat.MaxLength = 8
            Me.columnTarikh_PMalekiat.MaxLength = 8
            Me.columnShomare_Shenasnameh.MaxLength = 27
            Me.columnN_Mashhoor.MaxLength = 50
            Me.columnN_Khiaban.MaxLength = 50
            Me.columnN_Meydan.MaxLength = 50
            Me.columnN_Bazar.MaxLength = 50
            Me.columnN_Pasaj.MaxLength = 50
            Me.columnN_Koocheh.MaxLength = 50
            Me.columnN_BonBast.MaxLength = 50
            Me.columnN_PelakAbi.MaxLength = 20
            Me.columnN_Name_Block.MaxLength = 50
            Me.columnN_Tabagheh.MaxLength = 10
            Me.columnN_Code_Posti.MaxLength = 20
            Me.columnN_Radif_MGhabli.MaxLength = 10
            Me.columnBar_Onvan.MaxLength = 30
            Me.columnNo_Moshakhasat.MaxLength = 3
            Me.columnMetr_Dar.MaxLength = 15
            Me.columnNo_Malekiyat.MaxLength = 3
            Me.columnName_Malek.MaxLength = 60
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewTbl_Amlak_MostaghelatRow() As Tbl_Amlak_MostaghelatRow
            Return CType(Me.NewRow,Tbl_Amlak_MostaghelatRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Tbl_Amlak_MostaghelatRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Tbl_Amlak_MostaghelatRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Tbl_Amlak_MostaghelatRowChangedEvent) Is Nothing) Then
                RaiseEvent Tbl_Amlak_MostaghelatRowChanged(Me, New Tbl_Amlak_MostaghelatRowChangeEvent(CType(e.Row,Tbl_Amlak_MostaghelatRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Tbl_Amlak_MostaghelatRowChangingEvent) Is Nothing) Then
                RaiseEvent Tbl_Amlak_MostaghelatRowChanging(Me, New Tbl_Amlak_MostaghelatRowChangeEvent(CType(e.Row,Tbl_Amlak_MostaghelatRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Tbl_Amlak_MostaghelatRowDeletedEvent) Is Nothing) Then
                RaiseEvent Tbl_Amlak_MostaghelatRowDeleted(Me, New Tbl_Amlak_MostaghelatRowChangeEvent(CType(e.Row,Tbl_Amlak_MostaghelatRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Tbl_Amlak_MostaghelatRowDeletingEvent) Is Nothing) Then
                RaiseEvent Tbl_Amlak_MostaghelatRowDeleting(Me, New Tbl_Amlak_MostaghelatRowChangeEvent(CType(e.Row,Tbl_Amlak_MostaghelatRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveTbl_Amlak_MostaghelatRow(ByVal row As Tbl_Amlak_MostaghelatRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DB_NoSaziDataSet = New DB_NoSaziDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Tbl_Amlak_MostaghelatDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Select_Tbl_DerakhtDataTable
        Inherits Global.System.Data.TypedTableBase(Of Select_Tbl_DerakhtRow)
        
        Private columnShomare_Shenasnameh As Global.System.Data.DataColumn
        
        Private columnNo As Global.System.Data.DataColumn
        
        Private columnBon As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Select_Tbl_Derakht"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Shomare_ShenasnamehColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShomare_Shenasnameh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BonColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBon
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Select_Tbl_DerakhtRow
            Get
                Return CType(Me.Rows(index),Select_Tbl_DerakhtRow)
            End Get
        End Property
        
        Public Event Select_Tbl_DerakhtRowChanging As Select_Tbl_DerakhtRowChangeEventHandler
        
        Public Event Select_Tbl_DerakhtRowChanged As Select_Tbl_DerakhtRowChangeEventHandler
        
        Public Event Select_Tbl_DerakhtRowDeleting As Select_Tbl_DerakhtRowChangeEventHandler
        
        Public Event Select_Tbl_DerakhtRowDeleted As Select_Tbl_DerakhtRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddSelect_Tbl_DerakhtRow(ByVal row As Select_Tbl_DerakhtRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddSelect_Tbl_DerakhtRow(ByVal Shomare_Shenasnameh As String, ByVal No As String, ByVal Bon As String) As Select_Tbl_DerakhtRow
            Dim rowSelect_Tbl_DerakhtRow As Select_Tbl_DerakhtRow = CType(Me.NewRow,Select_Tbl_DerakhtRow)
            Dim columnValuesArray() As Object = New Object() {Shomare_Shenasnameh, No, Bon}
            rowSelect_Tbl_DerakhtRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSelect_Tbl_DerakhtRow)
            Return rowSelect_Tbl_DerakhtRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Select_Tbl_DerakhtDataTable = CType(MyBase.Clone,Select_Tbl_DerakhtDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Select_Tbl_DerakhtDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnShomare_Shenasnameh = MyBase.Columns("Shomare_Shenasnameh")
            Me.columnNo = MyBase.Columns("No")
            Me.columnBon = MyBase.Columns("Bon")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnShomare_Shenasnameh = New Global.System.Data.DataColumn("Shomare_Shenasnameh", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShomare_Shenasnameh)
            Me.columnNo = New Global.System.Data.DataColumn("No", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNo)
            Me.columnBon = New Global.System.Data.DataColumn("Bon", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBon)
            Me.columnShomare_Shenasnameh.MaxLength = 27
            Me.columnNo.ReadOnly = true
            Me.columnNo.MaxLength = 50
            Me.columnBon.ReadOnly = true
            Me.columnBon.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewSelect_Tbl_DerakhtRow() As Select_Tbl_DerakhtRow
            Return CType(Me.NewRow,Select_Tbl_DerakhtRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Select_Tbl_DerakhtRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Select_Tbl_DerakhtRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Select_Tbl_DerakhtRowChangedEvent) Is Nothing) Then
                RaiseEvent Select_Tbl_DerakhtRowChanged(Me, New Select_Tbl_DerakhtRowChangeEvent(CType(e.Row,Select_Tbl_DerakhtRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Select_Tbl_DerakhtRowChangingEvent) Is Nothing) Then
                RaiseEvent Select_Tbl_DerakhtRowChanging(Me, New Select_Tbl_DerakhtRowChangeEvent(CType(e.Row,Select_Tbl_DerakhtRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Select_Tbl_DerakhtRowDeletedEvent) Is Nothing) Then
                RaiseEvent Select_Tbl_DerakhtRowDeleted(Me, New Select_Tbl_DerakhtRowChangeEvent(CType(e.Row,Select_Tbl_DerakhtRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Select_Tbl_DerakhtRowDeletingEvent) Is Nothing) Then
                RaiseEvent Select_Tbl_DerakhtRowDeleting(Me, New Select_Tbl_DerakhtRowChangeEvent(CType(e.Row,Select_Tbl_DerakhtRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveSelect_Tbl_DerakhtRow(ByVal row As Select_Tbl_DerakhtRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DB_NoSaziDataSet = New DB_NoSaziDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Select_Tbl_DerakhtDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Tbl_Moshakhasat_SakhtemanDataTable
        Inherits Global.System.Data.TypedTableBase(Of Tbl_Moshakhasat_SakhtemanRow)
        
        Private columnShomare_Shenasnameh As Global.System.Data.DataColumn
        
        Private columnTedad_Tabaghat As Global.System.Data.DataColumn
        
        Private columnMasahat_Zirbana As Global.System.Data.DataColumn
        
        Private columnMasahat_Bana As Global.System.Data.DataColumn
        
        Private columnMasahat_Hararat As Global.System.Data.DataColumn
        
        Private columnMasahat_Tahvieh As Global.System.Data.DataColumn
        
        Private columnMasahat_Khonak As Global.System.Data.DataColumn
        
        Private columnMasahat_Asansor As Global.System.Data.DataColumn
        
        Private columnSharh_No_Divar As Global.System.Data.DataColumn
        
        Private columnSharh_No_Saghf As Global.System.Data.DataColumn
        
        Private columnCode_no_Sakhteman As Global.System.Data.DataColumn
        
        Private columnNo_Nama As Global.System.Data.DataColumn
        
        Private columnNo_Nama_Code As Global.System.Data.DataColumn
        
        Private columnMasahat_zirzamin As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Tbl_Moshakhasat_Sakhteman"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Shomare_ShenasnamehColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShomare_Shenasnameh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Tedad_TabaghatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTedad_Tabaghat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Masahat_ZirbanaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMasahat_Zirbana
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Masahat_BanaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMasahat_Bana
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Masahat_HararatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMasahat_Hararat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Masahat_TahviehColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMasahat_Tahvieh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Masahat_KhonakColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMasahat_Khonak
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Masahat_AsansorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMasahat_Asansor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Sharh_No_DivarColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSharh_No_Divar
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Sharh_No_SaghfColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSharh_No_Saghf
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Code_no_SakhtemanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCode_no_Sakhteman
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property No_NamaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNo_Nama
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property No_Nama_CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNo_Nama_Code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Masahat_zirzaminColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMasahat_zirzamin
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Tbl_Moshakhasat_SakhtemanRow
            Get
                Return CType(Me.Rows(index),Tbl_Moshakhasat_SakhtemanRow)
            End Get
        End Property
        
        Public Event Tbl_Moshakhasat_SakhtemanRowChanging As Tbl_Moshakhasat_SakhtemanRowChangeEventHandler
        
        Public Event Tbl_Moshakhasat_SakhtemanRowChanged As Tbl_Moshakhasat_SakhtemanRowChangeEventHandler
        
        Public Event Tbl_Moshakhasat_SakhtemanRowDeleting As Tbl_Moshakhasat_SakhtemanRowChangeEventHandler
        
        Public Event Tbl_Moshakhasat_SakhtemanRowDeleted As Tbl_Moshakhasat_SakhtemanRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddTbl_Moshakhasat_SakhtemanRow(ByVal row As Tbl_Moshakhasat_SakhtemanRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddTbl_Moshakhasat_SakhtemanRow(ByVal Shomare_Shenasnameh As String, ByVal Tedad_Tabaghat As Single, ByVal Masahat_Zirbana As Single, ByVal Masahat_Bana As Single, ByVal Masahat_Hararat As Single, ByVal Masahat_Tahvieh As Single, ByVal Masahat_Khonak As Single, ByVal Masahat_Asansor As Single, ByVal Sharh_No_Divar As String, ByVal Sharh_No_Saghf As String, ByVal Code_no_Sakhteman As Byte, ByVal No_Nama As String, ByVal No_Nama_Code As Byte, ByVal Masahat_zirzamin As Single) As Tbl_Moshakhasat_SakhtemanRow
            Dim rowTbl_Moshakhasat_SakhtemanRow As Tbl_Moshakhasat_SakhtemanRow = CType(Me.NewRow,Tbl_Moshakhasat_SakhtemanRow)
            Dim columnValuesArray() As Object = New Object() {Shomare_Shenasnameh, Tedad_Tabaghat, Masahat_Zirbana, Masahat_Bana, Masahat_Hararat, Masahat_Tahvieh, Masahat_Khonak, Masahat_Asansor, Sharh_No_Divar, Sharh_No_Saghf, Code_no_Sakhteman, No_Nama, No_Nama_Code, Masahat_zirzamin}
            rowTbl_Moshakhasat_SakhtemanRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTbl_Moshakhasat_SakhtemanRow)
            Return rowTbl_Moshakhasat_SakhtemanRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Tbl_Moshakhasat_SakhtemanDataTable = CType(MyBase.Clone,Tbl_Moshakhasat_SakhtemanDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Tbl_Moshakhasat_SakhtemanDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnShomare_Shenasnameh = MyBase.Columns("Shomare_Shenasnameh")
            Me.columnTedad_Tabaghat = MyBase.Columns("Tedad_Tabaghat")
            Me.columnMasahat_Zirbana = MyBase.Columns("Masahat_Zirbana")
            Me.columnMasahat_Bana = MyBase.Columns("Masahat_Bana")
            Me.columnMasahat_Hararat = MyBase.Columns("Masahat_Hararat")
            Me.columnMasahat_Tahvieh = MyBase.Columns("Masahat_Tahvieh")
            Me.columnMasahat_Khonak = MyBase.Columns("Masahat_Khonak")
            Me.columnMasahat_Asansor = MyBase.Columns("Masahat_Asansor")
            Me.columnSharh_No_Divar = MyBase.Columns("Sharh_No_Divar")
            Me.columnSharh_No_Saghf = MyBase.Columns("Sharh_No_Saghf")
            Me.columnCode_no_Sakhteman = MyBase.Columns("Code_no_Sakhteman")
            Me.columnNo_Nama = MyBase.Columns("No_Nama")
            Me.columnNo_Nama_Code = MyBase.Columns("No_Nama_Code")
            Me.columnMasahat_zirzamin = MyBase.Columns("Masahat_zirzamin")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnShomare_Shenasnameh = New Global.System.Data.DataColumn("Shomare_Shenasnameh", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShomare_Shenasnameh)
            Me.columnTedad_Tabaghat = New Global.System.Data.DataColumn("Tedad_Tabaghat", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTedad_Tabaghat)
            Me.columnMasahat_Zirbana = New Global.System.Data.DataColumn("Masahat_Zirbana", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMasahat_Zirbana)
            Me.columnMasahat_Bana = New Global.System.Data.DataColumn("Masahat_Bana", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMasahat_Bana)
            Me.columnMasahat_Hararat = New Global.System.Data.DataColumn("Masahat_Hararat", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMasahat_Hararat)
            Me.columnMasahat_Tahvieh = New Global.System.Data.DataColumn("Masahat_Tahvieh", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMasahat_Tahvieh)
            Me.columnMasahat_Khonak = New Global.System.Data.DataColumn("Masahat_Khonak", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMasahat_Khonak)
            Me.columnMasahat_Asansor = New Global.System.Data.DataColumn("Masahat_Asansor", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMasahat_Asansor)
            Me.columnSharh_No_Divar = New Global.System.Data.DataColumn("Sharh_No_Divar", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSharh_No_Divar)
            Me.columnSharh_No_Saghf = New Global.System.Data.DataColumn("Sharh_No_Saghf", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSharh_No_Saghf)
            Me.columnCode_no_Sakhteman = New Global.System.Data.DataColumn("Code_no_Sakhteman", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCode_no_Sakhteman)
            Me.columnNo_Nama = New Global.System.Data.DataColumn("No_Nama", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNo_Nama)
            Me.columnNo_Nama_Code = New Global.System.Data.DataColumn("No_Nama_Code", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNo_Nama_Code)
            Me.columnMasahat_zirzamin = New Global.System.Data.DataColumn("Masahat_zirzamin", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMasahat_zirzamin)
            Me.columnShomare_Shenasnameh.MaxLength = 27
            Me.columnSharh_No_Divar.MaxLength = 20
            Me.columnSharh_No_Saghf.MaxLength = 20
            Me.columnNo_Nama.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewTbl_Moshakhasat_SakhtemanRow() As Tbl_Moshakhasat_SakhtemanRow
            Return CType(Me.NewRow,Tbl_Moshakhasat_SakhtemanRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Tbl_Moshakhasat_SakhtemanRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Tbl_Moshakhasat_SakhtemanRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Tbl_Moshakhasat_SakhtemanRowChangedEvent) Is Nothing) Then
                RaiseEvent Tbl_Moshakhasat_SakhtemanRowChanged(Me, New Tbl_Moshakhasat_SakhtemanRowChangeEvent(CType(e.Row,Tbl_Moshakhasat_SakhtemanRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Tbl_Moshakhasat_SakhtemanRowChangingEvent) Is Nothing) Then
                RaiseEvent Tbl_Moshakhasat_SakhtemanRowChanging(Me, New Tbl_Moshakhasat_SakhtemanRowChangeEvent(CType(e.Row,Tbl_Moshakhasat_SakhtemanRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Tbl_Moshakhasat_SakhtemanRowDeletedEvent) Is Nothing) Then
                RaiseEvent Tbl_Moshakhasat_SakhtemanRowDeleted(Me, New Tbl_Moshakhasat_SakhtemanRowChangeEvent(CType(e.Row,Tbl_Moshakhasat_SakhtemanRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Tbl_Moshakhasat_SakhtemanRowDeletingEvent) Is Nothing) Then
                RaiseEvent Tbl_Moshakhasat_SakhtemanRowDeleting(Me, New Tbl_Moshakhasat_SakhtemanRowChangeEvent(CType(e.Row,Tbl_Moshakhasat_SakhtemanRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveTbl_Moshakhasat_SakhtemanRow(ByVal row As Tbl_Moshakhasat_SakhtemanRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DB_NoSaziDataSet = New DB_NoSaziDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Tbl_Moshakhasat_SakhtemanDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Select_Tbl_Moshakhasat_SakhtemanDataTable
        Inherits Global.System.Data.TypedTableBase(Of Select_Tbl_Moshakhasat_SakhtemanRow)
        
        Private columnShomare_Shenasnameh As Global.System.Data.DataColumn
        
        Private columnTedad_Tabaghat As Global.System.Data.DataColumn
        
        Private columnMasahat_Zirbana As Global.System.Data.DataColumn
        
        Private columnMasahat_Bana As Global.System.Data.DataColumn
        
        Private columnMasahat_Hararat As Global.System.Data.DataColumn
        
        Private columnMasahat_Tahvieh As Global.System.Data.DataColumn
        
        Private columnMasahat_Khonak As Global.System.Data.DataColumn
        
        Private columnMasahat_Asansor As Global.System.Data.DataColumn
        
        Private columnSharh_No_Divar As Global.System.Data.DataColumn
        
        Private columnSharh_No_Saghf As Global.System.Data.DataColumn
        
        Private columnCode_no_Sakhteman As Global.System.Data.DataColumn
        
        Private columnNo_Nama As Global.System.Data.DataColumn
        
        Private columnNo_Nama_Code As Global.System.Data.DataColumn
        
        Private columnMasahat_zirzamin As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Select_Tbl_Moshakhasat_Sakhteman"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Shomare_ShenasnamehColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShomare_Shenasnameh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Tedad_TabaghatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTedad_Tabaghat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Masahat_ZirbanaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMasahat_Zirbana
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Masahat_BanaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMasahat_Bana
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Masahat_HararatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMasahat_Hararat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Masahat_TahviehColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMasahat_Tahvieh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Masahat_KhonakColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMasahat_Khonak
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Masahat_AsansorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMasahat_Asansor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Sharh_No_DivarColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSharh_No_Divar
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Sharh_No_SaghfColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSharh_No_Saghf
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Code_no_SakhtemanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCode_no_Sakhteman
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property No_NamaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNo_Nama
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property No_Nama_CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNo_Nama_Code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Masahat_zirzaminColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMasahat_zirzamin
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Select_Tbl_Moshakhasat_SakhtemanRow
            Get
                Return CType(Me.Rows(index),Select_Tbl_Moshakhasat_SakhtemanRow)
            End Get
        End Property
        
        Public Event Select_Tbl_Moshakhasat_SakhtemanRowChanging As Select_Tbl_Moshakhasat_SakhtemanRowChangeEventHandler
        
        Public Event Select_Tbl_Moshakhasat_SakhtemanRowChanged As Select_Tbl_Moshakhasat_SakhtemanRowChangeEventHandler
        
        Public Event Select_Tbl_Moshakhasat_SakhtemanRowDeleting As Select_Tbl_Moshakhasat_SakhtemanRowChangeEventHandler
        
        Public Event Select_Tbl_Moshakhasat_SakhtemanRowDeleted As Select_Tbl_Moshakhasat_SakhtemanRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddSelect_Tbl_Moshakhasat_SakhtemanRow(ByVal row As Select_Tbl_Moshakhasat_SakhtemanRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddSelect_Tbl_Moshakhasat_SakhtemanRow(ByVal Shomare_Shenasnameh As String, ByVal Tedad_Tabaghat As Single, ByVal Masahat_Zirbana As Single, ByVal Masahat_Bana As Single, ByVal Masahat_Hararat As Single, ByVal Masahat_Tahvieh As Single, ByVal Masahat_Khonak As Single, ByVal Masahat_Asansor As Single, ByVal Sharh_No_Divar As String, ByVal Sharh_No_Saghf As String, ByVal Code_no_Sakhteman As Byte, ByVal No_Nama As String, ByVal No_Nama_Code As Byte, ByVal Masahat_zirzamin As Single) As Select_Tbl_Moshakhasat_SakhtemanRow
            Dim rowSelect_Tbl_Moshakhasat_SakhtemanRow As Select_Tbl_Moshakhasat_SakhtemanRow = CType(Me.NewRow,Select_Tbl_Moshakhasat_SakhtemanRow)
            Dim columnValuesArray() As Object = New Object() {Shomare_Shenasnameh, Tedad_Tabaghat, Masahat_Zirbana, Masahat_Bana, Masahat_Hararat, Masahat_Tahvieh, Masahat_Khonak, Masahat_Asansor, Sharh_No_Divar, Sharh_No_Saghf, Code_no_Sakhteman, No_Nama, No_Nama_Code, Masahat_zirzamin}
            rowSelect_Tbl_Moshakhasat_SakhtemanRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSelect_Tbl_Moshakhasat_SakhtemanRow)
            Return rowSelect_Tbl_Moshakhasat_SakhtemanRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Select_Tbl_Moshakhasat_SakhtemanDataTable = CType(MyBase.Clone,Select_Tbl_Moshakhasat_SakhtemanDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Select_Tbl_Moshakhasat_SakhtemanDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnShomare_Shenasnameh = MyBase.Columns("Shomare_Shenasnameh")
            Me.columnTedad_Tabaghat = MyBase.Columns("Tedad_Tabaghat")
            Me.columnMasahat_Zirbana = MyBase.Columns("Masahat_Zirbana")
            Me.columnMasahat_Bana = MyBase.Columns("Masahat_Bana")
            Me.columnMasahat_Hararat = MyBase.Columns("Masahat_Hararat")
            Me.columnMasahat_Tahvieh = MyBase.Columns("Masahat_Tahvieh")
            Me.columnMasahat_Khonak = MyBase.Columns("Masahat_Khonak")
            Me.columnMasahat_Asansor = MyBase.Columns("Masahat_Asansor")
            Me.columnSharh_No_Divar = MyBase.Columns("Sharh_No_Divar")
            Me.columnSharh_No_Saghf = MyBase.Columns("Sharh_No_Saghf")
            Me.columnCode_no_Sakhteman = MyBase.Columns("Code_no_Sakhteman")
            Me.columnNo_Nama = MyBase.Columns("No_Nama")
            Me.columnNo_Nama_Code = MyBase.Columns("No_Nama_Code")
            Me.columnMasahat_zirzamin = MyBase.Columns("Masahat_zirzamin")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnShomare_Shenasnameh = New Global.System.Data.DataColumn("Shomare_Shenasnameh", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShomare_Shenasnameh)
            Me.columnTedad_Tabaghat = New Global.System.Data.DataColumn("Tedad_Tabaghat", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTedad_Tabaghat)
            Me.columnMasahat_Zirbana = New Global.System.Data.DataColumn("Masahat_Zirbana", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMasahat_Zirbana)
            Me.columnMasahat_Bana = New Global.System.Data.DataColumn("Masahat_Bana", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMasahat_Bana)
            Me.columnMasahat_Hararat = New Global.System.Data.DataColumn("Masahat_Hararat", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMasahat_Hararat)
            Me.columnMasahat_Tahvieh = New Global.System.Data.DataColumn("Masahat_Tahvieh", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMasahat_Tahvieh)
            Me.columnMasahat_Khonak = New Global.System.Data.DataColumn("Masahat_Khonak", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMasahat_Khonak)
            Me.columnMasahat_Asansor = New Global.System.Data.DataColumn("Masahat_Asansor", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMasahat_Asansor)
            Me.columnSharh_No_Divar = New Global.System.Data.DataColumn("Sharh_No_Divar", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSharh_No_Divar)
            Me.columnSharh_No_Saghf = New Global.System.Data.DataColumn("Sharh_No_Saghf", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSharh_No_Saghf)
            Me.columnCode_no_Sakhteman = New Global.System.Data.DataColumn("Code_no_Sakhteman", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCode_no_Sakhteman)
            Me.columnNo_Nama = New Global.System.Data.DataColumn("No_Nama", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNo_Nama)
            Me.columnNo_Nama_Code = New Global.System.Data.DataColumn("No_Nama_Code", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNo_Nama_Code)
            Me.columnMasahat_zirzamin = New Global.System.Data.DataColumn("Masahat_zirzamin", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMasahat_zirzamin)
            Me.columnShomare_Shenasnameh.MaxLength = 27
            Me.columnSharh_No_Divar.MaxLength = 20
            Me.columnSharh_No_Saghf.MaxLength = 20
            Me.columnNo_Nama.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewSelect_Tbl_Moshakhasat_SakhtemanRow() As Select_Tbl_Moshakhasat_SakhtemanRow
            Return CType(Me.NewRow,Select_Tbl_Moshakhasat_SakhtemanRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Select_Tbl_Moshakhasat_SakhtemanRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Select_Tbl_Moshakhasat_SakhtemanRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Select_Tbl_Moshakhasat_SakhtemanRowChangedEvent) Is Nothing) Then
                RaiseEvent Select_Tbl_Moshakhasat_SakhtemanRowChanged(Me, New Select_Tbl_Moshakhasat_SakhtemanRowChangeEvent(CType(e.Row,Select_Tbl_Moshakhasat_SakhtemanRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Select_Tbl_Moshakhasat_SakhtemanRowChangingEvent) Is Nothing) Then
                RaiseEvent Select_Tbl_Moshakhasat_SakhtemanRowChanging(Me, New Select_Tbl_Moshakhasat_SakhtemanRowChangeEvent(CType(e.Row,Select_Tbl_Moshakhasat_SakhtemanRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Select_Tbl_Moshakhasat_SakhtemanRowDeletedEvent) Is Nothing) Then
                RaiseEvent Select_Tbl_Moshakhasat_SakhtemanRowDeleted(Me, New Select_Tbl_Moshakhasat_SakhtemanRowChangeEvent(CType(e.Row,Select_Tbl_Moshakhasat_SakhtemanRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Select_Tbl_Moshakhasat_SakhtemanRowDeletingEvent) Is Nothing) Then
                RaiseEvent Select_Tbl_Moshakhasat_SakhtemanRowDeleting(Me, New Select_Tbl_Moshakhasat_SakhtemanRowChangeEvent(CType(e.Row,Select_Tbl_Moshakhasat_SakhtemanRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveSelect_Tbl_Moshakhasat_SakhtemanRow(ByVal row As Select_Tbl_Moshakhasat_SakhtemanRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DB_NoSaziDataSet = New DB_NoSaziDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Select_Tbl_Moshakhasat_SakhtemanDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Select_Tbl_EshterakDataTable
        Inherits Global.System.Data.TypedTableBase(Of Select_Tbl_EshterakRow)
        
        Private columnShomare_Shenasnameh As Global.System.Data.DataColumn
        
        Private columnHajm_Estakhr As Global.System.Data.DataColumn
        
        Private columnMasahat_Estakhr As Global.System.Data.DataColumn
        
        Private columnMasahat_Golkhaneh As Global.System.Data.DataColumn
        
        Private columnTedad_Chah As Global.System.Data.DataColumn
        
        Private columnShomareh_Ab As Global.System.Data.DataColumn
        
        Private columnShomareh_Bargh As Global.System.Data.DataColumn
        
        Private columnShomareh_Gaz As Global.System.Data.DataColumn
        
        Private columnShomareh_Tel As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Select_Tbl_Eshterak"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Shomare_ShenasnamehColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShomare_Shenasnameh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Hajm_EstakhrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHajm_Estakhr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Masahat_EstakhrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMasahat_Estakhr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Masahat_GolkhanehColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMasahat_Golkhaneh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Tedad_ChahColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTedad_Chah
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Shomareh_AbColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShomareh_Ab
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Shomareh_BarghColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShomareh_Bargh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Shomareh_GazColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShomareh_Gaz
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Shomareh_TelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShomareh_Tel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Select_Tbl_EshterakRow
            Get
                Return CType(Me.Rows(index),Select_Tbl_EshterakRow)
            End Get
        End Property
        
        Public Event Select_Tbl_EshterakRowChanging As Select_Tbl_EshterakRowChangeEventHandler
        
        Public Event Select_Tbl_EshterakRowChanged As Select_Tbl_EshterakRowChangeEventHandler
        
        Public Event Select_Tbl_EshterakRowDeleting As Select_Tbl_EshterakRowChangeEventHandler
        
        Public Event Select_Tbl_EshterakRowDeleted As Select_Tbl_EshterakRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddSelect_Tbl_EshterakRow(ByVal row As Select_Tbl_EshterakRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddSelect_Tbl_EshterakRow(ByVal Shomare_Shenasnameh As String, ByVal Hajm_Estakhr As Single, ByVal Masahat_Estakhr As Single, ByVal Masahat_Golkhaneh As Single, ByVal Tedad_Chah As Byte, ByVal Shomareh_Ab As String, ByVal Shomareh_Bargh As String, ByVal Shomareh_Gaz As String, ByVal Shomareh_Tel As String) As Select_Tbl_EshterakRow
            Dim rowSelect_Tbl_EshterakRow As Select_Tbl_EshterakRow = CType(Me.NewRow,Select_Tbl_EshterakRow)
            Dim columnValuesArray() As Object = New Object() {Shomare_Shenasnameh, Hajm_Estakhr, Masahat_Estakhr, Masahat_Golkhaneh, Tedad_Chah, Shomareh_Ab, Shomareh_Bargh, Shomareh_Gaz, Shomareh_Tel}
            rowSelect_Tbl_EshterakRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSelect_Tbl_EshterakRow)
            Return rowSelect_Tbl_EshterakRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Select_Tbl_EshterakDataTable = CType(MyBase.Clone,Select_Tbl_EshterakDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Select_Tbl_EshterakDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnShomare_Shenasnameh = MyBase.Columns("Shomare_Shenasnameh")
            Me.columnHajm_Estakhr = MyBase.Columns("Hajm_Estakhr")
            Me.columnMasahat_Estakhr = MyBase.Columns("Masahat_Estakhr")
            Me.columnMasahat_Golkhaneh = MyBase.Columns("Masahat_Golkhaneh")
            Me.columnTedad_Chah = MyBase.Columns("Tedad_Chah")
            Me.columnShomareh_Ab = MyBase.Columns("Shomareh_Ab")
            Me.columnShomareh_Bargh = MyBase.Columns("Shomareh_Bargh")
            Me.columnShomareh_Gaz = MyBase.Columns("Shomareh_Gaz")
            Me.columnShomareh_Tel = MyBase.Columns("Shomareh_Tel")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnShomare_Shenasnameh = New Global.System.Data.DataColumn("Shomare_Shenasnameh", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShomare_Shenasnameh)
            Me.columnHajm_Estakhr = New Global.System.Data.DataColumn("Hajm_Estakhr", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHajm_Estakhr)
            Me.columnMasahat_Estakhr = New Global.System.Data.DataColumn("Masahat_Estakhr", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMasahat_Estakhr)
            Me.columnMasahat_Golkhaneh = New Global.System.Data.DataColumn("Masahat_Golkhaneh", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMasahat_Golkhaneh)
            Me.columnTedad_Chah = New Global.System.Data.DataColumn("Tedad_Chah", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTedad_Chah)
            Me.columnShomareh_Ab = New Global.System.Data.DataColumn("Shomareh_Ab", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShomareh_Ab)
            Me.columnShomareh_Bargh = New Global.System.Data.DataColumn("Shomareh_Bargh", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShomareh_Bargh)
            Me.columnShomareh_Gaz = New Global.System.Data.DataColumn("Shomareh_Gaz", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShomareh_Gaz)
            Me.columnShomareh_Tel = New Global.System.Data.DataColumn("Shomareh_Tel", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShomareh_Tel)
            Me.columnShomare_Shenasnameh.MaxLength = 27
            Me.columnShomareh_Ab.MaxLength = 20
            Me.columnShomareh_Bargh.MaxLength = 20
            Me.columnShomareh_Gaz.MaxLength = 20
            Me.columnShomareh_Tel.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewSelect_Tbl_EshterakRow() As Select_Tbl_EshterakRow
            Return CType(Me.NewRow,Select_Tbl_EshterakRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Select_Tbl_EshterakRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Select_Tbl_EshterakRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Select_Tbl_EshterakRowChangedEvent) Is Nothing) Then
                RaiseEvent Select_Tbl_EshterakRowChanged(Me, New Select_Tbl_EshterakRowChangeEvent(CType(e.Row,Select_Tbl_EshterakRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Select_Tbl_EshterakRowChangingEvent) Is Nothing) Then
                RaiseEvent Select_Tbl_EshterakRowChanging(Me, New Select_Tbl_EshterakRowChangeEvent(CType(e.Row,Select_Tbl_EshterakRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Select_Tbl_EshterakRowDeletedEvent) Is Nothing) Then
                RaiseEvent Select_Tbl_EshterakRowDeleted(Me, New Select_Tbl_EshterakRowChangeEvent(CType(e.Row,Select_Tbl_EshterakRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Select_Tbl_EshterakRowDeletingEvent) Is Nothing) Then
                RaiseEvent Select_Tbl_EshterakRowDeleting(Me, New Select_Tbl_EshterakRowChangeEvent(CType(e.Row,Select_Tbl_EshterakRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveSelect_Tbl_EshterakRow(ByVal row As Select_Tbl_EshterakRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DB_NoSaziDataSet = New DB_NoSaziDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Select_Tbl_EshterakDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Select_Tbl_Afrad_MomayeziDataTable
        Inherits Global.System.Data.TypedTableBase(Of Select_Tbl_Afrad_MomayeziRow)
        
        Private columnShomare_Shenasnameh As Global.System.Data.DataColumn
        
        Private columnMomayez_Tarikh As Global.System.Data.DataColumn
        
        Private columnMomayez_Name As Global.System.Data.DataColumn
        
        Private columnBazbin_Tarikh As Global.System.Data.DataColumn
        
        Private columnBazbin_Name As Global.System.Data.DataColumn
        
        Private columnSNahieh_Tarikh As Global.System.Data.DataColumn
        
        Private columnSNahieh_Name As Global.System.Data.DataColumn
        
        Private columnSMantagheh_Tarikh As Global.System.Data.DataColumn
        
        Private columnSMantagheh_Name As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Select_Tbl_Afrad_Momayezi"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Shomare_ShenasnamehColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShomare_Shenasnameh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Momayez_TarikhColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMomayez_Tarikh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Momayez_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMomayez_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Bazbin_TarikhColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBazbin_Tarikh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Bazbin_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBazbin_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SNahieh_TarikhColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSNahieh_Tarikh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SNahieh_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSNahieh_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SMantagheh_TarikhColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSMantagheh_Tarikh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SMantagheh_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSMantagheh_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Select_Tbl_Afrad_MomayeziRow
            Get
                Return CType(Me.Rows(index),Select_Tbl_Afrad_MomayeziRow)
            End Get
        End Property
        
        Public Event Select_Tbl_Afrad_MomayeziRowChanging As Select_Tbl_Afrad_MomayeziRowChangeEventHandler
        
        Public Event Select_Tbl_Afrad_MomayeziRowChanged As Select_Tbl_Afrad_MomayeziRowChangeEventHandler
        
        Public Event Select_Tbl_Afrad_MomayeziRowDeleting As Select_Tbl_Afrad_MomayeziRowChangeEventHandler
        
        Public Event Select_Tbl_Afrad_MomayeziRowDeleted As Select_Tbl_Afrad_MomayeziRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddSelect_Tbl_Afrad_MomayeziRow(ByVal row As Select_Tbl_Afrad_MomayeziRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddSelect_Tbl_Afrad_MomayeziRow(ByVal Shomare_Shenasnameh As String, ByVal Momayez_Tarikh As String, ByVal Momayez_Name As String, ByVal Bazbin_Tarikh As String, ByVal Bazbin_Name As String, ByVal SNahieh_Tarikh As String, ByVal SNahieh_Name As String, ByVal SMantagheh_Tarikh As String, ByVal SMantagheh_Name As String) As Select_Tbl_Afrad_MomayeziRow
            Dim rowSelect_Tbl_Afrad_MomayeziRow As Select_Tbl_Afrad_MomayeziRow = CType(Me.NewRow,Select_Tbl_Afrad_MomayeziRow)
            Dim columnValuesArray() As Object = New Object() {Shomare_Shenasnameh, Momayez_Tarikh, Momayez_Name, Bazbin_Tarikh, Bazbin_Name, SNahieh_Tarikh, SNahieh_Name, SMantagheh_Tarikh, SMantagheh_Name}
            rowSelect_Tbl_Afrad_MomayeziRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSelect_Tbl_Afrad_MomayeziRow)
            Return rowSelect_Tbl_Afrad_MomayeziRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Select_Tbl_Afrad_MomayeziDataTable = CType(MyBase.Clone,Select_Tbl_Afrad_MomayeziDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Select_Tbl_Afrad_MomayeziDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnShomare_Shenasnameh = MyBase.Columns("Shomare_Shenasnameh")
            Me.columnMomayez_Tarikh = MyBase.Columns("Momayez_Tarikh")
            Me.columnMomayez_Name = MyBase.Columns("Momayez_Name")
            Me.columnBazbin_Tarikh = MyBase.Columns("Bazbin_Tarikh")
            Me.columnBazbin_Name = MyBase.Columns("Bazbin_Name")
            Me.columnSNahieh_Tarikh = MyBase.Columns("SNahieh_Tarikh")
            Me.columnSNahieh_Name = MyBase.Columns("SNahieh_Name")
            Me.columnSMantagheh_Tarikh = MyBase.Columns("SMantagheh_Tarikh")
            Me.columnSMantagheh_Name = MyBase.Columns("SMantagheh_Name")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnShomare_Shenasnameh = New Global.System.Data.DataColumn("Shomare_Shenasnameh", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShomare_Shenasnameh)
            Me.columnMomayez_Tarikh = New Global.System.Data.DataColumn("Momayez_Tarikh", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMomayez_Tarikh)
            Me.columnMomayez_Name = New Global.System.Data.DataColumn("Momayez_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMomayez_Name)
            Me.columnBazbin_Tarikh = New Global.System.Data.DataColumn("Bazbin_Tarikh", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBazbin_Tarikh)
            Me.columnBazbin_Name = New Global.System.Data.DataColumn("Bazbin_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBazbin_Name)
            Me.columnSNahieh_Tarikh = New Global.System.Data.DataColumn("SNahieh_Tarikh", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSNahieh_Tarikh)
            Me.columnSNahieh_Name = New Global.System.Data.DataColumn("SNahieh_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSNahieh_Name)
            Me.columnSMantagheh_Tarikh = New Global.System.Data.DataColumn("SMantagheh_Tarikh", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSMantagheh_Tarikh)
            Me.columnSMantagheh_Name = New Global.System.Data.DataColumn("SMantagheh_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSMantagheh_Name)
            Me.columnShomare_Shenasnameh.MaxLength = 27
            Me.columnMomayez_Tarikh.MaxLength = 8
            Me.columnMomayez_Name.MaxLength = 60
            Me.columnBazbin_Tarikh.MaxLength = 8
            Me.columnBazbin_Name.MaxLength = 60
            Me.columnSNahieh_Tarikh.MaxLength = 8
            Me.columnSNahieh_Name.MaxLength = 60
            Me.columnSMantagheh_Tarikh.MaxLength = 8
            Me.columnSMantagheh_Name.MaxLength = 60
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewSelect_Tbl_Afrad_MomayeziRow() As Select_Tbl_Afrad_MomayeziRow
            Return CType(Me.NewRow,Select_Tbl_Afrad_MomayeziRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Select_Tbl_Afrad_MomayeziRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Select_Tbl_Afrad_MomayeziRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Select_Tbl_Afrad_MomayeziRowChangedEvent) Is Nothing) Then
                RaiseEvent Select_Tbl_Afrad_MomayeziRowChanged(Me, New Select_Tbl_Afrad_MomayeziRowChangeEvent(CType(e.Row,Select_Tbl_Afrad_MomayeziRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Select_Tbl_Afrad_MomayeziRowChangingEvent) Is Nothing) Then
                RaiseEvent Select_Tbl_Afrad_MomayeziRowChanging(Me, New Select_Tbl_Afrad_MomayeziRowChangeEvent(CType(e.Row,Select_Tbl_Afrad_MomayeziRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Select_Tbl_Afrad_MomayeziRowDeletedEvent) Is Nothing) Then
                RaiseEvent Select_Tbl_Afrad_MomayeziRowDeleted(Me, New Select_Tbl_Afrad_MomayeziRowChangeEvent(CType(e.Row,Select_Tbl_Afrad_MomayeziRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Select_Tbl_Afrad_MomayeziRowDeletingEvent) Is Nothing) Then
                RaiseEvent Select_Tbl_Afrad_MomayeziRowDeleting(Me, New Select_Tbl_Afrad_MomayeziRowChangeEvent(CType(e.Row,Select_Tbl_Afrad_MomayeziRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveSelect_Tbl_Afrad_MomayeziRow(ByVal row As Select_Tbl_Afrad_MomayeziRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DB_NoSaziDataSet = New DB_NoSaziDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Select_Tbl_Afrad_MomayeziDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Select_Tbl_MomayeziDataTable
        Inherits Global.System.Data.TypedTableBase(Of Select_Tbl_MomayeziRow)
        
        Private columnShomare_Shenasnameh As Global.System.Data.DataColumn
        
        Private columnTarikh As Global.System.Data.DataColumn
        
        Private columnVazeiat As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Select_Tbl_Momayezi"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Shomare_ShenasnamehColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShomare_Shenasnameh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TarikhColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTarikh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VazeiatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVazeiat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Select_Tbl_MomayeziRow
            Get
                Return CType(Me.Rows(index),Select_Tbl_MomayeziRow)
            End Get
        End Property
        
        Public Event Select_Tbl_MomayeziRowChanging As Select_Tbl_MomayeziRowChangeEventHandler
        
        Public Event Select_Tbl_MomayeziRowChanged As Select_Tbl_MomayeziRowChangeEventHandler
        
        Public Event Select_Tbl_MomayeziRowDeleting As Select_Tbl_MomayeziRowChangeEventHandler
        
        Public Event Select_Tbl_MomayeziRowDeleted As Select_Tbl_MomayeziRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddSelect_Tbl_MomayeziRow(ByVal row As Select_Tbl_MomayeziRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddSelect_Tbl_MomayeziRow(ByVal Shomare_Shenasnameh As String, ByVal Tarikh As String, ByVal Vazeiat As String) As Select_Tbl_MomayeziRow
            Dim rowSelect_Tbl_MomayeziRow As Select_Tbl_MomayeziRow = CType(Me.NewRow,Select_Tbl_MomayeziRow)
            Dim columnValuesArray() As Object = New Object() {Shomare_Shenasnameh, Tarikh, Vazeiat}
            rowSelect_Tbl_MomayeziRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSelect_Tbl_MomayeziRow)
            Return rowSelect_Tbl_MomayeziRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Select_Tbl_MomayeziDataTable = CType(MyBase.Clone,Select_Tbl_MomayeziDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Select_Tbl_MomayeziDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnShomare_Shenasnameh = MyBase.Columns("Shomare_Shenasnameh")
            Me.columnTarikh = MyBase.Columns("Tarikh")
            Me.columnVazeiat = MyBase.Columns("Vazeiat")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnShomare_Shenasnameh = New Global.System.Data.DataColumn("Shomare_Shenasnameh", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShomare_Shenasnameh)
            Me.columnTarikh = New Global.System.Data.DataColumn("Tarikh", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTarikh)
            Me.columnVazeiat = New Global.System.Data.DataColumn("Vazeiat", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVazeiat)
            Me.columnShomare_Shenasnameh.MaxLength = 27
            Me.columnTarikh.MaxLength = 8
            Me.columnVazeiat.ReadOnly = true
            Me.columnVazeiat.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewSelect_Tbl_MomayeziRow() As Select_Tbl_MomayeziRow
            Return CType(Me.NewRow,Select_Tbl_MomayeziRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Select_Tbl_MomayeziRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Select_Tbl_MomayeziRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Select_Tbl_MomayeziRowChangedEvent) Is Nothing) Then
                RaiseEvent Select_Tbl_MomayeziRowChanged(Me, New Select_Tbl_MomayeziRowChangeEvent(CType(e.Row,Select_Tbl_MomayeziRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Select_Tbl_MomayeziRowChangingEvent) Is Nothing) Then
                RaiseEvent Select_Tbl_MomayeziRowChanging(Me, New Select_Tbl_MomayeziRowChangeEvent(CType(e.Row,Select_Tbl_MomayeziRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Select_Tbl_MomayeziRowDeletedEvent) Is Nothing) Then
                RaiseEvent Select_Tbl_MomayeziRowDeleted(Me, New Select_Tbl_MomayeziRowChangeEvent(CType(e.Row,Select_Tbl_MomayeziRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Select_Tbl_MomayeziRowDeletingEvent) Is Nothing) Then
                RaiseEvent Select_Tbl_MomayeziRowDeleting(Me, New Select_Tbl_MomayeziRowChangeEvent(CType(e.Row,Select_Tbl_MomayeziRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveSelect_Tbl_MomayeziRow(ByVal row As Select_Tbl_MomayeziRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DB_NoSaziDataSet = New DB_NoSaziDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Select_Tbl_MomayeziDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Select_DFN_BLOCKDataTable
        Inherits Global.System.Data.TypedTableBase(Of Select_DFN_BLOCKRow)
        
        Private columnCode As Global.System.Data.DataColumn
        
        Private columnCode_SHsh As Global.System.Data.DataColumn
        
        Private columnSharh As Global.System.Data.DataColumn
        
        Private columnShomal As Global.System.Data.DataColumn
        
        Private columnShargh As Global.System.Data.DataColumn
        
        Private columnJonoub As Global.System.Data.DataColumn
        
        Private columnGharb As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Select_DFN_BLOCK"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Code_SHshColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCode_SHsh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SharhColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSharh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ShomalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShomal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SharghColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShargh
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property JonoubColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJonoub
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property GharbColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGharb
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Select_DFN_BLOCKRow
            Get
                Return CType(Me.Rows(index),Select_DFN_BLOCKRow)
            End Get
        End Property
        
        Public Event Select_DFN_BLOCKRowChanging As Select_DFN_BLOCKRowChangeEventHandler
        
        Public Event Select_DFN_BLOCKRowChanged As Select_DFN_BLOCKRowChangeEventHandler
        
        Public Event Select_DFN_BLOCKRowDeleting As Select_DFN_BLOCKRowChangeEventHandler
        
        Public Event Select_DFN_BLOCKRowDeleted As Select_DFN_BLOCKRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddSelect_DFN_BLOCKRow(ByVal row As Select_DFN_BLOCKRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddSelect_DFN_BLOCKRow(ByVal Code As Byte, ByVal Code_SHsh As String, ByVal Sharh As String, ByVal Shomal As String, ByVal Shargh As String, ByVal Jonoub As String, ByVal Gharb As String) As Select_DFN_BLOCKRow
            Dim rowSelect_DFN_BLOCKRow As Select_DFN_BLOCKRow = CType(Me.NewRow,Select_DFN_BLOCKRow)
            Dim columnValuesArray() As Object = New Object() {Code, Code_SHsh, Sharh, Shomal, Shargh, Jonoub, Gharb}
            rowSelect_DFN_BLOCKRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSelect_DFN_BLOCKRow)
            Return rowSelect_DFN_BLOCKRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByCode(ByVal Code As Byte) As Select_DFN_BLOCKRow
            Return CType(Me.Rows.Find(New Object() {Code}),Select_DFN_BLOCKRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Select_DFN_BLOCKDataTable = CType(MyBase.Clone,Select_DFN_BLOCKDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Select_DFN_BLOCKDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnCode = MyBase.Columns("Code")
            Me.columnCode_SHsh = MyBase.Columns("Code_SHsh")
            Me.columnSharh = MyBase.Columns("Sharh")
            Me.columnShomal = MyBase.Columns("Shomal")
            Me.columnShargh = MyBase.Columns("Shargh")
            Me.columnJonoub = MyBase.Columns("Jonoub")
            Me.columnGharb = MyBase.Columns("Gharb")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnCode = New Global.System.Data.DataColumn("Code", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCode)
            Me.columnCode_SHsh = New Global.System.Data.DataColumn("Code_SHsh", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCode_SHsh)
            Me.columnSharh = New Global.System.Data.DataColumn("Sharh", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSharh)
            Me.columnShomal = New Global.System.Data.DataColumn("Shomal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShomal)
            Me.columnShargh = New Global.System.Data.DataColumn("Shargh", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShargh)
            Me.columnJonoub = New Global.System.Data.DataColumn("Jonoub", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJonoub)
            Me.columnGharb = New Global.System.Data.DataColumn("Gharb", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGharb)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCode}, true))
            Me.columnCode.AllowDBNull = false
            Me.columnCode.Unique = true
            Me.columnCode_SHsh.MaxLength = 5
            Me.columnSharh.MaxLength = 150
            Me.columnShomal.MaxLength = 1073741823
            Me.columnShargh.MaxLength = 1073741823
            Me.columnJonoub.MaxLength = 1073741823
            Me.columnGharb.MaxLength = 1073741823
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewSelect_DFN_BLOCKRow() As Select_DFN_BLOCKRow
            Return CType(Me.NewRow,Select_DFN_BLOCKRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Select_DFN_BLOCKRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Select_DFN_BLOCKRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Select_DFN_BLOCKRowChangedEvent) Is Nothing) Then
                RaiseEvent Select_DFN_BLOCKRowChanged(Me, New Select_DFN_BLOCKRowChangeEvent(CType(e.Row,Select_DFN_BLOCKRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Select_DFN_BLOCKRowChangingEvent) Is Nothing) Then
                RaiseEvent Select_DFN_BLOCKRowChanging(Me, New Select_DFN_BLOCKRowChangeEvent(CType(e.Row,Select_DFN_BLOCKRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Select_DFN_BLOCKRowDeletedEvent) Is Nothing) Then
                RaiseEvent Select_DFN_BLOCKRowDeleted(Me, New Select_DFN_BLOCKRowChangeEvent(CType(e.Row,Select_DFN_BLOCKRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Select_DFN_BLOCKRowDeletingEvent) Is Nothing) Then
                RaiseEvent Select_DFN_BLOCKRowDeleting(Me, New Select_DFN_BLOCKRowChangeEvent(CType(e.Row,Select_DFN_BLOCKRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveSelect_DFN_BLOCKRow(ByVal row As Select_DFN_BLOCKRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DB_NoSaziDataSet = New DB_NoSaziDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Select_DFN_BLOCKDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class DFNsRow
        Inherits Global.System.Data.DataRow
        
        Private tableDFNs As DFNsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableDFNs = CType(Me.Table,DFNsDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property code() As String
            Get
                Return CType(Me(Me.tableDFNs.codeColumn),String)
            End Get
            Set
                Me(Me.tableDFNs.codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property name() As String
            Get
                Return CType(Me(Me.tableDFNs.nameColumn),String)
            End Get
            Set
                Me(Me.tableDFNs.nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sharh() As String
            Get
                Try 
                    Return CType(Me(Me.tableDFNs.sharhColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sharh' in table 'DFNs' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDFNs.sharhColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IssharhNull() As Boolean
            Return Me.IsNull(Me.tableDFNs.sharhColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetsharhNull()
            Me(Me.tableDFNs.sharhColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Tbl_Moshakhasat_ZaminRow
        Inherits Global.System.Data.DataRow
        
        Private tableTbl_Moshakhasat_Zamin As Tbl_Moshakhasat_ZaminDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTbl_Moshakhasat_Zamin = CType(Me.Table,Tbl_Moshakhasat_ZaminDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Radif() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Moshakhasat_Zamin.RadifColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Radif' in table 'Tbl_Moshakhasat_Zamin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Moshakhasat_Zamin.RadifColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tool_Zel() As Single
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Moshakhasat_Zamin.Tool_ZelColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tool_Zel' in table 'Tbl_Moshakhasat_Zamin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Moshakhasat_Zamin.Tool_ZelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tool_Bar() As Single
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Moshakhasat_Zamin.Tool_BarColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tool_Bar' in table 'Tbl_Moshakhasat_Zamin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Moshakhasat_Zamin.Tool_BarColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MaAbar_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Moshakhasat_Zamin.MaAbar_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MaAbar_Name' in table 'Tbl_Moshakhasat_Zamin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Moshakhasat_Zamin.MaAbar_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Shomare_Shenasnameh() As String
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Moshakhasat_Zamin.Shomare_ShenasnamehColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Shomare_Shenasnameh' in table 'Tbl_Moshakhasat_Zamin' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Moshakhasat_Zamin.Shomare_ShenasnamehColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property jahat_value() As String
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Moshakhasat_Zamin.jahat_valueColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'jahat_value' in table 'Tbl_Moshakhasat_Zamin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Moshakhasat_Zamin.jahat_valueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property jahat() As String
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Moshakhasat_Zamin.jahatColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'jahat' in table 'Tbl_Moshakhasat_Zamin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Moshakhasat_Zamin.jahatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MaAbar_Arz() As Single
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Moshakhasat_Zamin.MaAbar_ArzColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MaAbar_Arz' in table 'Tbl_Moshakhasat_Zamin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Moshakhasat_Zamin.MaAbar_ArzColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MaAbar_radif() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Moshakhasat_Zamin.MaAbar_radifColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MaAbar_radif' in table 'Tbl_Moshakhasat_Zamin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Moshakhasat_Zamin.MaAbar_radifColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property zavieh() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Moshakhasat_Zamin.zaviehColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'zavieh' in table 'Tbl_Moshakhasat_Zamin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Moshakhasat_Zamin.zaviehColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Masahat_jebheh1() As Single
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Moshakhasat_Zamin.Masahat_jebheh1Column),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Masahat_jebheh1' in table 'Tbl_Moshakhasat_Zamin' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Moshakhasat_Zamin.Masahat_jebheh1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Masahat_Jebheh2() As Single
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Moshakhasat_Zamin.Masahat_Jebheh2Column),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Masahat_Jebheh2' in table 'Tbl_Moshakhasat_Zamin' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Moshakhasat_Zamin.Masahat_Jebheh2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRadifNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Moshakhasat_Zamin.RadifColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRadifNull()
            Me(Me.tableTbl_Moshakhasat_Zamin.RadifColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTool_ZelNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Moshakhasat_Zamin.Tool_ZelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTool_ZelNull()
            Me(Me.tableTbl_Moshakhasat_Zamin.Tool_ZelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTool_BarNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Moshakhasat_Zamin.Tool_BarColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTool_BarNull()
            Me(Me.tableTbl_Moshakhasat_Zamin.Tool_BarColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMaAbar_NameNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Moshakhasat_Zamin.MaAbar_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMaAbar_NameNull()
            Me(Me.tableTbl_Moshakhasat_Zamin.MaAbar_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsShomare_ShenasnamehNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Moshakhasat_Zamin.Shomare_ShenasnamehColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetShomare_ShenasnamehNull()
            Me(Me.tableTbl_Moshakhasat_Zamin.Shomare_ShenasnamehColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isjahat_valueNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Moshakhasat_Zamin.jahat_valueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setjahat_valueNull()
            Me(Me.tableTbl_Moshakhasat_Zamin.jahat_valueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsjahatNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Moshakhasat_Zamin.jahatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetjahatNull()
            Me(Me.tableTbl_Moshakhasat_Zamin.jahatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMaAbar_ArzNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Moshakhasat_Zamin.MaAbar_ArzColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMaAbar_ArzNull()
            Me(Me.tableTbl_Moshakhasat_Zamin.MaAbar_ArzColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMaAbar_radifNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Moshakhasat_Zamin.MaAbar_radifColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMaAbar_radifNull()
            Me(Me.tableTbl_Moshakhasat_Zamin.MaAbar_radifColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IszaviehNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Moshakhasat_Zamin.zaviehColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetzaviehNull()
            Me(Me.tableTbl_Moshakhasat_Zamin.zaviehColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMasahat_jebheh1Null() As Boolean
            Return Me.IsNull(Me.tableTbl_Moshakhasat_Zamin.Masahat_jebheh1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMasahat_jebheh1Null()
            Me(Me.tableTbl_Moshakhasat_Zamin.Masahat_jebheh1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMasahat_Jebheh2Null() As Boolean
            Return Me.IsNull(Me.tableTbl_Moshakhasat_Zamin.Masahat_Jebheh2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMasahat_Jebheh2Null()
            Me(Me.tableTbl_Moshakhasat_Zamin.Masahat_Jebheh2Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class TblDFN_GheymatRow
        Inherits Global.System.Data.DataRow
        
        Private tableTblDFN_Gheymat As TblDFN_GheymatDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTblDFN_Gheymat = CType(Me.Table,TblDFN_GheymatDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sharh() As String
            Get
                Try 
                    Return CType(Me(Me.tableTblDFN_Gheymat.SharhColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sharh' in table 'TblDFN_Gheymat' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTblDFN_Gheymat.SharhColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Code() As String
            Get
                Return CType(Me(Me.tableTblDFN_Gheymat.CodeColumn),String)
            End Get
            Set
                Me(Me.tableTblDFN_Gheymat.CodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSharhNull() As Boolean
            Return Me.IsNull(Me.tableTblDFN_Gheymat.SharhColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSharhNull()
            Me(Me.tableTblDFN_Gheymat.SharhColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class TblDFN_BlockRow
        Inherits Global.System.Data.DataRow
        
        Private tableTblDFN_Block As TblDFN_BlockDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTblDFN_Block = CType(Me.Table,TblDFN_BlockDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Code() As Byte
            Get
                Return CType(Me(Me.tableTblDFN_Block.CodeColumn),Byte)
            End Get
            Set
                Me(Me.tableTblDFN_Block.CodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Code_SHsh() As String
            Get
                Try 
                    Return CType(Me(Me.tableTblDFN_Block.Code_SHshColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Code_SHsh' in table 'TblDFN_Block' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTblDFN_Block.Code_SHshColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sharh() As String
            Get
                Try 
                    Return CType(Me(Me.tableTblDFN_Block.SharhColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sharh' in table 'TblDFN_Block' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTblDFN_Block.SharhColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Shomal() As String
            Get
                Try 
                    Return CType(Me(Me.tableTblDFN_Block.ShomalColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Shomal' in table 'TblDFN_Block' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTblDFN_Block.ShomalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Shargh() As String
            Get
                Try 
                    Return CType(Me(Me.tableTblDFN_Block.SharghColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Shargh' in table 'TblDFN_Block' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTblDFN_Block.SharghColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Jonoub() As String
            Get
                Try 
                    Return CType(Me(Me.tableTblDFN_Block.JonoubColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Jonoub' in table 'TblDFN_Block' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTblDFN_Block.JonoubColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Gharb() As String
            Get
                Try 
                    Return CType(Me(Me.tableTblDFN_Block.GharbColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Gharb' in table 'TblDFN_Block' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTblDFN_Block.GharbColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCode_SHshNull() As Boolean
            Return Me.IsNull(Me.tableTblDFN_Block.Code_SHshColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCode_SHshNull()
            Me(Me.tableTblDFN_Block.Code_SHshColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSharhNull() As Boolean
            Return Me.IsNull(Me.tableTblDFN_Block.SharhColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSharhNull()
            Me(Me.tableTblDFN_Block.SharhColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsShomalNull() As Boolean
            Return Me.IsNull(Me.tableTblDFN_Block.ShomalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetShomalNull()
            Me(Me.tableTblDFN_Block.ShomalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSharghNull() As Boolean
            Return Me.IsNull(Me.tableTblDFN_Block.SharghColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSharghNull()
            Me(Me.tableTblDFN_Block.SharghColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsJonoubNull() As Boolean
            Return Me.IsNull(Me.tableTblDFN_Block.JonoubColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetJonoubNull()
            Me(Me.tableTblDFN_Block.JonoubColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsGharbNull() As Boolean
            Return Me.IsNull(Me.tableTblDFN_Block.GharbColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetGharbNull()
            Me(Me.tableTblDFN_Block.GharbColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class TblDFN_SALRow
        Inherits Global.System.Data.DataRow
        
        Private tableTblDFN_SAL As TblDFN_SALDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTblDFN_SAL = CType(Me.Table,TblDFN_SALDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Code_Block() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableTblDFN_SAL.Code_BlockColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Code_Block' in table 'TblDFN_SAL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTblDFN_SAL.Code_BlockColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Gheymat() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTblDFN_SAL.GheymatColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Gheymat' in table 'TblDFN_SAL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTblDFN_SAL.GheymatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sal() As String
            Get
                Try 
                    Return CType(Me(Me.tableTblDFN_SAL.salColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sal' in table 'TblDFN_SAL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTblDFN_SAL.salColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property darsad() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableTblDFN_SAL.darsadColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'darsad' in table 'TblDFN_SAL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTblDFN_SAL.darsadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCode_BlockNull() As Boolean
            Return Me.IsNull(Me.tableTblDFN_SAL.Code_BlockColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCode_BlockNull()
            Me(Me.tableTblDFN_SAL.Code_BlockColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsGheymatNull() As Boolean
            Return Me.IsNull(Me.tableTblDFN_SAL.GheymatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetGheymatNull()
            Me(Me.tableTblDFN_SAL.GheymatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IssalNull() As Boolean
            Return Me.IsNull(Me.tableTblDFN_SAL.salColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetsalNull()
            Me(Me.tableTblDFN_SAL.salColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdarsadNull() As Boolean
            Return Me.IsNull(Me.tableTblDFN_SAL.darsadColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdarsadNull()
            Me(Me.tableTblDFN_SAL.darsadColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Select_DFNsRow
        Inherits Global.System.Data.DataRow
        
        Private tableSelect_DFNs As Select_DFNsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSelect_DFNs = CType(Me.Table,Select_DFNsDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property code() As String
            Get
                Return CType(Me(Me.tableSelect_DFNs.codeColumn),String)
            End Get
            Set
                Me(Me.tableSelect_DFNs.codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property name() As String
            Get
                Return CType(Me(Me.tableSelect_DFNs.nameColumn),String)
            End Get
            Set
                Me(Me.tableSelect_DFNs.nameColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Select_Sal_Gheymat_AllRow
        Inherits Global.System.Data.DataRow
        
        Private tableSelect_Sal_Gheymat_All As Select_Sal_Gheymat_AllDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSelect_Sal_Gheymat_All = CType(Me.Table,Select_Sal_Gheymat_AllDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Code() As String
            Get
                Return CType(Me(Me.tableSelect_Sal_Gheymat_All.CodeColumn),String)
            End Get
            Set
                Me(Me.tableSelect_Sal_Gheymat_All.CodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Block_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Sal_Gheymat_All.Block_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Block_Name' in table 'Select_Sal_Gheymat_All' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Sal_Gheymat_All.Block_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sharh() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Sal_Gheymat_All.sharhColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sharh' in table 'Select_Sal_Gheymat_All' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Sal_Gheymat_All.sharhColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property gheymat() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Sal_Gheymat_All.gheymatColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'gheymat' in table 'Select_Sal_Gheymat_All' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Sal_Gheymat_All.gheymatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sal() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Sal_Gheymat_All.salColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sal' in table 'Select_Sal_Gheymat_All' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Sal_Gheymat_All.salColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property darsad() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Sal_Gheymat_All.darsadColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'darsad' in table 'Select_Sal_Gheymat_All' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Sal_Gheymat_All.darsadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBlock_NameNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Sal_Gheymat_All.Block_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBlock_NameNull()
            Me(Me.tableSelect_Sal_Gheymat_All.Block_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IssharhNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Sal_Gheymat_All.sharhColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetsharhNull()
            Me(Me.tableSelect_Sal_Gheymat_All.sharhColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsgheymatNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Sal_Gheymat_All.gheymatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetgheymatNull()
            Me(Me.tableSelect_Sal_Gheymat_All.gheymatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IssalNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Sal_Gheymat_All.salColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetsalNull()
            Me(Me.tableSelect_Sal_Gheymat_All.salColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdarsadNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Sal_Gheymat_All.darsadColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdarsadNull()
            Me(Me.tableSelect_Sal_Gheymat_All.darsadColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class FSelect_CalcRow
        Inherits Global.System.Data.DataRow
        
        Private tableFSelect_Calc As FSelect_CalcDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableFSelect_Calc = CType(Me.Table,FSelect_CalcDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Masahat_Melk() As Single
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_Calc.Masahat_MelkColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Masahat_Melk' in table 'FSelect_Calc' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_Calc.Masahat_MelkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Bar_Tedad() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_Calc.Bar_TedadColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bar_Tedad' in table 'FSelect_Calc' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_Calc.Bar_TedadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property N_Meydan() As String
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_Calc.N_MeydanColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'N_Meydan' in table 'FSelect_Calc' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_Calc.N_MeydanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Rah_Mostaghel() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_Calc.Rah_MostaghelColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Rah_Mostaghel' in table 'FSelect_Calc' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_Calc.Rah_MostaghelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMasahat_MelkNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_Calc.Masahat_MelkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMasahat_MelkNull()
            Me(Me.tableFSelect_Calc.Masahat_MelkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBar_TedadNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_Calc.Bar_TedadColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBar_TedadNull()
            Me(Me.tableFSelect_Calc.Bar_TedadColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsN_MeydanNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_Calc.N_MeydanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetN_MeydanNull()
            Me(Me.tableFSelect_Calc.N_MeydanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRah_MostaghelNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_Calc.Rah_MostaghelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRah_MostaghelNull()
            Me(Me.tableFSelect_Calc.Rah_MostaghelColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class FSelect_Calc_SalRow
        Inherits Global.System.Data.DataRow
        
        Private tableFSelect_Calc_Sal As FSelect_Calc_SalDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableFSelect_Calc_Sal = CType(Me.Table,FSelect_Calc_SalDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Code_Block() As String
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_Calc_Sal.Code_BlockColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Code_Block' in table 'FSelect_Calc_Sal' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_Calc_Sal.Code_BlockColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Gheymat() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_Calc_Sal.GheymatColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Gheymat' in table 'FSelect_Calc_Sal' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_Calc_Sal.GheymatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sal() As String
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_Calc_Sal.salColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sal' in table 'FSelect_Calc_Sal' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_Calc_Sal.salColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCode_BlockNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_Calc_Sal.Code_BlockColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCode_BlockNull()
            Me(Me.tableFSelect_Calc_Sal.Code_BlockColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsGheymatNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_Calc_Sal.GheymatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetGheymatNull()
            Me(Me.tableFSelect_Calc_Sal.GheymatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IssalNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_Calc_Sal.salColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetsalNull()
            Me(Me.tableFSelect_Calc_Sal.salColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class FSelect_SalRow
        Inherits Global.System.Data.DataRow
        
        Private tableFSelect_Sal As FSelect_SalDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableFSelect_Sal = CType(Me.Table,FSelect_SalDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property gheymat() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_Sal.gheymatColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'gheymat' in table 'FSelect_Sal' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_Sal.gheymatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sal() As String
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_Sal.salColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sal' in table 'FSelect_Sal' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_Sal.salColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property darsad() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_Sal.darsadColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'darsad' in table 'FSelect_Sal' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_Sal.darsadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsgheymatNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_Sal.gheymatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetgheymatNull()
            Me(Me.tableFSelect_Sal.gheymatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IssalNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_Sal.salColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetsalNull()
            Me(Me.tableFSelect_Sal.salColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdarsadNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_Sal.darsadColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdarsadNull()
            Me(Me.tableFSelect_Sal.darsadColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class FSelect_Sal_GheymatRow
        Inherits Global.System.Data.DataRow
        
        Private tableFSelect_Sal_Gheymat As FSelect_Sal_GheymatDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableFSelect_Sal_Gheymat = CType(Me.Table,FSelect_Sal_GheymatDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property code() As String
            Get
                Return CType(Me(Me.tableFSelect_Sal_Gheymat.codeColumn),String)
            End Get
            Set
                Me(Me.tableFSelect_Sal_Gheymat.codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sharh() As String
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_Sal_Gheymat.sharhColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sharh' in table 'FSelect_Sal_Gheymat' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_Sal_Gheymat.sharhColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property gheymat() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_Sal_Gheymat.gheymatColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'gheymat' in table 'FSelect_Sal_Gheymat' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_Sal_Gheymat.gheymatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sal() As String
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_Sal_Gheymat.salColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sal' in table 'FSelect_Sal_Gheymat' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_Sal_Gheymat.salColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property darsad() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_Sal_Gheymat.darsadColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'darsad' in table 'FSelect_Sal_Gheymat' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_Sal_Gheymat.darsadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IssharhNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_Sal_Gheymat.sharhColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetsharhNull()
            Me(Me.tableFSelect_Sal_Gheymat.sharhColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsgheymatNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_Sal_Gheymat.gheymatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetgheymatNull()
            Me(Me.tableFSelect_Sal_Gheymat.gheymatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IssalNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_Sal_Gheymat.salColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetsalNull()
            Me(Me.tableFSelect_Sal_Gheymat.salColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdarsadNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_Sal_Gheymat.darsadColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdarsadNull()
            Me(Me.tableFSelect_Sal_Gheymat.darsadColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class FSelect_Sal_Gheymat_AllRow
        Inherits Global.System.Data.DataRow
        
        Private tableFSelect_Sal_Gheymat_All As FSelect_Sal_Gheymat_AllDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableFSelect_Sal_Gheymat_All = CType(Me.Table,FSelect_Sal_Gheymat_AllDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Code() As String
            Get
                Return CType(Me(Me.tableFSelect_Sal_Gheymat_All.CodeColumn),String)
            End Get
            Set
                Me(Me.tableFSelect_Sal_Gheymat_All.CodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Block_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_Sal_Gheymat_All.Block_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Block_Name' in table 'FSelect_Sal_Gheymat_All' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_Sal_Gheymat_All.Block_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sharh() As String
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_Sal_Gheymat_All.sharhColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sharh' in table 'FSelect_Sal_Gheymat_All' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_Sal_Gheymat_All.sharhColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property gheymat() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_Sal_Gheymat_All.gheymatColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'gheymat' in table 'FSelect_Sal_Gheymat_All' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_Sal_Gheymat_All.gheymatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property sal() As String
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_Sal_Gheymat_All.salColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sal' in table 'FSelect_Sal_Gheymat_All' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_Sal_Gheymat_All.salColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property darsad() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_Sal_Gheymat_All.darsadColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'darsad' in table 'FSelect_Sal_Gheymat_All' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_Sal_Gheymat_All.darsadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBlock_NameNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_Sal_Gheymat_All.Block_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBlock_NameNull()
            Me(Me.tableFSelect_Sal_Gheymat_All.Block_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IssharhNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_Sal_Gheymat_All.sharhColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetsharhNull()
            Me(Me.tableFSelect_Sal_Gheymat_All.sharhColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsgheymatNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_Sal_Gheymat_All.gheymatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetgheymatNull()
            Me(Me.tableFSelect_Sal_Gheymat_All.gheymatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IssalNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_Sal_Gheymat_All.salColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetsalNull()
            Me(Me.tableFSelect_Sal_Gheymat_All.salColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsdarsadNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_Sal_Gheymat_All.darsadColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetdarsadNull()
            Me(Me.tableFSelect_Sal_Gheymat_All.darsadColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class FSelect_Tbl_Moshakhasat_MalekinRow
        Inherits Global.System.Data.DataRow
        
        Private tableFSelect_Tbl_Moshakhasat_Malekin As FSelect_Tbl_Moshakhasat_MalekinDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableFSelect_Tbl_Moshakhasat_Malekin = CType(Me.Table,FSelect_Tbl_Moshakhasat_MalekinDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Shomare_Shenasnameh() As String
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_Tbl_Moshakhasat_Malekin.Shomare_ShenasnamehColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Shomare_Shenasnameh' in table 'FSelect_Tbl_Moshakhasat_Male"& _ 
                            "kin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_Tbl_Moshakhasat_Malekin.Shomare_ShenasnamehColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tarikh_Tamallok() As String
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_Tbl_Moshakhasat_Malekin.Tarikh_TamallokColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tarikh_Tamallok' in table 'FSelect_Tbl_Moshakhasat_Malekin'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_Tbl_Moshakhasat_Malekin.Tarikh_TamallokColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property No_Malekiyat_Code() As String
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_Tbl_Moshakhasat_Malekin.No_Malekiyat_CodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'No_Malekiyat_Code' in table 'FSelect_Tbl_Moshakhasat_Maleki"& _ 
                            "n' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_Tbl_Moshakhasat_Malekin.No_Malekiyat_CodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property No_Malekiyat_Tedad() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_Tbl_Moshakhasat_Malekin.No_Malekiyat_TedadColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'No_Malekiyat_Tedad' in table 'FSelect_Tbl_Moshakhasat_Malek"& _ 
                            "in' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_Tbl_Moshakhasat_Malekin.No_Malekiyat_TedadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Vaziyat_Tamallok() As String
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_Tbl_Moshakhasat_Malekin.Vaziyat_TamallokColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Vaziyat_Tamallok' in table 'FSelect_Tbl_Moshakhasat_Malekin"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_Tbl_Moshakhasat_Malekin.Vaziyat_TamallokColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Code_No_Malekiat() As String
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_Tbl_Moshakhasat_Malekin.Code_No_MalekiatColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Code_No_Malekiat' in table 'FSelect_Tbl_Moshakhasat_Malekin"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_Tbl_Moshakhasat_Malekin.Code_No_MalekiatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Malek_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_Tbl_Moshakhasat_Malekin.Malek_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Malek_Name' in table 'FSelect_Tbl_Moshakhasat_Malekin' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_Tbl_Moshakhasat_Malekin.Malek_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Malek_Family() As String
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_Tbl_Moshakhasat_Malekin.Malek_FamilyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Malek_Family' in table 'FSelect_Tbl_Moshakhasat_Malekin' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_Tbl_Moshakhasat_Malekin.Malek_FamilyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Malek_Name_Pedar() As String
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_Tbl_Moshakhasat_Malekin.Malek_Name_PedarColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Malek_Name_Pedar' in table 'FSelect_Tbl_Moshakhasat_Malekin"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_Tbl_Moshakhasat_Malekin.Malek_Name_PedarColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Malek_SHsh() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_Tbl_Moshakhasat_Malekin.Malek_SHshColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Malek_SHsh' in table 'FSelect_Tbl_Moshakhasat_Malekin' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_Tbl_Moshakhasat_Malekin.Malek_SHshColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Malek_CodeMelli() As String
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_Tbl_Moshakhasat_Malekin.Malek_CodeMelliColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Malek_CodeMelli' in table 'FSelect_Tbl_Moshakhasat_Malekin'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_Tbl_Moshakhasat_Malekin.Malek_CodeMelliColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Malek_MahalSodur() As String
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_Tbl_Moshakhasat_Malekin.Malek_MahalSodurColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Malek_MahalSodur' in table 'FSelect_Tbl_Moshakhasat_Malekin"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_Tbl_Moshakhasat_Malekin.Malek_MahalSodurColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Malek_Address() As String
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_Tbl_Moshakhasat_Malekin.Malek_AddressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Malek_Address' in table 'FSelect_Tbl_Moshakhasat_Malekin' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_Tbl_Moshakhasat_Malekin.Malek_AddressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Malek_Tel() As String
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_Tbl_Moshakhasat_Malekin.Malek_TelColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Malek_Tel' in table 'FSelect_Tbl_Moshakhasat_Malekin' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_Tbl_Moshakhasat_Malekin.Malek_TelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Radif() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_Tbl_Moshakhasat_Malekin.RadifColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Radif' in table 'FSelect_Tbl_Moshakhasat_Malekin' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_Tbl_Moshakhasat_Malekin.RadifColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsShomare_ShenasnamehNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_Tbl_Moshakhasat_Malekin.Shomare_ShenasnamehColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetShomare_ShenasnamehNull()
            Me(Me.tableFSelect_Tbl_Moshakhasat_Malekin.Shomare_ShenasnamehColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTarikh_TamallokNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_Tbl_Moshakhasat_Malekin.Tarikh_TamallokColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTarikh_TamallokNull()
            Me(Me.tableFSelect_Tbl_Moshakhasat_Malekin.Tarikh_TamallokColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNo_Malekiyat_CodeNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_Tbl_Moshakhasat_Malekin.No_Malekiyat_CodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNo_Malekiyat_CodeNull()
            Me(Me.tableFSelect_Tbl_Moshakhasat_Malekin.No_Malekiyat_CodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNo_Malekiyat_TedadNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_Tbl_Moshakhasat_Malekin.No_Malekiyat_TedadColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNo_Malekiyat_TedadNull()
            Me(Me.tableFSelect_Tbl_Moshakhasat_Malekin.No_Malekiyat_TedadColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsVaziyat_TamallokNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_Tbl_Moshakhasat_Malekin.Vaziyat_TamallokColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetVaziyat_TamallokNull()
            Me(Me.tableFSelect_Tbl_Moshakhasat_Malekin.Vaziyat_TamallokColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCode_No_MalekiatNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_Tbl_Moshakhasat_Malekin.Code_No_MalekiatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCode_No_MalekiatNull()
            Me(Me.tableFSelect_Tbl_Moshakhasat_Malekin.Code_No_MalekiatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMalek_NameNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_Tbl_Moshakhasat_Malekin.Malek_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMalek_NameNull()
            Me(Me.tableFSelect_Tbl_Moshakhasat_Malekin.Malek_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMalek_FamilyNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_Tbl_Moshakhasat_Malekin.Malek_FamilyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMalek_FamilyNull()
            Me(Me.tableFSelect_Tbl_Moshakhasat_Malekin.Malek_FamilyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMalek_Name_PedarNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_Tbl_Moshakhasat_Malekin.Malek_Name_PedarColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMalek_Name_PedarNull()
            Me(Me.tableFSelect_Tbl_Moshakhasat_Malekin.Malek_Name_PedarColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMalek_SHshNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_Tbl_Moshakhasat_Malekin.Malek_SHshColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMalek_SHshNull()
            Me(Me.tableFSelect_Tbl_Moshakhasat_Malekin.Malek_SHshColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMalek_CodeMelliNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_Tbl_Moshakhasat_Malekin.Malek_CodeMelliColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMalek_CodeMelliNull()
            Me(Me.tableFSelect_Tbl_Moshakhasat_Malekin.Malek_CodeMelliColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMalek_MahalSodurNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_Tbl_Moshakhasat_Malekin.Malek_MahalSodurColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMalek_MahalSodurNull()
            Me(Me.tableFSelect_Tbl_Moshakhasat_Malekin.Malek_MahalSodurColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMalek_AddressNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_Tbl_Moshakhasat_Malekin.Malek_AddressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMalek_AddressNull()
            Me(Me.tableFSelect_Tbl_Moshakhasat_Malekin.Malek_AddressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMalek_TelNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_Tbl_Moshakhasat_Malekin.Malek_TelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMalek_TelNull()
            Me(Me.tableFSelect_Tbl_Moshakhasat_Malekin.Malek_TelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRadifNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_Tbl_Moshakhasat_Malekin.RadifColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRadifNull()
            Me(Me.tableFSelect_Tbl_Moshakhasat_Malekin.RadifColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Tbl_Moshakhasat_MalekinRow
        Inherits Global.System.Data.DataRow
        
        Private tableTbl_Moshakhasat_Malekin As Tbl_Moshakhasat_MalekinDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTbl_Moshakhasat_Malekin = CType(Me.Table,Tbl_Moshakhasat_MalekinDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Shomare_Shenasnameh() As String
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Moshakhasat_Malekin.Shomare_ShenasnamehColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Shomare_Shenasnameh' in table 'Tbl_Moshakhasat_Malekin' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Moshakhasat_Malekin.Shomare_ShenasnamehColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Radif() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Moshakhasat_Malekin.RadifColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Radif' in table 'Tbl_Moshakhasat_Malekin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Moshakhasat_Malekin.RadifColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tarikh_Tamallok() As String
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Moshakhasat_Malekin.Tarikh_TamallokColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tarikh_Tamallok' in table 'Tbl_Moshakhasat_Malekin' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Moshakhasat_Malekin.Tarikh_TamallokColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property No_Malekiyat_Code() As String
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Moshakhasat_Malekin.No_Malekiyat_CodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'No_Malekiyat_Code' in table 'Tbl_Moshakhasat_Malekin' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Moshakhasat_Malekin.No_Malekiyat_CodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property No_Malekiyat_Tedad() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Moshakhasat_Malekin.No_Malekiyat_TedadColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'No_Malekiyat_Tedad' in table 'Tbl_Moshakhasat_Malekin' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Moshakhasat_Malekin.No_Malekiyat_TedadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Vaziyat_Tamallok() As String
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Moshakhasat_Malekin.Vaziyat_TamallokColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Vaziyat_Tamallok' in table 'Tbl_Moshakhasat_Malekin' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Moshakhasat_Malekin.Vaziyat_TamallokColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Code_No_Malekiat() As String
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Moshakhasat_Malekin.Code_No_MalekiatColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Code_No_Malekiat' in table 'Tbl_Moshakhasat_Malekin' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Moshakhasat_Malekin.Code_No_MalekiatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Malek_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Moshakhasat_Malekin.Malek_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Malek_Name' in table 'Tbl_Moshakhasat_Malekin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Moshakhasat_Malekin.Malek_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Malek_Family() As String
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Moshakhasat_Malekin.Malek_FamilyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Malek_Family' in table 'Tbl_Moshakhasat_Malekin' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Moshakhasat_Malekin.Malek_FamilyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Malek_Name_Pedar() As String
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Moshakhasat_Malekin.Malek_Name_PedarColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Malek_Name_Pedar' in table 'Tbl_Moshakhasat_Malekin' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Moshakhasat_Malekin.Malek_Name_PedarColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Malek_SHsh() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Moshakhasat_Malekin.Malek_SHshColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Malek_SHsh' in table 'Tbl_Moshakhasat_Malekin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Moshakhasat_Malekin.Malek_SHshColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Malek_CodeMelli() As String
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Moshakhasat_Malekin.Malek_CodeMelliColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Malek_CodeMelli' in table 'Tbl_Moshakhasat_Malekin' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Moshakhasat_Malekin.Malek_CodeMelliColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Malek_MahalSodur() As String
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Moshakhasat_Malekin.Malek_MahalSodurColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Malek_MahalSodur' in table 'Tbl_Moshakhasat_Malekin' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Moshakhasat_Malekin.Malek_MahalSodurColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Malek_Address() As String
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Moshakhasat_Malekin.Malek_AddressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Malek_Address' in table 'Tbl_Moshakhasat_Malekin' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Moshakhasat_Malekin.Malek_AddressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Malek_Tel() As String
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Moshakhasat_Malekin.Malek_TelColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Malek_Tel' in table 'Tbl_Moshakhasat_Malekin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Moshakhasat_Malekin.Malek_TelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsShomare_ShenasnamehNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Moshakhasat_Malekin.Shomare_ShenasnamehColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetShomare_ShenasnamehNull()
            Me(Me.tableTbl_Moshakhasat_Malekin.Shomare_ShenasnamehColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRadifNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Moshakhasat_Malekin.RadifColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRadifNull()
            Me(Me.tableTbl_Moshakhasat_Malekin.RadifColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTarikh_TamallokNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Moshakhasat_Malekin.Tarikh_TamallokColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTarikh_TamallokNull()
            Me(Me.tableTbl_Moshakhasat_Malekin.Tarikh_TamallokColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNo_Malekiyat_CodeNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Moshakhasat_Malekin.No_Malekiyat_CodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNo_Malekiyat_CodeNull()
            Me(Me.tableTbl_Moshakhasat_Malekin.No_Malekiyat_CodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNo_Malekiyat_TedadNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Moshakhasat_Malekin.No_Malekiyat_TedadColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNo_Malekiyat_TedadNull()
            Me(Me.tableTbl_Moshakhasat_Malekin.No_Malekiyat_TedadColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsVaziyat_TamallokNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Moshakhasat_Malekin.Vaziyat_TamallokColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetVaziyat_TamallokNull()
            Me(Me.tableTbl_Moshakhasat_Malekin.Vaziyat_TamallokColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCode_No_MalekiatNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Moshakhasat_Malekin.Code_No_MalekiatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCode_No_MalekiatNull()
            Me(Me.tableTbl_Moshakhasat_Malekin.Code_No_MalekiatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMalek_NameNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Moshakhasat_Malekin.Malek_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMalek_NameNull()
            Me(Me.tableTbl_Moshakhasat_Malekin.Malek_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMalek_FamilyNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Moshakhasat_Malekin.Malek_FamilyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMalek_FamilyNull()
            Me(Me.tableTbl_Moshakhasat_Malekin.Malek_FamilyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMalek_Name_PedarNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Moshakhasat_Malekin.Malek_Name_PedarColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMalek_Name_PedarNull()
            Me(Me.tableTbl_Moshakhasat_Malekin.Malek_Name_PedarColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMalek_SHshNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Moshakhasat_Malekin.Malek_SHshColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMalek_SHshNull()
            Me(Me.tableTbl_Moshakhasat_Malekin.Malek_SHshColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMalek_CodeMelliNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Moshakhasat_Malekin.Malek_CodeMelliColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMalek_CodeMelliNull()
            Me(Me.tableTbl_Moshakhasat_Malekin.Malek_CodeMelliColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMalek_MahalSodurNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Moshakhasat_Malekin.Malek_MahalSodurColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMalek_MahalSodurNull()
            Me(Me.tableTbl_Moshakhasat_Malekin.Malek_MahalSodurColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMalek_AddressNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Moshakhasat_Malekin.Malek_AddressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMalek_AddressNull()
            Me(Me.tableTbl_Moshakhasat_Malekin.Malek_AddressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMalek_TelNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Moshakhasat_Malekin.Malek_TelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMalek_TelNull()
            Me(Me.tableTbl_Moshakhasat_Malekin.Malek_TelColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Select_Tbl_Moshakhasat_MalekinRow
        Inherits Global.System.Data.DataRow
        
        Private tableSelect_Tbl_Moshakhasat_Malekin As Select_Tbl_Moshakhasat_MalekinDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSelect_Tbl_Moshakhasat_Malekin = CType(Me.Table,Select_Tbl_Moshakhasat_MalekinDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Shomare_Shenasnameh() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Moshakhasat_Malekin.Shomare_ShenasnamehColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Shomare_Shenasnameh' in table 'Select_Tbl_Moshakhasat_Malek"& _ 
                            "in' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Moshakhasat_Malekin.Shomare_ShenasnamehColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Radif() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Moshakhasat_Malekin.RadifColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Radif' in table 'Select_Tbl_Moshakhasat_Malekin' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Moshakhasat_Malekin.RadifColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tarikh_Tamallok() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Moshakhasat_Malekin.Tarikh_TamallokColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tarikh_Tamallok' in table 'Select_Tbl_Moshakhasat_Malekin' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Moshakhasat_Malekin.Tarikh_TamallokColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property No_Malekiyat_Code() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Moshakhasat_Malekin.No_Malekiyat_CodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'No_Malekiyat_Code' in table 'Select_Tbl_Moshakhasat_Malekin"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Moshakhasat_Malekin.No_Malekiyat_CodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property No_Malekiyat_Tedad() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Moshakhasat_Malekin.No_Malekiyat_TedadColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'No_Malekiyat_Tedad' in table 'Select_Tbl_Moshakhasat_Maleki"& _ 
                            "n' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Moshakhasat_Malekin.No_Malekiyat_TedadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Vaziyat_Tamallok() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Moshakhasat_Malekin.Vaziyat_TamallokColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Vaziyat_Tamallok' in table 'Select_Tbl_Moshakhasat_Malekin'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Moshakhasat_Malekin.Vaziyat_TamallokColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Code_No_Malekiat() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Moshakhasat_Malekin.Code_No_MalekiatColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Code_No_Malekiat' in table 'Select_Tbl_Moshakhasat_Malekin'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Moshakhasat_Malekin.Code_No_MalekiatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Malek_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Moshakhasat_Malekin.Malek_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Malek_Name' in table 'Select_Tbl_Moshakhasat_Malekin' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Moshakhasat_Malekin.Malek_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Malek_Family() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Moshakhasat_Malekin.Malek_FamilyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Malek_Family' in table 'Select_Tbl_Moshakhasat_Malekin' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Moshakhasat_Malekin.Malek_FamilyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Malek_Name_Pedar() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Moshakhasat_Malekin.Malek_Name_PedarColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Malek_Name_Pedar' in table 'Select_Tbl_Moshakhasat_Malekin'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Moshakhasat_Malekin.Malek_Name_PedarColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Malek_SHsh() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Moshakhasat_Malekin.Malek_SHshColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Malek_SHsh' in table 'Select_Tbl_Moshakhasat_Malekin' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Moshakhasat_Malekin.Malek_SHshColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Malek_CodeMelli() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Moshakhasat_Malekin.Malek_CodeMelliColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Malek_CodeMelli' in table 'Select_Tbl_Moshakhasat_Malekin' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Moshakhasat_Malekin.Malek_CodeMelliColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Malek_MahalSodur() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Moshakhasat_Malekin.Malek_MahalSodurColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Malek_MahalSodur' in table 'Select_Tbl_Moshakhasat_Malekin'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Moshakhasat_Malekin.Malek_MahalSodurColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Malek_Address() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Moshakhasat_Malekin.Malek_AddressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Malek_Address' in table 'Select_Tbl_Moshakhasat_Malekin' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Moshakhasat_Malekin.Malek_AddressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Malek_Tel() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Moshakhasat_Malekin.Malek_TelColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Malek_Tel' in table 'Select_Tbl_Moshakhasat_Malekin' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Moshakhasat_Malekin.Malek_TelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsShomare_ShenasnamehNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Moshakhasat_Malekin.Shomare_ShenasnamehColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetShomare_ShenasnamehNull()
            Me(Me.tableSelect_Tbl_Moshakhasat_Malekin.Shomare_ShenasnamehColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRadifNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Moshakhasat_Malekin.RadifColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRadifNull()
            Me(Me.tableSelect_Tbl_Moshakhasat_Malekin.RadifColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTarikh_TamallokNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Moshakhasat_Malekin.Tarikh_TamallokColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTarikh_TamallokNull()
            Me(Me.tableSelect_Tbl_Moshakhasat_Malekin.Tarikh_TamallokColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNo_Malekiyat_CodeNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Moshakhasat_Malekin.No_Malekiyat_CodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNo_Malekiyat_CodeNull()
            Me(Me.tableSelect_Tbl_Moshakhasat_Malekin.No_Malekiyat_CodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNo_Malekiyat_TedadNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Moshakhasat_Malekin.No_Malekiyat_TedadColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNo_Malekiyat_TedadNull()
            Me(Me.tableSelect_Tbl_Moshakhasat_Malekin.No_Malekiyat_TedadColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsVaziyat_TamallokNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Moshakhasat_Malekin.Vaziyat_TamallokColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetVaziyat_TamallokNull()
            Me(Me.tableSelect_Tbl_Moshakhasat_Malekin.Vaziyat_TamallokColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCode_No_MalekiatNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Moshakhasat_Malekin.Code_No_MalekiatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCode_No_MalekiatNull()
            Me(Me.tableSelect_Tbl_Moshakhasat_Malekin.Code_No_MalekiatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMalek_NameNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Moshakhasat_Malekin.Malek_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMalek_NameNull()
            Me(Me.tableSelect_Tbl_Moshakhasat_Malekin.Malek_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMalek_FamilyNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Moshakhasat_Malekin.Malek_FamilyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMalek_FamilyNull()
            Me(Me.tableSelect_Tbl_Moshakhasat_Malekin.Malek_FamilyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMalek_Name_PedarNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Moshakhasat_Malekin.Malek_Name_PedarColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMalek_Name_PedarNull()
            Me(Me.tableSelect_Tbl_Moshakhasat_Malekin.Malek_Name_PedarColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMalek_SHshNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Moshakhasat_Malekin.Malek_SHshColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMalek_SHshNull()
            Me(Me.tableSelect_Tbl_Moshakhasat_Malekin.Malek_SHshColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMalek_CodeMelliNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Moshakhasat_Malekin.Malek_CodeMelliColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMalek_CodeMelliNull()
            Me(Me.tableSelect_Tbl_Moshakhasat_Malekin.Malek_CodeMelliColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMalek_MahalSodurNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Moshakhasat_Malekin.Malek_MahalSodurColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMalek_MahalSodurNull()
            Me(Me.tableSelect_Tbl_Moshakhasat_Malekin.Malek_MahalSodurColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMalek_AddressNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Moshakhasat_Malekin.Malek_AddressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMalek_AddressNull()
            Me(Me.tableSelect_Tbl_Moshakhasat_Malekin.Malek_AddressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMalek_TelNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Moshakhasat_Malekin.Malek_TelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMalek_TelNull()
            Me(Me.tableSelect_Tbl_Moshakhasat_Malekin.Malek_TelColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Tbl_Mahiyat_FizikiRow
        Inherits Global.System.Data.DataRow
        
        Private tableTbl_Mahiyat_Fiziki As Tbl_Mahiyat_FizikiDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTbl_Mahiyat_Fiziki = CType(Me.Table,Tbl_Mahiyat_FizikiDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Shomare_Shenasnameh() As String
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Mahiyat_Fiziki.Shomare_ShenasnamehColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Shomare_Shenasnameh' in table 'Tbl_Mahiyat_Fiziki' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Mahiyat_Fiziki.Shomare_ShenasnamehColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property C300() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Mahiyat_Fiziki.C300Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C300' in table 'Tbl_Mahiyat_Fiziki' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Mahiyat_Fiziki.C300Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property C301() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Mahiyat_Fiziki.C301Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C301' in table 'Tbl_Mahiyat_Fiziki' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Mahiyat_Fiziki.C301Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property C302() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Mahiyat_Fiziki.C302Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C302' in table 'Tbl_Mahiyat_Fiziki' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Mahiyat_Fiziki.C302Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property C303() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Mahiyat_Fiziki.C303Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C303' in table 'Tbl_Mahiyat_Fiziki' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Mahiyat_Fiziki.C303Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property C304() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Mahiyat_Fiziki.C304Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C304' in table 'Tbl_Mahiyat_Fiziki' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Mahiyat_Fiziki.C304Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property C305() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Mahiyat_Fiziki.C305Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C305' in table 'Tbl_Mahiyat_Fiziki' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Mahiyat_Fiziki.C305Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property C306() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Mahiyat_Fiziki.C306Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C306' in table 'Tbl_Mahiyat_Fiziki' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Mahiyat_Fiziki.C306Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property C307() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Mahiyat_Fiziki.C307Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C307' in table 'Tbl_Mahiyat_Fiziki' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Mahiyat_Fiziki.C307Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsShomare_ShenasnamehNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Mahiyat_Fiziki.Shomare_ShenasnamehColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetShomare_ShenasnamehNull()
            Me(Me.tableTbl_Mahiyat_Fiziki.Shomare_ShenasnamehColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsC300Null() As Boolean
            Return Me.IsNull(Me.tableTbl_Mahiyat_Fiziki.C300Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetC300Null()
            Me(Me.tableTbl_Mahiyat_Fiziki.C300Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsC301Null() As Boolean
            Return Me.IsNull(Me.tableTbl_Mahiyat_Fiziki.C301Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetC301Null()
            Me(Me.tableTbl_Mahiyat_Fiziki.C301Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsC302Null() As Boolean
            Return Me.IsNull(Me.tableTbl_Mahiyat_Fiziki.C302Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetC302Null()
            Me(Me.tableTbl_Mahiyat_Fiziki.C302Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsC303Null() As Boolean
            Return Me.IsNull(Me.tableTbl_Mahiyat_Fiziki.C303Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetC303Null()
            Me(Me.tableTbl_Mahiyat_Fiziki.C303Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsC304Null() As Boolean
            Return Me.IsNull(Me.tableTbl_Mahiyat_Fiziki.C304Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetC304Null()
            Me(Me.tableTbl_Mahiyat_Fiziki.C304Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsC305Null() As Boolean
            Return Me.IsNull(Me.tableTbl_Mahiyat_Fiziki.C305Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetC305Null()
            Me(Me.tableTbl_Mahiyat_Fiziki.C305Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsC306Null() As Boolean
            Return Me.IsNull(Me.tableTbl_Mahiyat_Fiziki.C306Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetC306Null()
            Me(Me.tableTbl_Mahiyat_Fiziki.C306Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsC307Null() As Boolean
            Return Me.IsNull(Me.tableTbl_Mahiyat_Fiziki.C307Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetC307Null()
            Me(Me.tableTbl_Mahiyat_Fiziki.C307Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Select_Tbl_Mahiyat_FizikiRow
        Inherits Global.System.Data.DataRow
        
        Private tableSelect_Tbl_Mahiyat_Fiziki As Select_Tbl_Mahiyat_FizikiDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSelect_Tbl_Mahiyat_Fiziki = CType(Me.Table,Select_Tbl_Mahiyat_FizikiDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Shomare_Shenasnameh() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Mahiyat_Fiziki.Shomare_ShenasnamehColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Shomare_Shenasnameh' in table 'Select_Tbl_Mahiyat_Fiziki' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Mahiyat_Fiziki.Shomare_ShenasnamehColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property C300() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Mahiyat_Fiziki.C300Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C300' in table 'Select_Tbl_Mahiyat_Fiziki' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Mahiyat_Fiziki.C300Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property C301() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Mahiyat_Fiziki.C301Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C301' in table 'Select_Tbl_Mahiyat_Fiziki' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Mahiyat_Fiziki.C301Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property C302() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Mahiyat_Fiziki.C302Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C302' in table 'Select_Tbl_Mahiyat_Fiziki' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Mahiyat_Fiziki.C302Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property C303() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Mahiyat_Fiziki.C303Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C303' in table 'Select_Tbl_Mahiyat_Fiziki' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Mahiyat_Fiziki.C303Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property C304() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Mahiyat_Fiziki.C304Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C304' in table 'Select_Tbl_Mahiyat_Fiziki' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Mahiyat_Fiziki.C304Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property C305() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Mahiyat_Fiziki.C305Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C305' in table 'Select_Tbl_Mahiyat_Fiziki' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Mahiyat_Fiziki.C305Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property C306() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Mahiyat_Fiziki.C306Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C306' in table 'Select_Tbl_Mahiyat_Fiziki' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Mahiyat_Fiziki.C306Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property C307() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Mahiyat_Fiziki.C307Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C307' in table 'Select_Tbl_Mahiyat_Fiziki' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Mahiyat_Fiziki.C307Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsShomare_ShenasnamehNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Mahiyat_Fiziki.Shomare_ShenasnamehColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetShomare_ShenasnamehNull()
            Me(Me.tableSelect_Tbl_Mahiyat_Fiziki.Shomare_ShenasnamehColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsC300Null() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Mahiyat_Fiziki.C300Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetC300Null()
            Me(Me.tableSelect_Tbl_Mahiyat_Fiziki.C300Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsC301Null() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Mahiyat_Fiziki.C301Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetC301Null()
            Me(Me.tableSelect_Tbl_Mahiyat_Fiziki.C301Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsC302Null() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Mahiyat_Fiziki.C302Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetC302Null()
            Me(Me.tableSelect_Tbl_Mahiyat_Fiziki.C302Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsC303Null() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Mahiyat_Fiziki.C303Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetC303Null()
            Me(Me.tableSelect_Tbl_Mahiyat_Fiziki.C303Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsC304Null() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Mahiyat_Fiziki.C304Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetC304Null()
            Me(Me.tableSelect_Tbl_Mahiyat_Fiziki.C304Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsC305Null() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Mahiyat_Fiziki.C305Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetC305Null()
            Me(Me.tableSelect_Tbl_Mahiyat_Fiziki.C305Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsC306Null() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Mahiyat_Fiziki.C306Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetC306Null()
            Me(Me.tableSelect_Tbl_Mahiyat_Fiziki.C306Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsC307Null() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Mahiyat_Fiziki.C307Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetC307Null()
            Me(Me.tableSelect_Tbl_Mahiyat_Fiziki.C307Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Tbl_No_EstefadehRow
        Inherits Global.System.Data.DataRow
        
        Private tableTbl_No_Estefadeh As Tbl_No_EstefadehDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTbl_No_Estefadeh = CType(Me.Table,Tbl_No_EstefadehDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Shomare_Shenasnameh() As String
            Get
                Try 
                    Return CType(Me(Me.tableTbl_No_Estefadeh.Shomare_ShenasnamehColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Shomare_Shenasnameh' in table 'Tbl_No_Estefadeh' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_No_Estefadeh.Shomare_ShenasnamehColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property C350() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableTbl_No_Estefadeh.C350Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C350' in table 'Tbl_No_Estefadeh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_No_Estefadeh.C350Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property C351() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableTbl_No_Estefadeh.C351Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C351' in table 'Tbl_No_Estefadeh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_No_Estefadeh.C351Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property C352() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableTbl_No_Estefadeh.C352Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C352' in table 'Tbl_No_Estefadeh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_No_Estefadeh.C352Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property C353() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableTbl_No_Estefadeh.C353Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C353' in table 'Tbl_No_Estefadeh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_No_Estefadeh.C353Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property C354() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableTbl_No_Estefadeh.C354Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C354' in table 'Tbl_No_Estefadeh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_No_Estefadeh.C354Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property C355() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableTbl_No_Estefadeh.C355Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C355' in table 'Tbl_No_Estefadeh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_No_Estefadeh.C355Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property C356() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableTbl_No_Estefadeh.C356Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C356' in table 'Tbl_No_Estefadeh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_No_Estefadeh.C356Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property C357() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableTbl_No_Estefadeh.C357Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C357' in table 'Tbl_No_Estefadeh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_No_Estefadeh.C357Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property C358() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableTbl_No_Estefadeh.C358Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C358' in table 'Tbl_No_Estefadeh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_No_Estefadeh.C358Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property C359() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableTbl_No_Estefadeh.C359Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C359' in table 'Tbl_No_Estefadeh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_No_Estefadeh.C359Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property C360() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableTbl_No_Estefadeh.C360Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C360' in table 'Tbl_No_Estefadeh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_No_Estefadeh.C360Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property C361() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableTbl_No_Estefadeh.C361Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C361' in table 'Tbl_No_Estefadeh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_No_Estefadeh.C361Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property C362() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableTbl_No_Estefadeh.C362Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C362' in table 'Tbl_No_Estefadeh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_No_Estefadeh.C362Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property C363() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableTbl_No_Estefadeh.C363Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C363' in table 'Tbl_No_Estefadeh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_No_Estefadeh.C363Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property C364() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableTbl_No_Estefadeh.C364Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C364' in table 'Tbl_No_Estefadeh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_No_Estefadeh.C364Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property C365() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableTbl_No_Estefadeh.C365Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C365' in table 'Tbl_No_Estefadeh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_No_Estefadeh.C365Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property C366() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableTbl_No_Estefadeh.C366Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C366' in table 'Tbl_No_Estefadeh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_No_Estefadeh.C366Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property C367() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableTbl_No_Estefadeh.C367Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C367' in table 'Tbl_No_Estefadeh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_No_Estefadeh.C367Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property C368() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableTbl_No_Estefadeh.C368Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C368' in table 'Tbl_No_Estefadeh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_No_Estefadeh.C368Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property C369() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableTbl_No_Estefadeh.C369Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C369' in table 'Tbl_No_Estefadeh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_No_Estefadeh.C369Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property C370() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableTbl_No_Estefadeh.C370Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C370' in table 'Tbl_No_Estefadeh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_No_Estefadeh.C370Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property C371() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableTbl_No_Estefadeh.C371Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C371' in table 'Tbl_No_Estefadeh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_No_Estefadeh.C371Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property C372() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableTbl_No_Estefadeh.C372Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C372' in table 'Tbl_No_Estefadeh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_No_Estefadeh.C372Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsShomare_ShenasnamehNull() As Boolean
            Return Me.IsNull(Me.tableTbl_No_Estefadeh.Shomare_ShenasnamehColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetShomare_ShenasnamehNull()
            Me(Me.tableTbl_No_Estefadeh.Shomare_ShenasnamehColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsC350Null() As Boolean
            Return Me.IsNull(Me.tableTbl_No_Estefadeh.C350Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetC350Null()
            Me(Me.tableTbl_No_Estefadeh.C350Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsC351Null() As Boolean
            Return Me.IsNull(Me.tableTbl_No_Estefadeh.C351Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetC351Null()
            Me(Me.tableTbl_No_Estefadeh.C351Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsC352Null() As Boolean
            Return Me.IsNull(Me.tableTbl_No_Estefadeh.C352Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetC352Null()
            Me(Me.tableTbl_No_Estefadeh.C352Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsC353Null() As Boolean
            Return Me.IsNull(Me.tableTbl_No_Estefadeh.C353Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetC353Null()
            Me(Me.tableTbl_No_Estefadeh.C353Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsC354Null() As Boolean
            Return Me.IsNull(Me.tableTbl_No_Estefadeh.C354Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetC354Null()
            Me(Me.tableTbl_No_Estefadeh.C354Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsC355Null() As Boolean
            Return Me.IsNull(Me.tableTbl_No_Estefadeh.C355Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetC355Null()
            Me(Me.tableTbl_No_Estefadeh.C355Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsC356Null() As Boolean
            Return Me.IsNull(Me.tableTbl_No_Estefadeh.C356Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetC356Null()
            Me(Me.tableTbl_No_Estefadeh.C356Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsC357Null() As Boolean
            Return Me.IsNull(Me.tableTbl_No_Estefadeh.C357Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetC357Null()
            Me(Me.tableTbl_No_Estefadeh.C357Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsC358Null() As Boolean
            Return Me.IsNull(Me.tableTbl_No_Estefadeh.C358Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetC358Null()
            Me(Me.tableTbl_No_Estefadeh.C358Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsC359Null() As Boolean
            Return Me.IsNull(Me.tableTbl_No_Estefadeh.C359Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetC359Null()
            Me(Me.tableTbl_No_Estefadeh.C359Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsC360Null() As Boolean
            Return Me.IsNull(Me.tableTbl_No_Estefadeh.C360Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetC360Null()
            Me(Me.tableTbl_No_Estefadeh.C360Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsC361Null() As Boolean
            Return Me.IsNull(Me.tableTbl_No_Estefadeh.C361Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetC361Null()
            Me(Me.tableTbl_No_Estefadeh.C361Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsC362Null() As Boolean
            Return Me.IsNull(Me.tableTbl_No_Estefadeh.C362Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetC362Null()
            Me(Me.tableTbl_No_Estefadeh.C362Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsC363Null() As Boolean
            Return Me.IsNull(Me.tableTbl_No_Estefadeh.C363Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetC363Null()
            Me(Me.tableTbl_No_Estefadeh.C363Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsC364Null() As Boolean
            Return Me.IsNull(Me.tableTbl_No_Estefadeh.C364Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetC364Null()
            Me(Me.tableTbl_No_Estefadeh.C364Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsC365Null() As Boolean
            Return Me.IsNull(Me.tableTbl_No_Estefadeh.C365Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetC365Null()
            Me(Me.tableTbl_No_Estefadeh.C365Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsC366Null() As Boolean
            Return Me.IsNull(Me.tableTbl_No_Estefadeh.C366Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetC366Null()
            Me(Me.tableTbl_No_Estefadeh.C366Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsC367Null() As Boolean
            Return Me.IsNull(Me.tableTbl_No_Estefadeh.C367Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetC367Null()
            Me(Me.tableTbl_No_Estefadeh.C367Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsC368Null() As Boolean
            Return Me.IsNull(Me.tableTbl_No_Estefadeh.C368Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetC368Null()
            Me(Me.tableTbl_No_Estefadeh.C368Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsC369Null() As Boolean
            Return Me.IsNull(Me.tableTbl_No_Estefadeh.C369Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetC369Null()
            Me(Me.tableTbl_No_Estefadeh.C369Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsC370Null() As Boolean
            Return Me.IsNull(Me.tableTbl_No_Estefadeh.C370Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetC370Null()
            Me(Me.tableTbl_No_Estefadeh.C370Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsC371Null() As Boolean
            Return Me.IsNull(Me.tableTbl_No_Estefadeh.C371Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetC371Null()
            Me(Me.tableTbl_No_Estefadeh.C371Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsC372Null() As Boolean
            Return Me.IsNull(Me.tableTbl_No_Estefadeh.C372Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetC372Null()
            Me(Me.tableTbl_No_Estefadeh.C372Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class TAmlakRow
        Inherits Global.System.Data.DataRow
        
        Private tableTAmlak As TAmlakDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTAmlak = CType(Me.Table,TAmlakDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SHsh() As String
            Get
                Try 
                    Return CType(Me(Me.tableTAmlak.SHshColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SHsh' in table 'TAmlak' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTAmlak.SHshColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Kasri() As Single
            Get
                Try 
                    Return CType(Me(Me.tableTAmlak.KasriColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Kasri' in table 'TAmlak' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTAmlak.KasriColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Ezafat() As Single
            Get
                Try 
                    Return CType(Me(Me.tableTAmlak.EzafatColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Ezafat' in table 'TAmlak' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTAmlak.EzafatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property No_Melk() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableTAmlak.No_MelkColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'No_Melk' in table 'TAmlak' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTAmlak.No_MelkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Masahat_ZirBana() As Single
            Get
                Try 
                    Return CType(Me(Me.tableTAmlak.Masahat_ZirBanaColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Masahat_ZirBana' in table 'TAmlak' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTAmlak.Masahat_ZirBanaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tedad_vahed() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTAmlak.Tedad_vahedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tedad_vahed' in table 'TAmlak' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTAmlak.Tedad_vahedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Masahat_Bana() As Single
            Get
                Try 
                    Return CType(Me(Me.tableTAmlak.Masahat_BanaColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Masahat_Bana' in table 'TAmlak' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTAmlak.Masahat_BanaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Arzesh_Moamelati() As Single
            Get
                Try 
                    Return CType(Me(Me.tableTAmlak.Arzesh_MoamelatiColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Arzesh_Moamelati' in table 'TAmlak' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTAmlak.Arzesh_MoamelatiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TKasri_Zamin() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableTAmlak.TKasri_ZaminColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TKasri_Zamin' in table 'TAmlak' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTAmlak.TKasri_ZaminColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TAzafe_tarakom() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableTAmlak.TAzafe_tarakomColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TAzafe_tarakom' in table 'TAmlak' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTAmlak.TAzafe_tarakomColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property THagh_Nezareh() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableTAmlak.THagh_NezarehColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'THagh_Nezareh' in table 'TAmlak' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTAmlak.THagh_NezarehColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TSodore_ParvanehAnboh() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableTAmlak.TSodore_ParvanehAnbohColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TSodore_ParvanehAnboh' in table 'TAmlak' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTAmlak.TSodore_ParvanehAnbohColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TSodore_ParvanehVilaie() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableTAmlak.TSodore_ParvanehVilaieColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TSodore_ParvanehVilaie' in table 'TAmlak' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTAmlak.TSodore_ParvanehVilaieColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TSath_Shahr() As String
            Get
                Try 
                    Return CType(Me(Me.tableTAmlak.TSath_ShahrColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TSath_Shahr' in table 'TAmlak' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTAmlak.TSath_ShahrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TNosazi() As String
            Get
                Try 
                    Return CType(Me(Me.tableTAmlak.TNosaziColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TNosazi' in table 'TAmlak' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTAmlak.TNosaziColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TTamirat() As String
            Get
                Try 
                    Return CType(Me(Me.tableTAmlak.TTamiratColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TTamirat' in table 'TAmlak' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTAmlak.TTamiratColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TTransfer() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableTAmlak.TTransferColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TTransfer' in table 'TAmlak' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTAmlak.TTransferColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TPazireh() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableTAmlak.TPazirehColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TPazireh' in table 'TAmlak' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTAmlak.TPazirehColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSHshNull() As Boolean
            Return Me.IsNull(Me.tableTAmlak.SHshColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSHshNull()
            Me(Me.tableTAmlak.SHshColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsKasriNull() As Boolean
            Return Me.IsNull(Me.tableTAmlak.KasriColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetKasriNull()
            Me(Me.tableTAmlak.KasriColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsEzafatNull() As Boolean
            Return Me.IsNull(Me.tableTAmlak.EzafatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetEzafatNull()
            Me(Me.tableTAmlak.EzafatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNo_MelkNull() As Boolean
            Return Me.IsNull(Me.tableTAmlak.No_MelkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNo_MelkNull()
            Me(Me.tableTAmlak.No_MelkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMasahat_ZirBanaNull() As Boolean
            Return Me.IsNull(Me.tableTAmlak.Masahat_ZirBanaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMasahat_ZirBanaNull()
            Me(Me.tableTAmlak.Masahat_ZirBanaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTedad_vahedNull() As Boolean
            Return Me.IsNull(Me.tableTAmlak.Tedad_vahedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTedad_vahedNull()
            Me(Me.tableTAmlak.Tedad_vahedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMasahat_BanaNull() As Boolean
            Return Me.IsNull(Me.tableTAmlak.Masahat_BanaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMasahat_BanaNull()
            Me(Me.tableTAmlak.Masahat_BanaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsArzesh_MoamelatiNull() As Boolean
            Return Me.IsNull(Me.tableTAmlak.Arzesh_MoamelatiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetArzesh_MoamelatiNull()
            Me(Me.tableTAmlak.Arzesh_MoamelatiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTKasri_ZaminNull() As Boolean
            Return Me.IsNull(Me.tableTAmlak.TKasri_ZaminColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTKasri_ZaminNull()
            Me(Me.tableTAmlak.TKasri_ZaminColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTAzafe_tarakomNull() As Boolean
            Return Me.IsNull(Me.tableTAmlak.TAzafe_tarakomColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTAzafe_tarakomNull()
            Me(Me.tableTAmlak.TAzafe_tarakomColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTHagh_NezarehNull() As Boolean
            Return Me.IsNull(Me.tableTAmlak.THagh_NezarehColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTHagh_NezarehNull()
            Me(Me.tableTAmlak.THagh_NezarehColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTSodore_ParvanehAnbohNull() As Boolean
            Return Me.IsNull(Me.tableTAmlak.TSodore_ParvanehAnbohColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTSodore_ParvanehAnbohNull()
            Me(Me.tableTAmlak.TSodore_ParvanehAnbohColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTSodore_ParvanehVilaieNull() As Boolean
            Return Me.IsNull(Me.tableTAmlak.TSodore_ParvanehVilaieColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTSodore_ParvanehVilaieNull()
            Me(Me.tableTAmlak.TSodore_ParvanehVilaieColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTSath_ShahrNull() As Boolean
            Return Me.IsNull(Me.tableTAmlak.TSath_ShahrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTSath_ShahrNull()
            Me(Me.tableTAmlak.TSath_ShahrColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTNosaziNull() As Boolean
            Return Me.IsNull(Me.tableTAmlak.TNosaziColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTNosaziNull()
            Me(Me.tableTAmlak.TNosaziColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTTamiratNull() As Boolean
            Return Me.IsNull(Me.tableTAmlak.TTamiratColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTTamiratNull()
            Me(Me.tableTAmlak.TTamiratColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTTransferNull() As Boolean
            Return Me.IsNull(Me.tableTAmlak.TTransferColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTTransferNull()
            Me(Me.tableTAmlak.TTransferColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTPazirehNull() As Boolean
            Return Me.IsNull(Me.tableTAmlak.TPazirehColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTPazirehNull()
            Me(Me.tableTAmlak.TPazirehColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Tbl_Moshakhasat_Zamin1Row
        Inherits Global.System.Data.DataRow
        
        Private tableTbl_Moshakhasat_Zamin1 As Tbl_Moshakhasat_Zamin1DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTbl_Moshakhasat_Zamin1 = CType(Me.Table,Tbl_Moshakhasat_Zamin1DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Shomare_Shenasnameh() As String
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Moshakhasat_Zamin1.Shomare_ShenasnamehColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Shomare_Shenasnameh' in table 'Tbl_Moshakhasat_Zamin1' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Moshakhasat_Zamin1.Shomare_ShenasnamehColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Radif() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Moshakhasat_Zamin1.RadifColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Radif' in table 'Tbl_Moshakhasat_Zamin1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Moshakhasat_Zamin1.RadifColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Jahat() As String
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Moshakhasat_Zamin1.JahatColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Jahat' in table 'Tbl_Moshakhasat_Zamin1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Moshakhasat_Zamin1.JahatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tool_Zel() As Single
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Moshakhasat_Zamin1.Tool_ZelColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tool_Zel' in table 'Tbl_Moshakhasat_Zamin1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Moshakhasat_Zamin1.Tool_ZelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tool_Bar() As Single
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Moshakhasat_Zamin1.Tool_BarColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tool_Bar' in table 'Tbl_Moshakhasat_Zamin1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Moshakhasat_Zamin1.Tool_BarColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MaAbar_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Moshakhasat_Zamin1.MaAbar_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MaAbar_Name' in table 'Tbl_Moshakhasat_Zamin1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Moshakhasat_Zamin1.MaAbar_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MaAbar_Arz() As Single
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Moshakhasat_Zamin1.MaAbar_ArzColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MaAbar_Arz' in table 'Tbl_Moshakhasat_Zamin1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Moshakhasat_Zamin1.MaAbar_ArzColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MaAbar_radif() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Moshakhasat_Zamin1.MaAbar_radifColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MaAbar_radif' in table 'Tbl_Moshakhasat_Zamin1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Moshakhasat_Zamin1.MaAbar_radifColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property zavieh() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Moshakhasat_Zamin1.zaviehColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'zavieh' in table 'Tbl_Moshakhasat_Zamin1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Moshakhasat_Zamin1.zaviehColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Masahat_jebheh1() As Single
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Moshakhasat_Zamin1.Masahat_jebheh1Column),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Masahat_jebheh1' in table 'Tbl_Moshakhasat_Zamin1' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Moshakhasat_Zamin1.Masahat_jebheh1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Masahat_Jebheh2() As Single
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Moshakhasat_Zamin1.Masahat_Jebheh2Column),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Masahat_Jebheh2' in table 'Tbl_Moshakhasat_Zamin1' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Moshakhasat_Zamin1.Masahat_Jebheh2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsShomare_ShenasnamehNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Moshakhasat_Zamin1.Shomare_ShenasnamehColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetShomare_ShenasnamehNull()
            Me(Me.tableTbl_Moshakhasat_Zamin1.Shomare_ShenasnamehColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRadifNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Moshakhasat_Zamin1.RadifColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRadifNull()
            Me(Me.tableTbl_Moshakhasat_Zamin1.RadifColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsJahatNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Moshakhasat_Zamin1.JahatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetJahatNull()
            Me(Me.tableTbl_Moshakhasat_Zamin1.JahatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTool_ZelNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Moshakhasat_Zamin1.Tool_ZelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTool_ZelNull()
            Me(Me.tableTbl_Moshakhasat_Zamin1.Tool_ZelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTool_BarNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Moshakhasat_Zamin1.Tool_BarColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTool_BarNull()
            Me(Me.tableTbl_Moshakhasat_Zamin1.Tool_BarColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMaAbar_NameNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Moshakhasat_Zamin1.MaAbar_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMaAbar_NameNull()
            Me(Me.tableTbl_Moshakhasat_Zamin1.MaAbar_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMaAbar_ArzNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Moshakhasat_Zamin1.MaAbar_ArzColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMaAbar_ArzNull()
            Me(Me.tableTbl_Moshakhasat_Zamin1.MaAbar_ArzColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMaAbar_radifNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Moshakhasat_Zamin1.MaAbar_radifColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMaAbar_radifNull()
            Me(Me.tableTbl_Moshakhasat_Zamin1.MaAbar_radifColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IszaviehNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Moshakhasat_Zamin1.zaviehColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetzaviehNull()
            Me(Me.tableTbl_Moshakhasat_Zamin1.zaviehColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMasahat_jebheh1Null() As Boolean
            Return Me.IsNull(Me.tableTbl_Moshakhasat_Zamin1.Masahat_jebheh1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMasahat_jebheh1Null()
            Me(Me.tableTbl_Moshakhasat_Zamin1.Masahat_jebheh1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMasahat_Jebheh2Null() As Boolean
            Return Me.IsNull(Me.tableTbl_Moshakhasat_Zamin1.Masahat_Jebheh2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMasahat_Jebheh2Null()
            Me(Me.tableTbl_Moshakhasat_Zamin1.Masahat_Jebheh2Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Tbl_Moshakhasat_Zamin2Row
        Inherits Global.System.Data.DataRow
        
        Private tableTbl_Moshakhasat_Zamin2 As Tbl_Moshakhasat_Zamin2DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTbl_Moshakhasat_Zamin2 = CType(Me.Table,Tbl_Moshakhasat_Zamin2DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Shomare_Shenasnameh() As String
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Moshakhasat_Zamin2.Shomare_ShenasnamehColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Shomare_Shenasnameh' in table 'Tbl_Moshakhasat_Zamin2' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Moshakhasat_Zamin2.Shomare_ShenasnamehColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Radif() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Moshakhasat_Zamin2.RadifColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Radif' in table 'Tbl_Moshakhasat_Zamin2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Moshakhasat_Zamin2.RadifColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Jahat() As String
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Moshakhasat_Zamin2.JahatColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Jahat' in table 'Tbl_Moshakhasat_Zamin2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Moshakhasat_Zamin2.JahatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tool_Zel() As Single
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Moshakhasat_Zamin2.Tool_ZelColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tool_Zel' in table 'Tbl_Moshakhasat_Zamin2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Moshakhasat_Zamin2.Tool_ZelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tool_Bar() As Single
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Moshakhasat_Zamin2.Tool_BarColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tool_Bar' in table 'Tbl_Moshakhasat_Zamin2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Moshakhasat_Zamin2.Tool_BarColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MaAbar_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Moshakhasat_Zamin2.MaAbar_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MaAbar_Name' in table 'Tbl_Moshakhasat_Zamin2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Moshakhasat_Zamin2.MaAbar_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MaAbar_Arz() As Single
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Moshakhasat_Zamin2.MaAbar_ArzColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MaAbar_Arz' in table 'Tbl_Moshakhasat_Zamin2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Moshakhasat_Zamin2.MaAbar_ArzColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MaAbar_radif() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Moshakhasat_Zamin2.MaAbar_radifColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MaAbar_radif' in table 'Tbl_Moshakhasat_Zamin2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Moshakhasat_Zamin2.MaAbar_radifColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property zavieh() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Moshakhasat_Zamin2.zaviehColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'zavieh' in table 'Tbl_Moshakhasat_Zamin2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Moshakhasat_Zamin2.zaviehColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Masahat_jebheh1() As Single
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Moshakhasat_Zamin2.Masahat_jebheh1Column),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Masahat_jebheh1' in table 'Tbl_Moshakhasat_Zamin2' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Moshakhasat_Zamin2.Masahat_jebheh1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Masahat_Jebheh2() As Single
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Moshakhasat_Zamin2.Masahat_Jebheh2Column),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Masahat_Jebheh2' in table 'Tbl_Moshakhasat_Zamin2' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Moshakhasat_Zamin2.Masahat_Jebheh2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsShomare_ShenasnamehNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Moshakhasat_Zamin2.Shomare_ShenasnamehColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetShomare_ShenasnamehNull()
            Me(Me.tableTbl_Moshakhasat_Zamin2.Shomare_ShenasnamehColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRadifNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Moshakhasat_Zamin2.RadifColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRadifNull()
            Me(Me.tableTbl_Moshakhasat_Zamin2.RadifColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsJahatNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Moshakhasat_Zamin2.JahatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetJahatNull()
            Me(Me.tableTbl_Moshakhasat_Zamin2.JahatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTool_ZelNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Moshakhasat_Zamin2.Tool_ZelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTool_ZelNull()
            Me(Me.tableTbl_Moshakhasat_Zamin2.Tool_ZelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTool_BarNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Moshakhasat_Zamin2.Tool_BarColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTool_BarNull()
            Me(Me.tableTbl_Moshakhasat_Zamin2.Tool_BarColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMaAbar_NameNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Moshakhasat_Zamin2.MaAbar_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMaAbar_NameNull()
            Me(Me.tableTbl_Moshakhasat_Zamin2.MaAbar_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMaAbar_ArzNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Moshakhasat_Zamin2.MaAbar_ArzColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMaAbar_ArzNull()
            Me(Me.tableTbl_Moshakhasat_Zamin2.MaAbar_ArzColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMaAbar_radifNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Moshakhasat_Zamin2.MaAbar_radifColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMaAbar_radifNull()
            Me(Me.tableTbl_Moshakhasat_Zamin2.MaAbar_radifColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IszaviehNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Moshakhasat_Zamin2.zaviehColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetzaviehNull()
            Me(Me.tableTbl_Moshakhasat_Zamin2.zaviehColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMasahat_jebheh1Null() As Boolean
            Return Me.IsNull(Me.tableTbl_Moshakhasat_Zamin2.Masahat_jebheh1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMasahat_jebheh1Null()
            Me(Me.tableTbl_Moshakhasat_Zamin2.Masahat_jebheh1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMasahat_Jebheh2Null() As Boolean
            Return Me.IsNull(Me.tableTbl_Moshakhasat_Zamin2.Masahat_Jebheh2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMasahat_Jebheh2Null()
            Me(Me.tableTbl_Moshakhasat_Zamin2.Masahat_Jebheh2Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Select_Tbl_Moshakhasat_ZaminRow
        Inherits Global.System.Data.DataRow
        
        Private tableSelect_Tbl_Moshakhasat_Zamin As Select_Tbl_Moshakhasat_ZaminDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSelect_Tbl_Moshakhasat_Zamin = CType(Me.Table,Select_Tbl_Moshakhasat_ZaminDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Shomare_Shenasnameh() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Moshakhasat_Zamin.Shomare_ShenasnamehColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Shomare_Shenasnameh' in table 'Select_Tbl_Moshakhasat_Zamin"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Moshakhasat_Zamin.Shomare_ShenasnamehColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Radif() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Moshakhasat_Zamin.RadifColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Radif' in table 'Select_Tbl_Moshakhasat_Zamin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Moshakhasat_Zamin.RadifColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property jahat_value() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Moshakhasat_Zamin.jahat_valueColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'jahat_value' in table 'Select_Tbl_Moshakhasat_Zamin' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Moshakhasat_Zamin.jahat_valueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property jahat() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Moshakhasat_Zamin.jahatColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'jahat' in table 'Select_Tbl_Moshakhasat_Zamin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Moshakhasat_Zamin.jahatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tool_Zel() As Single
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Moshakhasat_Zamin.Tool_ZelColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tool_Zel' in table 'Select_Tbl_Moshakhasat_Zamin' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Moshakhasat_Zamin.Tool_ZelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tool_Bar() As Single
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Moshakhasat_Zamin.Tool_BarColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tool_Bar' in table 'Select_Tbl_Moshakhasat_Zamin' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Moshakhasat_Zamin.Tool_BarColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MaAbar_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Moshakhasat_Zamin.MaAbar_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MaAbar_Name' in table 'Select_Tbl_Moshakhasat_Zamin' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Moshakhasat_Zamin.MaAbar_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MaAbar_Arz() As Single
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Moshakhasat_Zamin.MaAbar_ArzColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MaAbar_Arz' in table 'Select_Tbl_Moshakhasat_Zamin' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Moshakhasat_Zamin.MaAbar_ArzColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MaAbar_radif() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Moshakhasat_Zamin.MaAbar_radifColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MaAbar_radif' in table 'Select_Tbl_Moshakhasat_Zamin' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Moshakhasat_Zamin.MaAbar_radifColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property zavieh() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Moshakhasat_Zamin.zaviehColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'zavieh' in table 'Select_Tbl_Moshakhasat_Zamin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Moshakhasat_Zamin.zaviehColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Masahat_jebheh1() As Single
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Moshakhasat_Zamin.Masahat_jebheh1Column),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Masahat_jebheh1' in table 'Select_Tbl_Moshakhasat_Zamin' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Moshakhasat_Zamin.Masahat_jebheh1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Masahat_Jebheh2() As Single
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Moshakhasat_Zamin.Masahat_Jebheh2Column),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Masahat_Jebheh2' in table 'Select_Tbl_Moshakhasat_Zamin' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Moshakhasat_Zamin.Masahat_Jebheh2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsShomare_ShenasnamehNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Moshakhasat_Zamin.Shomare_ShenasnamehColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetShomare_ShenasnamehNull()
            Me(Me.tableSelect_Tbl_Moshakhasat_Zamin.Shomare_ShenasnamehColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRadifNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Moshakhasat_Zamin.RadifColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRadifNull()
            Me(Me.tableSelect_Tbl_Moshakhasat_Zamin.RadifColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isjahat_valueNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Moshakhasat_Zamin.jahat_valueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setjahat_valueNull()
            Me(Me.tableSelect_Tbl_Moshakhasat_Zamin.jahat_valueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsjahatNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Moshakhasat_Zamin.jahatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetjahatNull()
            Me(Me.tableSelect_Tbl_Moshakhasat_Zamin.jahatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTool_ZelNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Moshakhasat_Zamin.Tool_ZelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTool_ZelNull()
            Me(Me.tableSelect_Tbl_Moshakhasat_Zamin.Tool_ZelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTool_BarNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Moshakhasat_Zamin.Tool_BarColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTool_BarNull()
            Me(Me.tableSelect_Tbl_Moshakhasat_Zamin.Tool_BarColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMaAbar_NameNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Moshakhasat_Zamin.MaAbar_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMaAbar_NameNull()
            Me(Me.tableSelect_Tbl_Moshakhasat_Zamin.MaAbar_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMaAbar_ArzNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Moshakhasat_Zamin.MaAbar_ArzColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMaAbar_ArzNull()
            Me(Me.tableSelect_Tbl_Moshakhasat_Zamin.MaAbar_ArzColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMaAbar_radifNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Moshakhasat_Zamin.MaAbar_radifColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMaAbar_radifNull()
            Me(Me.tableSelect_Tbl_Moshakhasat_Zamin.MaAbar_radifColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IszaviehNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Moshakhasat_Zamin.zaviehColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetzaviehNull()
            Me(Me.tableSelect_Tbl_Moshakhasat_Zamin.zaviehColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMasahat_jebheh1Null() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Moshakhasat_Zamin.Masahat_jebheh1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMasahat_jebheh1Null()
            Me(Me.tableSelect_Tbl_Moshakhasat_Zamin.Masahat_jebheh1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMasahat_Jebheh2Null() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Moshakhasat_Zamin.Masahat_Jebheh2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMasahat_Jebheh2Null()
            Me(Me.tableSelect_Tbl_Moshakhasat_Zamin.Masahat_Jebheh2Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class FSelect_Tbl_Moshakhasat_ZaminRow
        Inherits Global.System.Data.DataRow
        
        Private tableFSelect_Tbl_Moshakhasat_Zamin As FSelect_Tbl_Moshakhasat_ZaminDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableFSelect_Tbl_Moshakhasat_Zamin = CType(Me.Table,FSelect_Tbl_Moshakhasat_ZaminDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Shomare_Shenasnameh() As String
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_Tbl_Moshakhasat_Zamin.Shomare_ShenasnamehColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Shomare_Shenasnameh' in table 'FSelect_Tbl_Moshakhasat_Zami"& _ 
                            "n' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_Tbl_Moshakhasat_Zamin.Shomare_ShenasnamehColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Radif() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_Tbl_Moshakhasat_Zamin.RadifColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Radif' in table 'FSelect_Tbl_Moshakhasat_Zamin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_Tbl_Moshakhasat_Zamin.RadifColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Jahat() As String
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_Tbl_Moshakhasat_Zamin.JahatColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Jahat' in table 'FSelect_Tbl_Moshakhasat_Zamin' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_Tbl_Moshakhasat_Zamin.JahatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Jahat2() As String
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_Tbl_Moshakhasat_Zamin.Jahat2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Jahat2' in table 'FSelect_Tbl_Moshakhasat_Zamin' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_Tbl_Moshakhasat_Zamin.Jahat2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tool_Zel() As Single
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_Tbl_Moshakhasat_Zamin.Tool_ZelColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tool_Zel' in table 'FSelect_Tbl_Moshakhasat_Zamin' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_Tbl_Moshakhasat_Zamin.Tool_ZelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tool_Bar() As Single
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_Tbl_Moshakhasat_Zamin.Tool_BarColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tool_Bar' in table 'FSelect_Tbl_Moshakhasat_Zamin' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_Tbl_Moshakhasat_Zamin.Tool_BarColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MaAbar_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_Tbl_Moshakhasat_Zamin.MaAbar_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MaAbar_Name' in table 'FSelect_Tbl_Moshakhasat_Zamin' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_Tbl_Moshakhasat_Zamin.MaAbar_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MaAbar_Arz() As Single
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_Tbl_Moshakhasat_Zamin.MaAbar_ArzColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MaAbar_Arz' in table 'FSelect_Tbl_Moshakhasat_Zamin' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_Tbl_Moshakhasat_Zamin.MaAbar_ArzColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MaAbar_radif() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_Tbl_Moshakhasat_Zamin.MaAbar_radifColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MaAbar_radif' in table 'FSelect_Tbl_Moshakhasat_Zamin' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_Tbl_Moshakhasat_Zamin.MaAbar_radifColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property zavieh() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_Tbl_Moshakhasat_Zamin.zaviehColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'zavieh' in table 'FSelect_Tbl_Moshakhasat_Zamin' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_Tbl_Moshakhasat_Zamin.zaviehColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Masahat_jebheh1() As Single
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_Tbl_Moshakhasat_Zamin.Masahat_jebheh1Column),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Masahat_jebheh1' in table 'FSelect_Tbl_Moshakhasat_Zamin' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_Tbl_Moshakhasat_Zamin.Masahat_jebheh1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Masahat_Jebheh2() As Single
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_Tbl_Moshakhasat_Zamin.Masahat_Jebheh2Column),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Masahat_Jebheh2' in table 'FSelect_Tbl_Moshakhasat_Zamin' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_Tbl_Moshakhasat_Zamin.Masahat_Jebheh2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsShomare_ShenasnamehNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_Tbl_Moshakhasat_Zamin.Shomare_ShenasnamehColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetShomare_ShenasnamehNull()
            Me(Me.tableFSelect_Tbl_Moshakhasat_Zamin.Shomare_ShenasnamehColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRadifNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_Tbl_Moshakhasat_Zamin.RadifColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRadifNull()
            Me(Me.tableFSelect_Tbl_Moshakhasat_Zamin.RadifColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsJahatNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_Tbl_Moshakhasat_Zamin.JahatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetJahatNull()
            Me(Me.tableFSelect_Tbl_Moshakhasat_Zamin.JahatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsJahat2Null() As Boolean
            Return Me.IsNull(Me.tableFSelect_Tbl_Moshakhasat_Zamin.Jahat2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetJahat2Null()
            Me(Me.tableFSelect_Tbl_Moshakhasat_Zamin.Jahat2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTool_ZelNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_Tbl_Moshakhasat_Zamin.Tool_ZelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTool_ZelNull()
            Me(Me.tableFSelect_Tbl_Moshakhasat_Zamin.Tool_ZelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTool_BarNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_Tbl_Moshakhasat_Zamin.Tool_BarColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTool_BarNull()
            Me(Me.tableFSelect_Tbl_Moshakhasat_Zamin.Tool_BarColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMaAbar_NameNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_Tbl_Moshakhasat_Zamin.MaAbar_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMaAbar_NameNull()
            Me(Me.tableFSelect_Tbl_Moshakhasat_Zamin.MaAbar_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMaAbar_ArzNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_Tbl_Moshakhasat_Zamin.MaAbar_ArzColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMaAbar_ArzNull()
            Me(Me.tableFSelect_Tbl_Moshakhasat_Zamin.MaAbar_ArzColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMaAbar_radifNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_Tbl_Moshakhasat_Zamin.MaAbar_radifColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMaAbar_radifNull()
            Me(Me.tableFSelect_Tbl_Moshakhasat_Zamin.MaAbar_radifColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IszaviehNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_Tbl_Moshakhasat_Zamin.zaviehColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetzaviehNull()
            Me(Me.tableFSelect_Tbl_Moshakhasat_Zamin.zaviehColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMasahat_jebheh1Null() As Boolean
            Return Me.IsNull(Me.tableFSelect_Tbl_Moshakhasat_Zamin.Masahat_jebheh1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMasahat_jebheh1Null()
            Me(Me.tableFSelect_Tbl_Moshakhasat_Zamin.Masahat_jebheh1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMasahat_Jebheh2Null() As Boolean
            Return Me.IsNull(Me.tableFSelect_Tbl_Moshakhasat_Zamin.Masahat_Jebheh2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMasahat_Jebheh2Null()
            Me(Me.tableFSelect_Tbl_Moshakhasat_Zamin.Masahat_Jebheh2Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Select_Tbl_No_EstefadehRow
        Inherits Global.System.Data.DataRow
        
        Private tableSelect_Tbl_No_Estefadeh As Select_Tbl_No_EstefadehDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSelect_Tbl_No_Estefadeh = CType(Me.Table,Select_Tbl_No_EstefadehDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Shomare_Shenasnameh() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_No_Estefadeh.Shomare_ShenasnamehColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Shomare_Shenasnameh' in table 'Select_Tbl_No_Estefadeh' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_No_Estefadeh.Shomare_ShenasnamehColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property C350() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_No_Estefadeh.C350Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C350' in table 'Select_Tbl_No_Estefadeh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_No_Estefadeh.C350Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property C351() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_No_Estefadeh.C351Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C351' in table 'Select_Tbl_No_Estefadeh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_No_Estefadeh.C351Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property C352() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_No_Estefadeh.C352Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C352' in table 'Select_Tbl_No_Estefadeh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_No_Estefadeh.C352Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property C353() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_No_Estefadeh.C353Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C353' in table 'Select_Tbl_No_Estefadeh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_No_Estefadeh.C353Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property C354() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_No_Estefadeh.C354Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C354' in table 'Select_Tbl_No_Estefadeh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_No_Estefadeh.C354Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property C355() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_No_Estefadeh.C355Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C355' in table 'Select_Tbl_No_Estefadeh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_No_Estefadeh.C355Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property C356() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_No_Estefadeh.C356Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C356' in table 'Select_Tbl_No_Estefadeh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_No_Estefadeh.C356Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property C357() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_No_Estefadeh.C357Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C357' in table 'Select_Tbl_No_Estefadeh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_No_Estefadeh.C357Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property C358() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_No_Estefadeh.C358Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C358' in table 'Select_Tbl_No_Estefadeh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_No_Estefadeh.C358Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property C359() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_No_Estefadeh.C359Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C359' in table 'Select_Tbl_No_Estefadeh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_No_Estefadeh.C359Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property C360() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_No_Estefadeh.C360Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C360' in table 'Select_Tbl_No_Estefadeh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_No_Estefadeh.C360Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property C361() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_No_Estefadeh.C361Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C361' in table 'Select_Tbl_No_Estefadeh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_No_Estefadeh.C361Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property C362() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_No_Estefadeh.C362Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C362' in table 'Select_Tbl_No_Estefadeh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_No_Estefadeh.C362Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property C363() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_No_Estefadeh.C363Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C363' in table 'Select_Tbl_No_Estefadeh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_No_Estefadeh.C363Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property C364() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_No_Estefadeh.C364Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C364' in table 'Select_Tbl_No_Estefadeh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_No_Estefadeh.C364Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property C365() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_No_Estefadeh.C365Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C365' in table 'Select_Tbl_No_Estefadeh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_No_Estefadeh.C365Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property C366() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_No_Estefadeh.C366Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C366' in table 'Select_Tbl_No_Estefadeh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_No_Estefadeh.C366Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property C367() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_No_Estefadeh.C367Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C367' in table 'Select_Tbl_No_Estefadeh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_No_Estefadeh.C367Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property C368() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_No_Estefadeh.C368Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C368' in table 'Select_Tbl_No_Estefadeh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_No_Estefadeh.C368Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property C369() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_No_Estefadeh.C369Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C369' in table 'Select_Tbl_No_Estefadeh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_No_Estefadeh.C369Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property C370() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_No_Estefadeh.C370Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C370' in table 'Select_Tbl_No_Estefadeh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_No_Estefadeh.C370Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property C371() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_No_Estefadeh.C371Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C371' in table 'Select_Tbl_No_Estefadeh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_No_Estefadeh.C371Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property C372() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_No_Estefadeh.C372Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C372' in table 'Select_Tbl_No_Estefadeh' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_No_Estefadeh.C372Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsShomare_ShenasnamehNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_No_Estefadeh.Shomare_ShenasnamehColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetShomare_ShenasnamehNull()
            Me(Me.tableSelect_Tbl_No_Estefadeh.Shomare_ShenasnamehColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsC350Null() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_No_Estefadeh.C350Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetC350Null()
            Me(Me.tableSelect_Tbl_No_Estefadeh.C350Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsC351Null() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_No_Estefadeh.C351Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetC351Null()
            Me(Me.tableSelect_Tbl_No_Estefadeh.C351Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsC352Null() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_No_Estefadeh.C352Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetC352Null()
            Me(Me.tableSelect_Tbl_No_Estefadeh.C352Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsC353Null() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_No_Estefadeh.C353Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetC353Null()
            Me(Me.tableSelect_Tbl_No_Estefadeh.C353Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsC354Null() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_No_Estefadeh.C354Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetC354Null()
            Me(Me.tableSelect_Tbl_No_Estefadeh.C354Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsC355Null() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_No_Estefadeh.C355Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetC355Null()
            Me(Me.tableSelect_Tbl_No_Estefadeh.C355Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsC356Null() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_No_Estefadeh.C356Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetC356Null()
            Me(Me.tableSelect_Tbl_No_Estefadeh.C356Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsC357Null() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_No_Estefadeh.C357Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetC357Null()
            Me(Me.tableSelect_Tbl_No_Estefadeh.C357Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsC358Null() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_No_Estefadeh.C358Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetC358Null()
            Me(Me.tableSelect_Tbl_No_Estefadeh.C358Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsC359Null() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_No_Estefadeh.C359Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetC359Null()
            Me(Me.tableSelect_Tbl_No_Estefadeh.C359Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsC360Null() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_No_Estefadeh.C360Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetC360Null()
            Me(Me.tableSelect_Tbl_No_Estefadeh.C360Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsC361Null() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_No_Estefadeh.C361Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetC361Null()
            Me(Me.tableSelect_Tbl_No_Estefadeh.C361Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsC362Null() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_No_Estefadeh.C362Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetC362Null()
            Me(Me.tableSelect_Tbl_No_Estefadeh.C362Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsC363Null() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_No_Estefadeh.C363Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetC363Null()
            Me(Me.tableSelect_Tbl_No_Estefadeh.C363Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsC364Null() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_No_Estefadeh.C364Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetC364Null()
            Me(Me.tableSelect_Tbl_No_Estefadeh.C364Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsC365Null() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_No_Estefadeh.C365Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetC365Null()
            Me(Me.tableSelect_Tbl_No_Estefadeh.C365Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsC366Null() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_No_Estefadeh.C366Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetC366Null()
            Me(Me.tableSelect_Tbl_No_Estefadeh.C366Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsC367Null() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_No_Estefadeh.C367Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetC367Null()
            Me(Me.tableSelect_Tbl_No_Estefadeh.C367Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsC368Null() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_No_Estefadeh.C368Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetC368Null()
            Me(Me.tableSelect_Tbl_No_Estefadeh.C368Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsC369Null() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_No_Estefadeh.C369Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetC369Null()
            Me(Me.tableSelect_Tbl_No_Estefadeh.C369Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsC370Null() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_No_Estefadeh.C370Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetC370Null()
            Me(Me.tableSelect_Tbl_No_Estefadeh.C370Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsC371Null() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_No_Estefadeh.C371Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetC371Null()
            Me(Me.tableSelect_Tbl_No_Estefadeh.C371Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsC372Null() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_No_Estefadeh.C372Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetC372Null()
            Me(Me.tableSelect_Tbl_No_Estefadeh.C372Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Select_TBL_Amlak_MostaghelatRow
        Inherits Global.System.Data.DataRow
        
        Private tableSelect_TBL_Amlak_Mostaghelat As Select_TBL_Amlak_MostaghelatDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSelect_TBL_Amlak_Mostaghelat = CType(Me.Table,Select_TBL_Amlak_MostaghelatDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tarikh_Malekiat() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_TBL_Amlak_Mostaghelat.Tarikh_MalekiatColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tarikh_Malekiat' in table 'Select_TBL_Amlak_Mostaghelat' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_TBL_Amlak_Mostaghelat.Tarikh_MalekiatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tarikh_PMalekiat() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_TBL_Amlak_Mostaghelat.Tarikh_PMalekiatColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tarikh_PMalekiat' in table 'Select_TBL_Amlak_Mostaghelat' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_TBL_Amlak_Mostaghelat.Tarikh_PMalekiatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Shomare_Shenasnameh() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_TBL_Amlak_Mostaghelat.Shomare_ShenasnamehColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Shomare_Shenasnameh' in table 'Select_TBL_Amlak_Mostaghelat"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_TBL_Amlak_Mostaghelat.Shomare_ShenasnamehColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property N_Mashhoor() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_TBL_Amlak_Mostaghelat.N_MashhoorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'N_Mashhoor' in table 'Select_TBL_Amlak_Mostaghelat' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_TBL_Amlak_Mostaghelat.N_MashhoorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property N_Khiaban() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_TBL_Amlak_Mostaghelat.N_KhiabanColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'N_Khiaban' in table 'Select_TBL_Amlak_Mostaghelat' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_TBL_Amlak_Mostaghelat.N_KhiabanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property N_Meydan() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_TBL_Amlak_Mostaghelat.N_MeydanColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'N_Meydan' in table 'Select_TBL_Amlak_Mostaghelat' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_TBL_Amlak_Mostaghelat.N_MeydanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property N_Bazar() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_TBL_Amlak_Mostaghelat.N_BazarColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'N_Bazar' in table 'Select_TBL_Amlak_Mostaghelat' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_TBL_Amlak_Mostaghelat.N_BazarColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property N_Pasaj() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_TBL_Amlak_Mostaghelat.N_PasajColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'N_Pasaj' in table 'Select_TBL_Amlak_Mostaghelat' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_TBL_Amlak_Mostaghelat.N_PasajColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property N_Koocheh() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_TBL_Amlak_Mostaghelat.N_KoochehColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'N_Koocheh' in table 'Select_TBL_Amlak_Mostaghelat' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_TBL_Amlak_Mostaghelat.N_KoochehColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property N_BonBast() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_TBL_Amlak_Mostaghelat.N_BonBastColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'N_BonBast' in table 'Select_TBL_Amlak_Mostaghelat' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_TBL_Amlak_Mostaghelat.N_BonBastColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property N_PelakAbi() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_TBL_Amlak_Mostaghelat.N_PelakAbiColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'N_PelakAbi' in table 'Select_TBL_Amlak_Mostaghelat' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_TBL_Amlak_Mostaghelat.N_PelakAbiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property N_Name_Block() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_TBL_Amlak_Mostaghelat.N_Name_BlockColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'N_Name_Block' in table 'Select_TBL_Amlak_Mostaghelat' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_TBL_Amlak_Mostaghelat.N_Name_BlockColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property N_Tabagheh() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_TBL_Amlak_Mostaghelat.N_TabaghehColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'N_Tabagheh' in table 'Select_TBL_Amlak_Mostaghelat' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_TBL_Amlak_Mostaghelat.N_TabaghehColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property N_Code_Posti() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_TBL_Amlak_Mostaghelat.N_Code_PostiColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'N_Code_Posti' in table 'Select_TBL_Amlak_Mostaghelat' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_TBL_Amlak_Mostaghelat.N_Code_PostiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property N_Radif_MGhabli() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_TBL_Amlak_Mostaghelat.N_Radif_MGhabliColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'N_Radif_MGhabli' in table 'Select_TBL_Amlak_Mostaghelat' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_TBL_Amlak_Mostaghelat.N_Radif_MGhabliColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Masahat_Zamin() As Single
            Get
                Try 
                    Return CType(Me(Me.tableSelect_TBL_Amlak_Mostaghelat.Masahat_ZaminColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Masahat_Zamin' in table 'Select_TBL_Amlak_Mostaghelat' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_TBL_Amlak_Mostaghelat.Masahat_ZaminColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Masahat_Jebheh() As Single
            Get
                Try 
                    Return CType(Me(Me.tableSelect_TBL_Amlak_Mostaghelat.Masahat_JebhehColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Masahat_Jebheh' in table 'Select_TBL_Amlak_Mostaghelat' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_TBL_Amlak_Mostaghelat.Masahat_JebhehColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Masahat_PJebheh() As Single
            Get
                Try 
                    Return CType(Me(Me.tableSelect_TBL_Amlak_Mostaghelat.Masahat_PJebhehColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Masahat_PJebheh' in table 'Select_TBL_Amlak_Mostaghelat' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_TBL_Amlak_Mostaghelat.Masahat_PJebhehColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tedad_Zel() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableSelect_TBL_Amlak_Mostaghelat.Tedad_ZelColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tedad_Zel' in table 'Select_TBL_Amlak_Mostaghelat' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_TBL_Amlak_Mostaghelat.Tedad_ZelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Bar_Tedad() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableSelect_TBL_Amlak_Mostaghelat.Bar_TedadColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bar_Tedad' in table 'Select_TBL_Amlak_Mostaghelat' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_TBL_Amlak_Mostaghelat.Bar_TedadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Bar_Onvan() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_TBL_Amlak_Mostaghelat.Bar_OnvanColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bar_Onvan' in table 'Select_TBL_Amlak_Mostaghelat' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_TBL_Amlak_Mostaghelat.Bar_OnvanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tedad_Malek() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableSelect_TBL_Amlak_Mostaghelat.Tedad_MalekColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tedad_Malek' in table 'Select_TBL_Amlak_Mostaghelat' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_TBL_Amlak_Mostaghelat.Tedad_MalekColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property No_Moshakhasat() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_TBL_Amlak_Mostaghelat.No_MoshakhasatColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'No_Moshakhasat' in table 'Select_TBL_Amlak_Mostaghelat' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_TBL_Amlak_Mostaghelat.No_MoshakhasatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tedad_Sakhteman() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSelect_TBL_Amlak_Mostaghelat.Tedad_SakhtemanColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tedad_Sakhteman' in table 'Select_TBL_Amlak_Mostaghelat' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_TBL_Amlak_Mostaghelat.Tedad_SakhtemanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tedad_Aparteman() As Single
            Get
                Try 
                    Return CType(Me(Me.tableSelect_TBL_Amlak_Mostaghelat.Tedad_ApartemanColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tedad_Aparteman' in table 'Select_TBL_Amlak_Mostaghelat' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_TBL_Amlak_Mostaghelat.Tedad_ApartemanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tedad_Vahed_Kasb() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSelect_TBL_Amlak_Mostaghelat.Tedad_Vahed_KasbColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tedad_Vahed_Kasb' in table 'Select_TBL_Amlak_Mostaghelat' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_TBL_Amlak_Mostaghelat.Tedad_Vahed_KasbColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Masahat_Melk() As Single
            Get
                Try 
                    Return CType(Me(Me.tableSelect_TBL_Amlak_Mostaghelat.Masahat_MelkColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Masahat_Melk' in table 'Select_TBL_Amlak_Mostaghelat' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_TBL_Amlak_Mostaghelat.Masahat_MelkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Metr_Dar() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_TBL_Amlak_Mostaghelat.Metr_DarColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Metr_Dar' in table 'Select_TBL_Amlak_Mostaghelat' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_TBL_Amlak_Mostaghelat.Metr_DarColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Rah_Mostaghel() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableSelect_TBL_Amlak_Mostaghelat.Rah_MostaghelColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Rah_Mostaghel' in table 'Select_TBL_Amlak_Mostaghelat' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_TBL_Amlak_Mostaghelat.Rah_MostaghelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tedad_Vahed() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSelect_TBL_Amlak_Mostaghelat.Tedad_VahedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tedad_Vahed' in table 'Select_TBL_Amlak_Mostaghelat' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_TBL_Amlak_Mostaghelat.Tedad_VahedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property No_Malekiyat() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_TBL_Amlak_Mostaghelat.No_MalekiyatColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'No_Malekiyat' in table 'Select_TBL_Amlak_Mostaghelat' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_TBL_Amlak_Mostaghelat.No_MalekiyatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Name_Malek() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_TBL_Amlak_Mostaghelat.Name_MalekColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Name_Malek' in table 'Select_TBL_Amlak_Mostaghelat' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_TBL_Amlak_Mostaghelat.Name_MalekColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Hozoor() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableSelect_TBL_Amlak_Mostaghelat.HozoorColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Hozoor' in table 'Select_TBL_Amlak_Mostaghelat' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_TBL_Amlak_Mostaghelat.HozoorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTarikh_MalekiatNull() As Boolean
            Return Me.IsNull(Me.tableSelect_TBL_Amlak_Mostaghelat.Tarikh_MalekiatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTarikh_MalekiatNull()
            Me(Me.tableSelect_TBL_Amlak_Mostaghelat.Tarikh_MalekiatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTarikh_PMalekiatNull() As Boolean
            Return Me.IsNull(Me.tableSelect_TBL_Amlak_Mostaghelat.Tarikh_PMalekiatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTarikh_PMalekiatNull()
            Me(Me.tableSelect_TBL_Amlak_Mostaghelat.Tarikh_PMalekiatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsShomare_ShenasnamehNull() As Boolean
            Return Me.IsNull(Me.tableSelect_TBL_Amlak_Mostaghelat.Shomare_ShenasnamehColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetShomare_ShenasnamehNull()
            Me(Me.tableSelect_TBL_Amlak_Mostaghelat.Shomare_ShenasnamehColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsN_MashhoorNull() As Boolean
            Return Me.IsNull(Me.tableSelect_TBL_Amlak_Mostaghelat.N_MashhoorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetN_MashhoorNull()
            Me(Me.tableSelect_TBL_Amlak_Mostaghelat.N_MashhoorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsN_KhiabanNull() As Boolean
            Return Me.IsNull(Me.tableSelect_TBL_Amlak_Mostaghelat.N_KhiabanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetN_KhiabanNull()
            Me(Me.tableSelect_TBL_Amlak_Mostaghelat.N_KhiabanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsN_MeydanNull() As Boolean
            Return Me.IsNull(Me.tableSelect_TBL_Amlak_Mostaghelat.N_MeydanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetN_MeydanNull()
            Me(Me.tableSelect_TBL_Amlak_Mostaghelat.N_MeydanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsN_BazarNull() As Boolean
            Return Me.IsNull(Me.tableSelect_TBL_Amlak_Mostaghelat.N_BazarColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetN_BazarNull()
            Me(Me.tableSelect_TBL_Amlak_Mostaghelat.N_BazarColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsN_PasajNull() As Boolean
            Return Me.IsNull(Me.tableSelect_TBL_Amlak_Mostaghelat.N_PasajColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetN_PasajNull()
            Me(Me.tableSelect_TBL_Amlak_Mostaghelat.N_PasajColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsN_KoochehNull() As Boolean
            Return Me.IsNull(Me.tableSelect_TBL_Amlak_Mostaghelat.N_KoochehColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetN_KoochehNull()
            Me(Me.tableSelect_TBL_Amlak_Mostaghelat.N_KoochehColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsN_BonBastNull() As Boolean
            Return Me.IsNull(Me.tableSelect_TBL_Amlak_Mostaghelat.N_BonBastColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetN_BonBastNull()
            Me(Me.tableSelect_TBL_Amlak_Mostaghelat.N_BonBastColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsN_PelakAbiNull() As Boolean
            Return Me.IsNull(Me.tableSelect_TBL_Amlak_Mostaghelat.N_PelakAbiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetN_PelakAbiNull()
            Me(Me.tableSelect_TBL_Amlak_Mostaghelat.N_PelakAbiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsN_Name_BlockNull() As Boolean
            Return Me.IsNull(Me.tableSelect_TBL_Amlak_Mostaghelat.N_Name_BlockColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetN_Name_BlockNull()
            Me(Me.tableSelect_TBL_Amlak_Mostaghelat.N_Name_BlockColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsN_TabaghehNull() As Boolean
            Return Me.IsNull(Me.tableSelect_TBL_Amlak_Mostaghelat.N_TabaghehColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetN_TabaghehNull()
            Me(Me.tableSelect_TBL_Amlak_Mostaghelat.N_TabaghehColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsN_Code_PostiNull() As Boolean
            Return Me.IsNull(Me.tableSelect_TBL_Amlak_Mostaghelat.N_Code_PostiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetN_Code_PostiNull()
            Me(Me.tableSelect_TBL_Amlak_Mostaghelat.N_Code_PostiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsN_Radif_MGhabliNull() As Boolean
            Return Me.IsNull(Me.tableSelect_TBL_Amlak_Mostaghelat.N_Radif_MGhabliColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetN_Radif_MGhabliNull()
            Me(Me.tableSelect_TBL_Amlak_Mostaghelat.N_Radif_MGhabliColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMasahat_ZaminNull() As Boolean
            Return Me.IsNull(Me.tableSelect_TBL_Amlak_Mostaghelat.Masahat_ZaminColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMasahat_ZaminNull()
            Me(Me.tableSelect_TBL_Amlak_Mostaghelat.Masahat_ZaminColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMasahat_JebhehNull() As Boolean
            Return Me.IsNull(Me.tableSelect_TBL_Amlak_Mostaghelat.Masahat_JebhehColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMasahat_JebhehNull()
            Me(Me.tableSelect_TBL_Amlak_Mostaghelat.Masahat_JebhehColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMasahat_PJebhehNull() As Boolean
            Return Me.IsNull(Me.tableSelect_TBL_Amlak_Mostaghelat.Masahat_PJebhehColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMasahat_PJebhehNull()
            Me(Me.tableSelect_TBL_Amlak_Mostaghelat.Masahat_PJebhehColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTedad_ZelNull() As Boolean
            Return Me.IsNull(Me.tableSelect_TBL_Amlak_Mostaghelat.Tedad_ZelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTedad_ZelNull()
            Me(Me.tableSelect_TBL_Amlak_Mostaghelat.Tedad_ZelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBar_TedadNull() As Boolean
            Return Me.IsNull(Me.tableSelect_TBL_Amlak_Mostaghelat.Bar_TedadColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBar_TedadNull()
            Me(Me.tableSelect_TBL_Amlak_Mostaghelat.Bar_TedadColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBar_OnvanNull() As Boolean
            Return Me.IsNull(Me.tableSelect_TBL_Amlak_Mostaghelat.Bar_OnvanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBar_OnvanNull()
            Me(Me.tableSelect_TBL_Amlak_Mostaghelat.Bar_OnvanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTedad_MalekNull() As Boolean
            Return Me.IsNull(Me.tableSelect_TBL_Amlak_Mostaghelat.Tedad_MalekColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTedad_MalekNull()
            Me(Me.tableSelect_TBL_Amlak_Mostaghelat.Tedad_MalekColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNo_MoshakhasatNull() As Boolean
            Return Me.IsNull(Me.tableSelect_TBL_Amlak_Mostaghelat.No_MoshakhasatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNo_MoshakhasatNull()
            Me(Me.tableSelect_TBL_Amlak_Mostaghelat.No_MoshakhasatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTedad_SakhtemanNull() As Boolean
            Return Me.IsNull(Me.tableSelect_TBL_Amlak_Mostaghelat.Tedad_SakhtemanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTedad_SakhtemanNull()
            Me(Me.tableSelect_TBL_Amlak_Mostaghelat.Tedad_SakhtemanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTedad_ApartemanNull() As Boolean
            Return Me.IsNull(Me.tableSelect_TBL_Amlak_Mostaghelat.Tedad_ApartemanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTedad_ApartemanNull()
            Me(Me.tableSelect_TBL_Amlak_Mostaghelat.Tedad_ApartemanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTedad_Vahed_KasbNull() As Boolean
            Return Me.IsNull(Me.tableSelect_TBL_Amlak_Mostaghelat.Tedad_Vahed_KasbColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTedad_Vahed_KasbNull()
            Me(Me.tableSelect_TBL_Amlak_Mostaghelat.Tedad_Vahed_KasbColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMasahat_MelkNull() As Boolean
            Return Me.IsNull(Me.tableSelect_TBL_Amlak_Mostaghelat.Masahat_MelkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMasahat_MelkNull()
            Me(Me.tableSelect_TBL_Amlak_Mostaghelat.Masahat_MelkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMetr_DarNull() As Boolean
            Return Me.IsNull(Me.tableSelect_TBL_Amlak_Mostaghelat.Metr_DarColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMetr_DarNull()
            Me(Me.tableSelect_TBL_Amlak_Mostaghelat.Metr_DarColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRah_MostaghelNull() As Boolean
            Return Me.IsNull(Me.tableSelect_TBL_Amlak_Mostaghelat.Rah_MostaghelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRah_MostaghelNull()
            Me(Me.tableSelect_TBL_Amlak_Mostaghelat.Rah_MostaghelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTedad_VahedNull() As Boolean
            Return Me.IsNull(Me.tableSelect_TBL_Amlak_Mostaghelat.Tedad_VahedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTedad_VahedNull()
            Me(Me.tableSelect_TBL_Amlak_Mostaghelat.Tedad_VahedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNo_MalekiyatNull() As Boolean
            Return Me.IsNull(Me.tableSelect_TBL_Amlak_Mostaghelat.No_MalekiyatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNo_MalekiyatNull()
            Me(Me.tableSelect_TBL_Amlak_Mostaghelat.No_MalekiyatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsName_MalekNull() As Boolean
            Return Me.IsNull(Me.tableSelect_TBL_Amlak_Mostaghelat.Name_MalekColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetName_MalekNull()
            Me(Me.tableSelect_TBL_Amlak_Mostaghelat.Name_MalekColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsHozoorNull() As Boolean
            Return Me.IsNull(Me.tableSelect_TBL_Amlak_Mostaghelat.HozoorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetHozoorNull()
            Me(Me.tableSelect_TBL_Amlak_Mostaghelat.HozoorColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class FSelect_TBL_Amlak_MostaghelatRow
        Inherits Global.System.Data.DataRow
        
        Private tableFSelect_TBL_Amlak_Mostaghelat As FSelect_TBL_Amlak_MostaghelatDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableFSelect_TBL_Amlak_Mostaghelat = CType(Me.Table,FSelect_TBL_Amlak_MostaghelatDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tarikh_Malekiat() As String
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.Tarikh_MalekiatColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tarikh_Malekiat' in table 'FSelect_TBL_Amlak_Mostaghelat' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.Tarikh_MalekiatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tarikh_PMalekiat() As String
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.Tarikh_PMalekiatColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tarikh_PMalekiat' in table 'FSelect_TBL_Amlak_Mostaghelat' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.Tarikh_PMalekiatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Shomare_Shenasnameh() As String
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.Shomare_ShenasnamehColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Shomare_Shenasnameh' in table 'FSelect_TBL_Amlak_Mostaghela"& _ 
                            "t' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.Shomare_ShenasnamehColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property N_Mashhoor() As String
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.N_MashhoorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'N_Mashhoor' in table 'FSelect_TBL_Amlak_Mostaghelat' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.N_MashhoorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property N_Khiaban() As String
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.N_KhiabanColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'N_Khiaban' in table 'FSelect_TBL_Amlak_Mostaghelat' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.N_KhiabanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property N_Meydan() As String
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.N_MeydanColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'N_Meydan' in table 'FSelect_TBL_Amlak_Mostaghelat' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.N_MeydanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property N_Bazar() As String
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.N_BazarColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'N_Bazar' in table 'FSelect_TBL_Amlak_Mostaghelat' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.N_BazarColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property N_Pasaj() As String
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.N_PasajColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'N_Pasaj' in table 'FSelect_TBL_Amlak_Mostaghelat' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.N_PasajColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property N_Koocheh() As String
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.N_KoochehColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'N_Koocheh' in table 'FSelect_TBL_Amlak_Mostaghelat' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.N_KoochehColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property N_BonBast() As String
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.N_BonBastColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'N_BonBast' in table 'FSelect_TBL_Amlak_Mostaghelat' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.N_BonBastColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property N_PelakAbi() As String
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.N_PelakAbiColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'N_PelakAbi' in table 'FSelect_TBL_Amlak_Mostaghelat' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.N_PelakAbiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property N_Name_Block() As String
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.N_Name_BlockColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'N_Name_Block' in table 'FSelect_TBL_Amlak_Mostaghelat' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.N_Name_BlockColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property N_Tabagheh() As String
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.N_TabaghehColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'N_Tabagheh' in table 'FSelect_TBL_Amlak_Mostaghelat' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.N_TabaghehColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property N_Code_Posti() As String
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.N_Code_PostiColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'N_Code_Posti' in table 'FSelect_TBL_Amlak_Mostaghelat' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.N_Code_PostiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property N_Radif_MGhabli() As String
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.N_Radif_MGhabliColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'N_Radif_MGhabli' in table 'FSelect_TBL_Amlak_Mostaghelat' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.N_Radif_MGhabliColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Masahat_Zamin() As Single
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.Masahat_ZaminColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Masahat_Zamin' in table 'FSelect_TBL_Amlak_Mostaghelat' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.Masahat_ZaminColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Masahat_Jebheh() As Single
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.Masahat_JebhehColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Masahat_Jebheh' in table 'FSelect_TBL_Amlak_Mostaghelat' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.Masahat_JebhehColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Masahat_PJebheh() As Single
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.Masahat_PJebhehColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Masahat_PJebheh' in table 'FSelect_TBL_Amlak_Mostaghelat' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.Masahat_PJebhehColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tedad_Zel() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.Tedad_ZelColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tedad_Zel' in table 'FSelect_TBL_Amlak_Mostaghelat' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.Tedad_ZelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Bar_Tedad() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.Bar_TedadColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bar_Tedad' in table 'FSelect_TBL_Amlak_Mostaghelat' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.Bar_TedadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Bar_Onvan() As String
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.Bar_OnvanColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bar_Onvan' in table 'FSelect_TBL_Amlak_Mostaghelat' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.Bar_OnvanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tedad_Malek() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.Tedad_MalekColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tedad_Malek' in table 'FSelect_TBL_Amlak_Mostaghelat' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.Tedad_MalekColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property No_Moshakhasat() As String
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.No_MoshakhasatColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'No_Moshakhasat' in table 'FSelect_TBL_Amlak_Mostaghelat' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.No_MoshakhasatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tedad_Sakhteman() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.Tedad_SakhtemanColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tedad_Sakhteman' in table 'FSelect_TBL_Amlak_Mostaghelat' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.Tedad_SakhtemanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tedad_Aparteman() As Single
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.Tedad_ApartemanColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tedad_Aparteman' in table 'FSelect_TBL_Amlak_Mostaghelat' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.Tedad_ApartemanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tedad_Vahed_Kasb() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.Tedad_Vahed_KasbColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tedad_Vahed_Kasb' in table 'FSelect_TBL_Amlak_Mostaghelat' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.Tedad_Vahed_KasbColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Masahat_Melk() As Single
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.Masahat_MelkColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Masahat_Melk' in table 'FSelect_TBL_Amlak_Mostaghelat' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.Masahat_MelkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Metr_Dar() As String
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.Metr_DarColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Metr_Dar' in table 'FSelect_TBL_Amlak_Mostaghelat' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.Metr_DarColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Rah_Mostaghel() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.Rah_MostaghelColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Rah_Mostaghel' in table 'FSelect_TBL_Amlak_Mostaghelat' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.Rah_MostaghelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tedad_Vahed() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.Tedad_VahedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tedad_Vahed' in table 'FSelect_TBL_Amlak_Mostaghelat' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.Tedad_VahedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property No_Malekiyat() As String
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.No_MalekiyatColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'No_Malekiyat' in table 'FSelect_TBL_Amlak_Mostaghelat' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.No_MalekiyatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Name_Malek() As String
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.Name_MalekColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Name_Malek' in table 'FSelect_TBL_Amlak_Mostaghelat' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.Name_MalekColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Hozoor() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.HozoorColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Hozoor' in table 'FSelect_TBL_Amlak_Mostaghelat' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.HozoorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTarikh_MalekiatNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_TBL_Amlak_Mostaghelat.Tarikh_MalekiatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTarikh_MalekiatNull()
            Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.Tarikh_MalekiatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTarikh_PMalekiatNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_TBL_Amlak_Mostaghelat.Tarikh_PMalekiatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTarikh_PMalekiatNull()
            Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.Tarikh_PMalekiatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsShomare_ShenasnamehNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_TBL_Amlak_Mostaghelat.Shomare_ShenasnamehColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetShomare_ShenasnamehNull()
            Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.Shomare_ShenasnamehColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsN_MashhoorNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_TBL_Amlak_Mostaghelat.N_MashhoorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetN_MashhoorNull()
            Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.N_MashhoorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsN_KhiabanNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_TBL_Amlak_Mostaghelat.N_KhiabanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetN_KhiabanNull()
            Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.N_KhiabanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsN_MeydanNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_TBL_Amlak_Mostaghelat.N_MeydanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetN_MeydanNull()
            Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.N_MeydanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsN_BazarNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_TBL_Amlak_Mostaghelat.N_BazarColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetN_BazarNull()
            Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.N_BazarColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsN_PasajNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_TBL_Amlak_Mostaghelat.N_PasajColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetN_PasajNull()
            Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.N_PasajColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsN_KoochehNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_TBL_Amlak_Mostaghelat.N_KoochehColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetN_KoochehNull()
            Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.N_KoochehColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsN_BonBastNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_TBL_Amlak_Mostaghelat.N_BonBastColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetN_BonBastNull()
            Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.N_BonBastColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsN_PelakAbiNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_TBL_Amlak_Mostaghelat.N_PelakAbiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetN_PelakAbiNull()
            Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.N_PelakAbiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsN_Name_BlockNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_TBL_Amlak_Mostaghelat.N_Name_BlockColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetN_Name_BlockNull()
            Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.N_Name_BlockColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsN_TabaghehNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_TBL_Amlak_Mostaghelat.N_TabaghehColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetN_TabaghehNull()
            Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.N_TabaghehColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsN_Code_PostiNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_TBL_Amlak_Mostaghelat.N_Code_PostiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetN_Code_PostiNull()
            Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.N_Code_PostiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsN_Radif_MGhabliNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_TBL_Amlak_Mostaghelat.N_Radif_MGhabliColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetN_Radif_MGhabliNull()
            Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.N_Radif_MGhabliColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMasahat_ZaminNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_TBL_Amlak_Mostaghelat.Masahat_ZaminColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMasahat_ZaminNull()
            Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.Masahat_ZaminColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMasahat_JebhehNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_TBL_Amlak_Mostaghelat.Masahat_JebhehColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMasahat_JebhehNull()
            Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.Masahat_JebhehColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMasahat_PJebhehNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_TBL_Amlak_Mostaghelat.Masahat_PJebhehColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMasahat_PJebhehNull()
            Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.Masahat_PJebhehColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTedad_ZelNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_TBL_Amlak_Mostaghelat.Tedad_ZelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTedad_ZelNull()
            Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.Tedad_ZelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBar_TedadNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_TBL_Amlak_Mostaghelat.Bar_TedadColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBar_TedadNull()
            Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.Bar_TedadColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBar_OnvanNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_TBL_Amlak_Mostaghelat.Bar_OnvanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBar_OnvanNull()
            Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.Bar_OnvanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTedad_MalekNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_TBL_Amlak_Mostaghelat.Tedad_MalekColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTedad_MalekNull()
            Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.Tedad_MalekColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNo_MoshakhasatNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_TBL_Amlak_Mostaghelat.No_MoshakhasatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNo_MoshakhasatNull()
            Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.No_MoshakhasatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTedad_SakhtemanNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_TBL_Amlak_Mostaghelat.Tedad_SakhtemanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTedad_SakhtemanNull()
            Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.Tedad_SakhtemanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTedad_ApartemanNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_TBL_Amlak_Mostaghelat.Tedad_ApartemanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTedad_ApartemanNull()
            Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.Tedad_ApartemanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTedad_Vahed_KasbNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_TBL_Amlak_Mostaghelat.Tedad_Vahed_KasbColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTedad_Vahed_KasbNull()
            Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.Tedad_Vahed_KasbColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMasahat_MelkNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_TBL_Amlak_Mostaghelat.Masahat_MelkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMasahat_MelkNull()
            Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.Masahat_MelkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMetr_DarNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_TBL_Amlak_Mostaghelat.Metr_DarColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMetr_DarNull()
            Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.Metr_DarColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRah_MostaghelNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_TBL_Amlak_Mostaghelat.Rah_MostaghelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRah_MostaghelNull()
            Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.Rah_MostaghelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTedad_VahedNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_TBL_Amlak_Mostaghelat.Tedad_VahedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTedad_VahedNull()
            Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.Tedad_VahedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNo_MalekiyatNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_TBL_Amlak_Mostaghelat.No_MalekiyatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNo_MalekiyatNull()
            Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.No_MalekiyatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsName_MalekNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_TBL_Amlak_Mostaghelat.Name_MalekColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetName_MalekNull()
            Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.Name_MalekColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsHozoorNull() As Boolean
            Return Me.IsNull(Me.tableFSelect_TBL_Amlak_Mostaghelat.HozoorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetHozoorNull()
            Me(Me.tableFSelect_TBL_Amlak_Mostaghelat.HozoorColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Tbl_Amlak_MostaghelatRow
        Inherits Global.System.Data.DataRow
        
        Private tableTbl_Amlak_Mostaghelat As Tbl_Amlak_MostaghelatDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTbl_Amlak_Mostaghelat = CType(Me.Table,Tbl_Amlak_MostaghelatDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tarikh_Malekiat() As String
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Amlak_Mostaghelat.Tarikh_MalekiatColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tarikh_Malekiat' in table 'Tbl_Amlak_Mostaghelat' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Amlak_Mostaghelat.Tarikh_MalekiatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tarikh_PMalekiat() As String
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Amlak_Mostaghelat.Tarikh_PMalekiatColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tarikh_PMalekiat' in table 'Tbl_Amlak_Mostaghelat' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Amlak_Mostaghelat.Tarikh_PMalekiatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Shomare_Shenasnameh() As String
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Amlak_Mostaghelat.Shomare_ShenasnamehColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Shomare_Shenasnameh' in table 'Tbl_Amlak_Mostaghelat' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Amlak_Mostaghelat.Shomare_ShenasnamehColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property N_Mashhoor() As String
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Amlak_Mostaghelat.N_MashhoorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'N_Mashhoor' in table 'Tbl_Amlak_Mostaghelat' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Amlak_Mostaghelat.N_MashhoorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property N_Khiaban() As String
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Amlak_Mostaghelat.N_KhiabanColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'N_Khiaban' in table 'Tbl_Amlak_Mostaghelat' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Amlak_Mostaghelat.N_KhiabanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property N_Meydan() As String
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Amlak_Mostaghelat.N_MeydanColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'N_Meydan' in table 'Tbl_Amlak_Mostaghelat' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Amlak_Mostaghelat.N_MeydanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property N_Bazar() As String
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Amlak_Mostaghelat.N_BazarColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'N_Bazar' in table 'Tbl_Amlak_Mostaghelat' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Amlak_Mostaghelat.N_BazarColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property N_Pasaj() As String
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Amlak_Mostaghelat.N_PasajColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'N_Pasaj' in table 'Tbl_Amlak_Mostaghelat' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Amlak_Mostaghelat.N_PasajColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property N_Koocheh() As String
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Amlak_Mostaghelat.N_KoochehColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'N_Koocheh' in table 'Tbl_Amlak_Mostaghelat' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Amlak_Mostaghelat.N_KoochehColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property N_BonBast() As String
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Amlak_Mostaghelat.N_BonBastColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'N_BonBast' in table 'Tbl_Amlak_Mostaghelat' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Amlak_Mostaghelat.N_BonBastColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property N_PelakAbi() As String
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Amlak_Mostaghelat.N_PelakAbiColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'N_PelakAbi' in table 'Tbl_Amlak_Mostaghelat' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Amlak_Mostaghelat.N_PelakAbiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property N_Name_Block() As String
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Amlak_Mostaghelat.N_Name_BlockColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'N_Name_Block' in table 'Tbl_Amlak_Mostaghelat' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Amlak_Mostaghelat.N_Name_BlockColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property N_Tabagheh() As String
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Amlak_Mostaghelat.N_TabaghehColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'N_Tabagheh' in table 'Tbl_Amlak_Mostaghelat' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Amlak_Mostaghelat.N_TabaghehColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property N_Code_Posti() As String
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Amlak_Mostaghelat.N_Code_PostiColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'N_Code_Posti' in table 'Tbl_Amlak_Mostaghelat' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Amlak_Mostaghelat.N_Code_PostiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property N_Radif_MGhabli() As String
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Amlak_Mostaghelat.N_Radif_MGhabliColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'N_Radif_MGhabli' in table 'Tbl_Amlak_Mostaghelat' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Amlak_Mostaghelat.N_Radif_MGhabliColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Masahat_Zamin() As Single
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Amlak_Mostaghelat.Masahat_ZaminColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Masahat_Zamin' in table 'Tbl_Amlak_Mostaghelat' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Amlak_Mostaghelat.Masahat_ZaminColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Masahat_Jebheh() As Single
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Amlak_Mostaghelat.Masahat_JebhehColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Masahat_Jebheh' in table 'Tbl_Amlak_Mostaghelat' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Amlak_Mostaghelat.Masahat_JebhehColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Masahat_PJebheh() As Single
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Amlak_Mostaghelat.Masahat_PJebhehColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Masahat_PJebheh' in table 'Tbl_Amlak_Mostaghelat' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Amlak_Mostaghelat.Masahat_PJebhehColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tedad_Zel() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Amlak_Mostaghelat.Tedad_ZelColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tedad_Zel' in table 'Tbl_Amlak_Mostaghelat' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Amlak_Mostaghelat.Tedad_ZelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Bar_Tedad() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Amlak_Mostaghelat.Bar_TedadColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bar_Tedad' in table 'Tbl_Amlak_Mostaghelat' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Amlak_Mostaghelat.Bar_TedadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Bar_Onvan() As String
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Amlak_Mostaghelat.Bar_OnvanColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bar_Onvan' in table 'Tbl_Amlak_Mostaghelat' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Amlak_Mostaghelat.Bar_OnvanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tedad_Malek() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Amlak_Mostaghelat.Tedad_MalekColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tedad_Malek' in table 'Tbl_Amlak_Mostaghelat' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Amlak_Mostaghelat.Tedad_MalekColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property No_Moshakhasat() As String
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Amlak_Mostaghelat.No_MoshakhasatColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'No_Moshakhasat' in table 'Tbl_Amlak_Mostaghelat' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Amlak_Mostaghelat.No_MoshakhasatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tedad_Sakhteman() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Amlak_Mostaghelat.Tedad_SakhtemanColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tedad_Sakhteman' in table 'Tbl_Amlak_Mostaghelat' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Amlak_Mostaghelat.Tedad_SakhtemanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tedad_Aparteman() As Single
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Amlak_Mostaghelat.Tedad_ApartemanColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tedad_Aparteman' in table 'Tbl_Amlak_Mostaghelat' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Amlak_Mostaghelat.Tedad_ApartemanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tedad_Vahed_Kasb() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Amlak_Mostaghelat.Tedad_Vahed_KasbColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tedad_Vahed_Kasb' in table 'Tbl_Amlak_Mostaghelat' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Amlak_Mostaghelat.Tedad_Vahed_KasbColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Masahat_Melk() As Single
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Amlak_Mostaghelat.Masahat_MelkColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Masahat_Melk' in table 'Tbl_Amlak_Mostaghelat' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Amlak_Mostaghelat.Masahat_MelkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Metr_Dar() As String
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Amlak_Mostaghelat.Metr_DarColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Metr_Dar' in table 'Tbl_Amlak_Mostaghelat' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Amlak_Mostaghelat.Metr_DarColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Rah_Mostaghel() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Amlak_Mostaghelat.Rah_MostaghelColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Rah_Mostaghel' in table 'Tbl_Amlak_Mostaghelat' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Amlak_Mostaghelat.Rah_MostaghelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tedad_Vahed() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Amlak_Mostaghelat.Tedad_VahedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tedad_Vahed' in table 'Tbl_Amlak_Mostaghelat' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Amlak_Mostaghelat.Tedad_VahedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property No_Malekiyat() As String
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Amlak_Mostaghelat.No_MalekiyatColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'No_Malekiyat' in table 'Tbl_Amlak_Mostaghelat' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Amlak_Mostaghelat.No_MalekiyatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Name_Malek() As String
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Amlak_Mostaghelat.Name_MalekColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Name_Malek' in table 'Tbl_Amlak_Mostaghelat' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Amlak_Mostaghelat.Name_MalekColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Hozoor() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Amlak_Mostaghelat.HozoorColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Hozoor' in table 'Tbl_Amlak_Mostaghelat' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Amlak_Mostaghelat.HozoorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTarikh_MalekiatNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Amlak_Mostaghelat.Tarikh_MalekiatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTarikh_MalekiatNull()
            Me(Me.tableTbl_Amlak_Mostaghelat.Tarikh_MalekiatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTarikh_PMalekiatNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Amlak_Mostaghelat.Tarikh_PMalekiatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTarikh_PMalekiatNull()
            Me(Me.tableTbl_Amlak_Mostaghelat.Tarikh_PMalekiatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsShomare_ShenasnamehNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Amlak_Mostaghelat.Shomare_ShenasnamehColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetShomare_ShenasnamehNull()
            Me(Me.tableTbl_Amlak_Mostaghelat.Shomare_ShenasnamehColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsN_MashhoorNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Amlak_Mostaghelat.N_MashhoorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetN_MashhoorNull()
            Me(Me.tableTbl_Amlak_Mostaghelat.N_MashhoorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsN_KhiabanNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Amlak_Mostaghelat.N_KhiabanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetN_KhiabanNull()
            Me(Me.tableTbl_Amlak_Mostaghelat.N_KhiabanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsN_MeydanNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Amlak_Mostaghelat.N_MeydanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetN_MeydanNull()
            Me(Me.tableTbl_Amlak_Mostaghelat.N_MeydanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsN_BazarNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Amlak_Mostaghelat.N_BazarColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetN_BazarNull()
            Me(Me.tableTbl_Amlak_Mostaghelat.N_BazarColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsN_PasajNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Amlak_Mostaghelat.N_PasajColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetN_PasajNull()
            Me(Me.tableTbl_Amlak_Mostaghelat.N_PasajColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsN_KoochehNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Amlak_Mostaghelat.N_KoochehColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetN_KoochehNull()
            Me(Me.tableTbl_Amlak_Mostaghelat.N_KoochehColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsN_BonBastNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Amlak_Mostaghelat.N_BonBastColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetN_BonBastNull()
            Me(Me.tableTbl_Amlak_Mostaghelat.N_BonBastColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsN_PelakAbiNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Amlak_Mostaghelat.N_PelakAbiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetN_PelakAbiNull()
            Me(Me.tableTbl_Amlak_Mostaghelat.N_PelakAbiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsN_Name_BlockNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Amlak_Mostaghelat.N_Name_BlockColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetN_Name_BlockNull()
            Me(Me.tableTbl_Amlak_Mostaghelat.N_Name_BlockColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsN_TabaghehNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Amlak_Mostaghelat.N_TabaghehColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetN_TabaghehNull()
            Me(Me.tableTbl_Amlak_Mostaghelat.N_TabaghehColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsN_Code_PostiNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Amlak_Mostaghelat.N_Code_PostiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetN_Code_PostiNull()
            Me(Me.tableTbl_Amlak_Mostaghelat.N_Code_PostiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsN_Radif_MGhabliNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Amlak_Mostaghelat.N_Radif_MGhabliColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetN_Radif_MGhabliNull()
            Me(Me.tableTbl_Amlak_Mostaghelat.N_Radif_MGhabliColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMasahat_ZaminNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Amlak_Mostaghelat.Masahat_ZaminColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMasahat_ZaminNull()
            Me(Me.tableTbl_Amlak_Mostaghelat.Masahat_ZaminColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMasahat_JebhehNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Amlak_Mostaghelat.Masahat_JebhehColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMasahat_JebhehNull()
            Me(Me.tableTbl_Amlak_Mostaghelat.Masahat_JebhehColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMasahat_PJebhehNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Amlak_Mostaghelat.Masahat_PJebhehColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMasahat_PJebhehNull()
            Me(Me.tableTbl_Amlak_Mostaghelat.Masahat_PJebhehColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTedad_ZelNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Amlak_Mostaghelat.Tedad_ZelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTedad_ZelNull()
            Me(Me.tableTbl_Amlak_Mostaghelat.Tedad_ZelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBar_TedadNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Amlak_Mostaghelat.Bar_TedadColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBar_TedadNull()
            Me(Me.tableTbl_Amlak_Mostaghelat.Bar_TedadColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBar_OnvanNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Amlak_Mostaghelat.Bar_OnvanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBar_OnvanNull()
            Me(Me.tableTbl_Amlak_Mostaghelat.Bar_OnvanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTedad_MalekNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Amlak_Mostaghelat.Tedad_MalekColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTedad_MalekNull()
            Me(Me.tableTbl_Amlak_Mostaghelat.Tedad_MalekColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNo_MoshakhasatNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Amlak_Mostaghelat.No_MoshakhasatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNo_MoshakhasatNull()
            Me(Me.tableTbl_Amlak_Mostaghelat.No_MoshakhasatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTedad_SakhtemanNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Amlak_Mostaghelat.Tedad_SakhtemanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTedad_SakhtemanNull()
            Me(Me.tableTbl_Amlak_Mostaghelat.Tedad_SakhtemanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTedad_ApartemanNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Amlak_Mostaghelat.Tedad_ApartemanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTedad_ApartemanNull()
            Me(Me.tableTbl_Amlak_Mostaghelat.Tedad_ApartemanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTedad_Vahed_KasbNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Amlak_Mostaghelat.Tedad_Vahed_KasbColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTedad_Vahed_KasbNull()
            Me(Me.tableTbl_Amlak_Mostaghelat.Tedad_Vahed_KasbColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMasahat_MelkNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Amlak_Mostaghelat.Masahat_MelkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMasahat_MelkNull()
            Me(Me.tableTbl_Amlak_Mostaghelat.Masahat_MelkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMetr_DarNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Amlak_Mostaghelat.Metr_DarColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMetr_DarNull()
            Me(Me.tableTbl_Amlak_Mostaghelat.Metr_DarColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRah_MostaghelNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Amlak_Mostaghelat.Rah_MostaghelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRah_MostaghelNull()
            Me(Me.tableTbl_Amlak_Mostaghelat.Rah_MostaghelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTedad_VahedNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Amlak_Mostaghelat.Tedad_VahedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTedad_VahedNull()
            Me(Me.tableTbl_Amlak_Mostaghelat.Tedad_VahedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNo_MalekiyatNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Amlak_Mostaghelat.No_MalekiyatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNo_MalekiyatNull()
            Me(Me.tableTbl_Amlak_Mostaghelat.No_MalekiyatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsName_MalekNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Amlak_Mostaghelat.Name_MalekColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetName_MalekNull()
            Me(Me.tableTbl_Amlak_Mostaghelat.Name_MalekColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsHozoorNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Amlak_Mostaghelat.HozoorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetHozoorNull()
            Me(Me.tableTbl_Amlak_Mostaghelat.HozoorColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Select_Tbl_DerakhtRow
        Inherits Global.System.Data.DataRow
        
        Private tableSelect_Tbl_Derakht As Select_Tbl_DerakhtDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSelect_Tbl_Derakht = CType(Me.Table,Select_Tbl_DerakhtDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Shomare_Shenasnameh() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Derakht.Shomare_ShenasnamehColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Shomare_Shenasnameh' in table 'Select_Tbl_Derakht' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Derakht.Shomare_ShenasnamehColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property No() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Derakht.NoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'No' in table 'Select_Tbl_Derakht' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Derakht.NoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Bon() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Derakht.BonColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bon' in table 'Select_Tbl_Derakht' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Derakht.BonColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsShomare_ShenasnamehNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Derakht.Shomare_ShenasnamehColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetShomare_ShenasnamehNull()
            Me(Me.tableSelect_Tbl_Derakht.Shomare_ShenasnamehColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNoNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Derakht.NoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNoNull()
            Me(Me.tableSelect_Tbl_Derakht.NoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBonNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Derakht.BonColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBonNull()
            Me(Me.tableSelect_Tbl_Derakht.BonColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Tbl_Moshakhasat_SakhtemanRow
        Inherits Global.System.Data.DataRow
        
        Private tableTbl_Moshakhasat_Sakhteman As Tbl_Moshakhasat_SakhtemanDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTbl_Moshakhasat_Sakhteman = CType(Me.Table,Tbl_Moshakhasat_SakhtemanDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Shomare_Shenasnameh() As String
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Moshakhasat_Sakhteman.Shomare_ShenasnamehColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Shomare_Shenasnameh' in table 'Tbl_Moshakhasat_Sakhteman' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Moshakhasat_Sakhteman.Shomare_ShenasnamehColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tedad_Tabaghat() As Single
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Moshakhasat_Sakhteman.Tedad_TabaghatColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tedad_Tabaghat' in table 'Tbl_Moshakhasat_Sakhteman' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Moshakhasat_Sakhteman.Tedad_TabaghatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Masahat_Zirbana() As Single
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Moshakhasat_Sakhteman.Masahat_ZirbanaColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Masahat_Zirbana' in table 'Tbl_Moshakhasat_Sakhteman' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Moshakhasat_Sakhteman.Masahat_ZirbanaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Masahat_Bana() As Single
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Moshakhasat_Sakhteman.Masahat_BanaColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Masahat_Bana' in table 'Tbl_Moshakhasat_Sakhteman' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Moshakhasat_Sakhteman.Masahat_BanaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Masahat_Hararat() As Single
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Moshakhasat_Sakhteman.Masahat_HararatColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Masahat_Hararat' in table 'Tbl_Moshakhasat_Sakhteman' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Moshakhasat_Sakhteman.Masahat_HararatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Masahat_Tahvieh() As Single
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Moshakhasat_Sakhteman.Masahat_TahviehColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Masahat_Tahvieh' in table 'Tbl_Moshakhasat_Sakhteman' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Moshakhasat_Sakhteman.Masahat_TahviehColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Masahat_Khonak() As Single
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Moshakhasat_Sakhteman.Masahat_KhonakColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Masahat_Khonak' in table 'Tbl_Moshakhasat_Sakhteman' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Moshakhasat_Sakhteman.Masahat_KhonakColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Masahat_Asansor() As Single
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Moshakhasat_Sakhteman.Masahat_AsansorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Masahat_Asansor' in table 'Tbl_Moshakhasat_Sakhteman' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Moshakhasat_Sakhteman.Masahat_AsansorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sharh_No_Divar() As String
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Moshakhasat_Sakhteman.Sharh_No_DivarColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sharh_No_Divar' in table 'Tbl_Moshakhasat_Sakhteman' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Moshakhasat_Sakhteman.Sharh_No_DivarColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sharh_No_Saghf() As String
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Moshakhasat_Sakhteman.Sharh_No_SaghfColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sharh_No_Saghf' in table 'Tbl_Moshakhasat_Sakhteman' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Moshakhasat_Sakhteman.Sharh_No_SaghfColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Code_no_Sakhteman() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Moshakhasat_Sakhteman.Code_no_SakhtemanColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Code_no_Sakhteman' in table 'Tbl_Moshakhasat_Sakhteman' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Moshakhasat_Sakhteman.Code_no_SakhtemanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property No_Nama() As String
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Moshakhasat_Sakhteman.No_NamaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'No_Nama' in table 'Tbl_Moshakhasat_Sakhteman' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Moshakhasat_Sakhteman.No_NamaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property No_Nama_Code() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Moshakhasat_Sakhteman.No_Nama_CodeColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'No_Nama_Code' in table 'Tbl_Moshakhasat_Sakhteman' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Moshakhasat_Sakhteman.No_Nama_CodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Masahat_zirzamin() As Single
            Get
                Try 
                    Return CType(Me(Me.tableTbl_Moshakhasat_Sakhteman.Masahat_zirzaminColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Masahat_zirzamin' in table 'Tbl_Moshakhasat_Sakhteman' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTbl_Moshakhasat_Sakhteman.Masahat_zirzaminColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsShomare_ShenasnamehNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Moshakhasat_Sakhteman.Shomare_ShenasnamehColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetShomare_ShenasnamehNull()
            Me(Me.tableTbl_Moshakhasat_Sakhteman.Shomare_ShenasnamehColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTedad_TabaghatNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Moshakhasat_Sakhteman.Tedad_TabaghatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTedad_TabaghatNull()
            Me(Me.tableTbl_Moshakhasat_Sakhteman.Tedad_TabaghatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMasahat_ZirbanaNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Moshakhasat_Sakhteman.Masahat_ZirbanaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMasahat_ZirbanaNull()
            Me(Me.tableTbl_Moshakhasat_Sakhteman.Masahat_ZirbanaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMasahat_BanaNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Moshakhasat_Sakhteman.Masahat_BanaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMasahat_BanaNull()
            Me(Me.tableTbl_Moshakhasat_Sakhteman.Masahat_BanaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMasahat_HararatNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Moshakhasat_Sakhteman.Masahat_HararatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMasahat_HararatNull()
            Me(Me.tableTbl_Moshakhasat_Sakhteman.Masahat_HararatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMasahat_TahviehNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Moshakhasat_Sakhteman.Masahat_TahviehColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMasahat_TahviehNull()
            Me(Me.tableTbl_Moshakhasat_Sakhteman.Masahat_TahviehColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMasahat_KhonakNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Moshakhasat_Sakhteman.Masahat_KhonakColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMasahat_KhonakNull()
            Me(Me.tableTbl_Moshakhasat_Sakhteman.Masahat_KhonakColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMasahat_AsansorNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Moshakhasat_Sakhteman.Masahat_AsansorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMasahat_AsansorNull()
            Me(Me.tableTbl_Moshakhasat_Sakhteman.Masahat_AsansorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSharh_No_DivarNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Moshakhasat_Sakhteman.Sharh_No_DivarColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSharh_No_DivarNull()
            Me(Me.tableTbl_Moshakhasat_Sakhteman.Sharh_No_DivarColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSharh_No_SaghfNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Moshakhasat_Sakhteman.Sharh_No_SaghfColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSharh_No_SaghfNull()
            Me(Me.tableTbl_Moshakhasat_Sakhteman.Sharh_No_SaghfColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCode_no_SakhtemanNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Moshakhasat_Sakhteman.Code_no_SakhtemanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCode_no_SakhtemanNull()
            Me(Me.tableTbl_Moshakhasat_Sakhteman.Code_no_SakhtemanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNo_NamaNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Moshakhasat_Sakhteman.No_NamaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNo_NamaNull()
            Me(Me.tableTbl_Moshakhasat_Sakhteman.No_NamaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNo_Nama_CodeNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Moshakhasat_Sakhteman.No_Nama_CodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNo_Nama_CodeNull()
            Me(Me.tableTbl_Moshakhasat_Sakhteman.No_Nama_CodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMasahat_zirzaminNull() As Boolean
            Return Me.IsNull(Me.tableTbl_Moshakhasat_Sakhteman.Masahat_zirzaminColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMasahat_zirzaminNull()
            Me(Me.tableTbl_Moshakhasat_Sakhteman.Masahat_zirzaminColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Select_Tbl_Moshakhasat_SakhtemanRow
        Inherits Global.System.Data.DataRow
        
        Private tableSelect_Tbl_Moshakhasat_Sakhteman As Select_Tbl_Moshakhasat_SakhtemanDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSelect_Tbl_Moshakhasat_Sakhteman = CType(Me.Table,Select_Tbl_Moshakhasat_SakhtemanDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Shomare_Shenasnameh() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Moshakhasat_Sakhteman.Shomare_ShenasnamehColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Shomare_Shenasnameh' in table 'Select_Tbl_Moshakhasat_Sakht"& _ 
                            "eman' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Moshakhasat_Sakhteman.Shomare_ShenasnamehColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tedad_Tabaghat() As Single
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Moshakhasat_Sakhteman.Tedad_TabaghatColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tedad_Tabaghat' in table 'Select_Tbl_Moshakhasat_Sakhteman'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Moshakhasat_Sakhteman.Tedad_TabaghatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Masahat_Zirbana() As Single
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Moshakhasat_Sakhteman.Masahat_ZirbanaColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Masahat_Zirbana' in table 'Select_Tbl_Moshakhasat_Sakhteman"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Moshakhasat_Sakhteman.Masahat_ZirbanaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Masahat_Bana() As Single
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Moshakhasat_Sakhteman.Masahat_BanaColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Masahat_Bana' in table 'Select_Tbl_Moshakhasat_Sakhteman' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Moshakhasat_Sakhteman.Masahat_BanaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Masahat_Hararat() As Single
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Moshakhasat_Sakhteman.Masahat_HararatColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Masahat_Hararat' in table 'Select_Tbl_Moshakhasat_Sakhteman"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Moshakhasat_Sakhteman.Masahat_HararatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Masahat_Tahvieh() As Single
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Moshakhasat_Sakhteman.Masahat_TahviehColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Masahat_Tahvieh' in table 'Select_Tbl_Moshakhasat_Sakhteman"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Moshakhasat_Sakhteman.Masahat_TahviehColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Masahat_Khonak() As Single
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Moshakhasat_Sakhteman.Masahat_KhonakColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Masahat_Khonak' in table 'Select_Tbl_Moshakhasat_Sakhteman'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Moshakhasat_Sakhteman.Masahat_KhonakColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Masahat_Asansor() As Single
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Moshakhasat_Sakhteman.Masahat_AsansorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Masahat_Asansor' in table 'Select_Tbl_Moshakhasat_Sakhteman"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Moshakhasat_Sakhteman.Masahat_AsansorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sharh_No_Divar() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Moshakhasat_Sakhteman.Sharh_No_DivarColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sharh_No_Divar' in table 'Select_Tbl_Moshakhasat_Sakhteman'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Moshakhasat_Sakhteman.Sharh_No_DivarColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sharh_No_Saghf() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Moshakhasat_Sakhteman.Sharh_No_SaghfColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sharh_No_Saghf' in table 'Select_Tbl_Moshakhasat_Sakhteman'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Moshakhasat_Sakhteman.Sharh_No_SaghfColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Code_no_Sakhteman() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Moshakhasat_Sakhteman.Code_no_SakhtemanColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Code_no_Sakhteman' in table 'Select_Tbl_Moshakhasat_Sakhtem"& _ 
                            "an' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Moshakhasat_Sakhteman.Code_no_SakhtemanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property No_Nama() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Moshakhasat_Sakhteman.No_NamaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'No_Nama' in table 'Select_Tbl_Moshakhasat_Sakhteman' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Moshakhasat_Sakhteman.No_NamaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property No_Nama_Code() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Moshakhasat_Sakhteman.No_Nama_CodeColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'No_Nama_Code' in table 'Select_Tbl_Moshakhasat_Sakhteman' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Moshakhasat_Sakhteman.No_Nama_CodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Masahat_zirzamin() As Single
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Moshakhasat_Sakhteman.Masahat_zirzaminColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Masahat_zirzamin' in table 'Select_Tbl_Moshakhasat_Sakhtema"& _ 
                            "n' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Moshakhasat_Sakhteman.Masahat_zirzaminColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsShomare_ShenasnamehNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Moshakhasat_Sakhteman.Shomare_ShenasnamehColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetShomare_ShenasnamehNull()
            Me(Me.tableSelect_Tbl_Moshakhasat_Sakhteman.Shomare_ShenasnamehColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTedad_TabaghatNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Moshakhasat_Sakhteman.Tedad_TabaghatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTedad_TabaghatNull()
            Me(Me.tableSelect_Tbl_Moshakhasat_Sakhteman.Tedad_TabaghatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMasahat_ZirbanaNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Moshakhasat_Sakhteman.Masahat_ZirbanaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMasahat_ZirbanaNull()
            Me(Me.tableSelect_Tbl_Moshakhasat_Sakhteman.Masahat_ZirbanaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMasahat_BanaNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Moshakhasat_Sakhteman.Masahat_BanaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMasahat_BanaNull()
            Me(Me.tableSelect_Tbl_Moshakhasat_Sakhteman.Masahat_BanaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMasahat_HararatNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Moshakhasat_Sakhteman.Masahat_HararatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMasahat_HararatNull()
            Me(Me.tableSelect_Tbl_Moshakhasat_Sakhteman.Masahat_HararatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMasahat_TahviehNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Moshakhasat_Sakhteman.Masahat_TahviehColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMasahat_TahviehNull()
            Me(Me.tableSelect_Tbl_Moshakhasat_Sakhteman.Masahat_TahviehColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMasahat_KhonakNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Moshakhasat_Sakhteman.Masahat_KhonakColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMasahat_KhonakNull()
            Me(Me.tableSelect_Tbl_Moshakhasat_Sakhteman.Masahat_KhonakColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMasahat_AsansorNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Moshakhasat_Sakhteman.Masahat_AsansorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMasahat_AsansorNull()
            Me(Me.tableSelect_Tbl_Moshakhasat_Sakhteman.Masahat_AsansorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSharh_No_DivarNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Moshakhasat_Sakhteman.Sharh_No_DivarColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSharh_No_DivarNull()
            Me(Me.tableSelect_Tbl_Moshakhasat_Sakhteman.Sharh_No_DivarColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSharh_No_SaghfNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Moshakhasat_Sakhteman.Sharh_No_SaghfColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSharh_No_SaghfNull()
            Me(Me.tableSelect_Tbl_Moshakhasat_Sakhteman.Sharh_No_SaghfColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCode_no_SakhtemanNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Moshakhasat_Sakhteman.Code_no_SakhtemanColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCode_no_SakhtemanNull()
            Me(Me.tableSelect_Tbl_Moshakhasat_Sakhteman.Code_no_SakhtemanColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNo_NamaNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Moshakhasat_Sakhteman.No_NamaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNo_NamaNull()
            Me(Me.tableSelect_Tbl_Moshakhasat_Sakhteman.No_NamaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNo_Nama_CodeNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Moshakhasat_Sakhteman.No_Nama_CodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNo_Nama_CodeNull()
            Me(Me.tableSelect_Tbl_Moshakhasat_Sakhteman.No_Nama_CodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMasahat_zirzaminNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Moshakhasat_Sakhteman.Masahat_zirzaminColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMasahat_zirzaminNull()
            Me(Me.tableSelect_Tbl_Moshakhasat_Sakhteman.Masahat_zirzaminColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Select_Tbl_EshterakRow
        Inherits Global.System.Data.DataRow
        
        Private tableSelect_Tbl_Eshterak As Select_Tbl_EshterakDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSelect_Tbl_Eshterak = CType(Me.Table,Select_Tbl_EshterakDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Shomare_Shenasnameh() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Eshterak.Shomare_ShenasnamehColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Shomare_Shenasnameh' in table 'Select_Tbl_Eshterak' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Eshterak.Shomare_ShenasnamehColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Hajm_Estakhr() As Single
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Eshterak.Hajm_EstakhrColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Hajm_Estakhr' in table 'Select_Tbl_Eshterak' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Eshterak.Hajm_EstakhrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Masahat_Estakhr() As Single
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Eshterak.Masahat_EstakhrColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Masahat_Estakhr' in table 'Select_Tbl_Eshterak' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Eshterak.Masahat_EstakhrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Masahat_Golkhaneh() As Single
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Eshterak.Masahat_GolkhanehColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Masahat_Golkhaneh' in table 'Select_Tbl_Eshterak' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Eshterak.Masahat_GolkhanehColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tedad_Chah() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Eshterak.Tedad_ChahColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tedad_Chah' in table 'Select_Tbl_Eshterak' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Eshterak.Tedad_ChahColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Shomareh_Ab() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Eshterak.Shomareh_AbColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Shomareh_Ab' in table 'Select_Tbl_Eshterak' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Eshterak.Shomareh_AbColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Shomareh_Bargh() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Eshterak.Shomareh_BarghColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Shomareh_Bargh' in table 'Select_Tbl_Eshterak' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Eshterak.Shomareh_BarghColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Shomareh_Gaz() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Eshterak.Shomareh_GazColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Shomareh_Gaz' in table 'Select_Tbl_Eshterak' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Eshterak.Shomareh_GazColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Shomareh_Tel() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Eshterak.Shomareh_TelColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Shomareh_Tel' in table 'Select_Tbl_Eshterak' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Eshterak.Shomareh_TelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsShomare_ShenasnamehNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Eshterak.Shomare_ShenasnamehColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetShomare_ShenasnamehNull()
            Me(Me.tableSelect_Tbl_Eshterak.Shomare_ShenasnamehColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsHajm_EstakhrNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Eshterak.Hajm_EstakhrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetHajm_EstakhrNull()
            Me(Me.tableSelect_Tbl_Eshterak.Hajm_EstakhrColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMasahat_EstakhrNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Eshterak.Masahat_EstakhrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMasahat_EstakhrNull()
            Me(Me.tableSelect_Tbl_Eshterak.Masahat_EstakhrColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMasahat_GolkhanehNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Eshterak.Masahat_GolkhanehColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMasahat_GolkhanehNull()
            Me(Me.tableSelect_Tbl_Eshterak.Masahat_GolkhanehColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTedad_ChahNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Eshterak.Tedad_ChahColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTedad_ChahNull()
            Me(Me.tableSelect_Tbl_Eshterak.Tedad_ChahColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsShomareh_AbNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Eshterak.Shomareh_AbColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetShomareh_AbNull()
            Me(Me.tableSelect_Tbl_Eshterak.Shomareh_AbColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsShomareh_BarghNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Eshterak.Shomareh_BarghColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetShomareh_BarghNull()
            Me(Me.tableSelect_Tbl_Eshterak.Shomareh_BarghColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsShomareh_GazNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Eshterak.Shomareh_GazColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetShomareh_GazNull()
            Me(Me.tableSelect_Tbl_Eshterak.Shomareh_GazColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsShomareh_TelNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Eshterak.Shomareh_TelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetShomareh_TelNull()
            Me(Me.tableSelect_Tbl_Eshterak.Shomareh_TelColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Select_Tbl_Afrad_MomayeziRow
        Inherits Global.System.Data.DataRow
        
        Private tableSelect_Tbl_Afrad_Momayezi As Select_Tbl_Afrad_MomayeziDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSelect_Tbl_Afrad_Momayezi = CType(Me.Table,Select_Tbl_Afrad_MomayeziDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Shomare_Shenasnameh() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Afrad_Momayezi.Shomare_ShenasnamehColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Shomare_Shenasnameh' in table 'Select_Tbl_Afrad_Momayezi' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Afrad_Momayezi.Shomare_ShenasnamehColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Momayez_Tarikh() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Afrad_Momayezi.Momayez_TarikhColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Momayez_Tarikh' in table 'Select_Tbl_Afrad_Momayezi' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Afrad_Momayezi.Momayez_TarikhColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Momayez_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Afrad_Momayezi.Momayez_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Momayez_Name' in table 'Select_Tbl_Afrad_Momayezi' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Afrad_Momayezi.Momayez_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Bazbin_Tarikh() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Afrad_Momayezi.Bazbin_TarikhColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bazbin_Tarikh' in table 'Select_Tbl_Afrad_Momayezi' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Afrad_Momayezi.Bazbin_TarikhColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Bazbin_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Afrad_Momayezi.Bazbin_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bazbin_Name' in table 'Select_Tbl_Afrad_Momayezi' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Afrad_Momayezi.Bazbin_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SNahieh_Tarikh() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Afrad_Momayezi.SNahieh_TarikhColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SNahieh_Tarikh' in table 'Select_Tbl_Afrad_Momayezi' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Afrad_Momayezi.SNahieh_TarikhColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SNahieh_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Afrad_Momayezi.SNahieh_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SNahieh_Name' in table 'Select_Tbl_Afrad_Momayezi' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Afrad_Momayezi.SNahieh_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SMantagheh_Tarikh() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Afrad_Momayezi.SMantagheh_TarikhColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SMantagheh_Tarikh' in table 'Select_Tbl_Afrad_Momayezi' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Afrad_Momayezi.SMantagheh_TarikhColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SMantagheh_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Afrad_Momayezi.SMantagheh_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SMantagheh_Name' in table 'Select_Tbl_Afrad_Momayezi' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Afrad_Momayezi.SMantagheh_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsShomare_ShenasnamehNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Afrad_Momayezi.Shomare_ShenasnamehColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetShomare_ShenasnamehNull()
            Me(Me.tableSelect_Tbl_Afrad_Momayezi.Shomare_ShenasnamehColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMomayez_TarikhNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Afrad_Momayezi.Momayez_TarikhColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMomayez_TarikhNull()
            Me(Me.tableSelect_Tbl_Afrad_Momayezi.Momayez_TarikhColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMomayez_NameNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Afrad_Momayezi.Momayez_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMomayez_NameNull()
            Me(Me.tableSelect_Tbl_Afrad_Momayezi.Momayez_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBazbin_TarikhNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Afrad_Momayezi.Bazbin_TarikhColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBazbin_TarikhNull()
            Me(Me.tableSelect_Tbl_Afrad_Momayezi.Bazbin_TarikhColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBazbin_NameNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Afrad_Momayezi.Bazbin_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBazbin_NameNull()
            Me(Me.tableSelect_Tbl_Afrad_Momayezi.Bazbin_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSNahieh_TarikhNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Afrad_Momayezi.SNahieh_TarikhColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSNahieh_TarikhNull()
            Me(Me.tableSelect_Tbl_Afrad_Momayezi.SNahieh_TarikhColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSNahieh_NameNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Afrad_Momayezi.SNahieh_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSNahieh_NameNull()
            Me(Me.tableSelect_Tbl_Afrad_Momayezi.SNahieh_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSMantagheh_TarikhNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Afrad_Momayezi.SMantagheh_TarikhColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSMantagheh_TarikhNull()
            Me(Me.tableSelect_Tbl_Afrad_Momayezi.SMantagheh_TarikhColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSMantagheh_NameNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Afrad_Momayezi.SMantagheh_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSMantagheh_NameNull()
            Me(Me.tableSelect_Tbl_Afrad_Momayezi.SMantagheh_NameColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Select_Tbl_MomayeziRow
        Inherits Global.System.Data.DataRow
        
        Private tableSelect_Tbl_Momayezi As Select_Tbl_MomayeziDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSelect_Tbl_Momayezi = CType(Me.Table,Select_Tbl_MomayeziDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Shomare_Shenasnameh() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Momayezi.Shomare_ShenasnamehColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Shomare_Shenasnameh' in table 'Select_Tbl_Momayezi' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Momayezi.Shomare_ShenasnamehColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tarikh() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Momayezi.TarikhColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tarikh' in table 'Select_Tbl_Momayezi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Momayezi.TarikhColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Vazeiat() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_Tbl_Momayezi.VazeiatColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Vazeiat' in table 'Select_Tbl_Momayezi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_Tbl_Momayezi.VazeiatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsShomare_ShenasnamehNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Momayezi.Shomare_ShenasnamehColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetShomare_ShenasnamehNull()
            Me(Me.tableSelect_Tbl_Momayezi.Shomare_ShenasnamehColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTarikhNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Momayezi.TarikhColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTarikhNull()
            Me(Me.tableSelect_Tbl_Momayezi.TarikhColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsVazeiatNull() As Boolean
            Return Me.IsNull(Me.tableSelect_Tbl_Momayezi.VazeiatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetVazeiatNull()
            Me(Me.tableSelect_Tbl_Momayezi.VazeiatColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class Select_DFN_BLOCKRow
        Inherits Global.System.Data.DataRow
        
        Private tableSelect_DFN_BLOCK As Select_DFN_BLOCKDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSelect_DFN_BLOCK = CType(Me.Table,Select_DFN_BLOCKDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Code() As Byte
            Get
                Return CType(Me(Me.tableSelect_DFN_BLOCK.CodeColumn),Byte)
            End Get
            Set
                Me(Me.tableSelect_DFN_BLOCK.CodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Code_SHsh() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_DFN_BLOCK.Code_SHshColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Code_SHsh' in table 'Select_DFN_BLOCK' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_DFN_BLOCK.Code_SHshColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sharh() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_DFN_BLOCK.SharhColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sharh' in table 'Select_DFN_BLOCK' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_DFN_BLOCK.SharhColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Shomal() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_DFN_BLOCK.ShomalColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Shomal' in table 'Select_DFN_BLOCK' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_DFN_BLOCK.ShomalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Shargh() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_DFN_BLOCK.SharghColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Shargh' in table 'Select_DFN_BLOCK' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_DFN_BLOCK.SharghColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Jonoub() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_DFN_BLOCK.JonoubColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Jonoub' in table 'Select_DFN_BLOCK' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_DFN_BLOCK.JonoubColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Gharb() As String
            Get
                Try 
                    Return CType(Me(Me.tableSelect_DFN_BLOCK.GharbColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Gharb' in table 'Select_DFN_BLOCK' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSelect_DFN_BLOCK.GharbColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCode_SHshNull() As Boolean
            Return Me.IsNull(Me.tableSelect_DFN_BLOCK.Code_SHshColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCode_SHshNull()
            Me(Me.tableSelect_DFN_BLOCK.Code_SHshColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSharhNull() As Boolean
            Return Me.IsNull(Me.tableSelect_DFN_BLOCK.SharhColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSharhNull()
            Me(Me.tableSelect_DFN_BLOCK.SharhColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsShomalNull() As Boolean
            Return Me.IsNull(Me.tableSelect_DFN_BLOCK.ShomalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetShomalNull()
            Me(Me.tableSelect_DFN_BLOCK.ShomalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSharghNull() As Boolean
            Return Me.IsNull(Me.tableSelect_DFN_BLOCK.SharghColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSharghNull()
            Me(Me.tableSelect_DFN_BLOCK.SharghColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsJonoubNull() As Boolean
            Return Me.IsNull(Me.tableSelect_DFN_BLOCK.JonoubColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetJonoubNull()
            Me(Me.tableSelect_DFN_BLOCK.JonoubColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsGharbNull() As Boolean
            Return Me.IsNull(Me.tableSelect_DFN_BLOCK.GharbColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetGharbNull()
            Me(Me.tableSelect_DFN_BLOCK.GharbColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class DFNsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As DFNsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As DFNsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As DFNsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Tbl_Moshakhasat_ZaminRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Tbl_Moshakhasat_ZaminRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Tbl_Moshakhasat_ZaminRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Tbl_Moshakhasat_ZaminRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class TblDFN_GheymatRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TblDFN_GheymatRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As TblDFN_GheymatRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As TblDFN_GheymatRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class TblDFN_BlockRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TblDFN_BlockRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As TblDFN_BlockRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As TblDFN_BlockRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class TblDFN_SALRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TblDFN_SALRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As TblDFN_SALRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As TblDFN_SALRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Select_DFNsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Select_DFNsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Select_DFNsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Select_DFNsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Select_Sal_Gheymat_AllRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Select_Sal_Gheymat_AllRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Select_Sal_Gheymat_AllRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Select_Sal_Gheymat_AllRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class FSelect_CalcRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As FSelect_CalcRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As FSelect_CalcRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As FSelect_CalcRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class FSelect_Calc_SalRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As FSelect_Calc_SalRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As FSelect_Calc_SalRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As FSelect_Calc_SalRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class FSelect_SalRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As FSelect_SalRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As FSelect_SalRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As FSelect_SalRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class FSelect_Sal_GheymatRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As FSelect_Sal_GheymatRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As FSelect_Sal_GheymatRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As FSelect_Sal_GheymatRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class FSelect_Sal_Gheymat_AllRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As FSelect_Sal_Gheymat_AllRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As FSelect_Sal_Gheymat_AllRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As FSelect_Sal_Gheymat_AllRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class FSelect_Tbl_Moshakhasat_MalekinRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As FSelect_Tbl_Moshakhasat_MalekinRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As FSelect_Tbl_Moshakhasat_MalekinRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As FSelect_Tbl_Moshakhasat_MalekinRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Tbl_Moshakhasat_MalekinRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Tbl_Moshakhasat_MalekinRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Tbl_Moshakhasat_MalekinRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Tbl_Moshakhasat_MalekinRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Select_Tbl_Moshakhasat_MalekinRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Select_Tbl_Moshakhasat_MalekinRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Select_Tbl_Moshakhasat_MalekinRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Select_Tbl_Moshakhasat_MalekinRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Tbl_Mahiyat_FizikiRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Tbl_Mahiyat_FizikiRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Tbl_Mahiyat_FizikiRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Tbl_Mahiyat_FizikiRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Select_Tbl_Mahiyat_FizikiRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Select_Tbl_Mahiyat_FizikiRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Select_Tbl_Mahiyat_FizikiRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Select_Tbl_Mahiyat_FizikiRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Tbl_No_EstefadehRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Tbl_No_EstefadehRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Tbl_No_EstefadehRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Tbl_No_EstefadehRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class TAmlakRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TAmlakRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As TAmlakRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As TAmlakRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Tbl_Moshakhasat_Zamin1RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Tbl_Moshakhasat_Zamin1Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Tbl_Moshakhasat_Zamin1Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Tbl_Moshakhasat_Zamin1Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Tbl_Moshakhasat_Zamin2RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Tbl_Moshakhasat_Zamin2Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Tbl_Moshakhasat_Zamin2Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Tbl_Moshakhasat_Zamin2Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Select_Tbl_Moshakhasat_ZaminRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Select_Tbl_Moshakhasat_ZaminRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Select_Tbl_Moshakhasat_ZaminRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Select_Tbl_Moshakhasat_ZaminRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class FSelect_Tbl_Moshakhasat_ZaminRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As FSelect_Tbl_Moshakhasat_ZaminRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As FSelect_Tbl_Moshakhasat_ZaminRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As FSelect_Tbl_Moshakhasat_ZaminRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Select_Tbl_No_EstefadehRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Select_Tbl_No_EstefadehRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Select_Tbl_No_EstefadehRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Select_Tbl_No_EstefadehRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Select_TBL_Amlak_MostaghelatRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Select_TBL_Amlak_MostaghelatRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Select_TBL_Amlak_MostaghelatRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Select_TBL_Amlak_MostaghelatRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class FSelect_TBL_Amlak_MostaghelatRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As FSelect_TBL_Amlak_MostaghelatRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As FSelect_TBL_Amlak_MostaghelatRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As FSelect_TBL_Amlak_MostaghelatRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Tbl_Amlak_MostaghelatRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Tbl_Amlak_MostaghelatRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Tbl_Amlak_MostaghelatRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Tbl_Amlak_MostaghelatRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Select_Tbl_DerakhtRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Select_Tbl_DerakhtRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Select_Tbl_DerakhtRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Select_Tbl_DerakhtRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Tbl_Moshakhasat_SakhtemanRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Tbl_Moshakhasat_SakhtemanRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Tbl_Moshakhasat_SakhtemanRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Tbl_Moshakhasat_SakhtemanRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Select_Tbl_Moshakhasat_SakhtemanRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Select_Tbl_Moshakhasat_SakhtemanRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Select_Tbl_Moshakhasat_SakhtemanRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Select_Tbl_Moshakhasat_SakhtemanRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Select_Tbl_EshterakRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Select_Tbl_EshterakRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Select_Tbl_EshterakRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Select_Tbl_EshterakRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Select_Tbl_Afrad_MomayeziRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Select_Tbl_Afrad_MomayeziRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Select_Tbl_Afrad_MomayeziRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Select_Tbl_Afrad_MomayeziRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Select_Tbl_MomayeziRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Select_Tbl_MomayeziRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Select_Tbl_MomayeziRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Select_Tbl_MomayeziRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class Select_DFN_BLOCKRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Select_DFN_BLOCKRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As Select_DFN_BLOCKRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As Select_DFN_BLOCKRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace DB_NoSaziDataSetTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class DFNsTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "DFNs"
            tableMapping.ColumnMappings.Add("code", "code")
            tableMapping.ColumnMappings.Add("name", "name")
            tableMapping.ColumnMappings.Add("sharh", "sharh")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[DFNs] ([code], [name], [sharh]) VALUES (@code, @name, @sharh)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@code", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@name", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@sharh", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "sharh", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Amlak.My.MySettings.Default.DB_NoSaziConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT code, name, sharh FROM dbo.DFNs"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DB_NoSaziDataSet.DFNsDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DB_NoSaziDataSet.DFNsDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DB_NoSaziDataSet.DFNsDataTable = New DB_NoSaziDataSet.DFNsDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DB_NoSaziDataSet.DFNsDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DB_NoSaziDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "DFNs")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal code As String, ByVal name As String, ByVal sharh As String) As Integer
            If (code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("code")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(code,String)
            End If
            If (name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("name")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(name,String)
            End If
            If (sharh Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(sharh,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Tbl_Moshakhasat_ZaminTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Tbl_Moshakhasat_Zamin"
            tableMapping.ColumnMappings.Add("Radif", "Radif")
            tableMapping.ColumnMappings.Add("Tool_Zel", "Tool_Zel")
            tableMapping.ColumnMappings.Add("Tool_Bar", "Tool_Bar")
            tableMapping.ColumnMappings.Add("MaAbar_Name", "MaAbar_Name")
            tableMapping.ColumnMappings.Add("Shomare_Shenasnameh", "Shomare_Shenasnameh")
            tableMapping.ColumnMappings.Add("jahat_value", "jahat_value")
            tableMapping.ColumnMappings.Add("jahat", "jahat")
            tableMapping.ColumnMappings.Add("MaAbar_Arz", "MaAbar_Arz")
            tableMapping.ColumnMappings.Add("MaAbar_radif", "MaAbar_radif")
            tableMapping.ColumnMappings.Add("zavieh", "zavieh")
            tableMapping.ColumnMappings.Add("Masahat_jebheh1", "Masahat_jebheh1")
            tableMapping.ColumnMappings.Add("Masahat_Jebheh2", "Masahat_Jebheh2")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [Tbl_Moshakhasat_Zamin] ([Shomare_Shenasnameh], [Radif], [Jahat], [To"& _ 
                "ol_Zel], [Tool_Bar], [MaAbar_Name], [MaAbar_Arz], [MaAbar_radif], [zavieh], [Mas"& _ 
                "ahat_jebheh1], [Masahat_Jebheh2]) VALUES (@Shomare_Shenasnameh, @Radif, @jahat_v"& _ 
                "alue, @Tool_Zel, @Tool_Bar, @MaAbar_Name, @MaAbar_Arz, @MaAbar_radif, @zavieh, @"& _ 
                "Masahat_jebheh1, @Masahat_Jebheh2)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Shomare_Shenasnameh", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Shomare_Shenasnameh", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Radif", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Radif", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@jahat_value", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "jahat_value", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tool_Zel", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Tool_Zel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tool_Bar", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Tool_Bar", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaAbar_Name", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaAbar_Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaAbar_Arz", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaAbar_Arz", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaAbar_radif", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaAbar_radif", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@zavieh", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "zavieh", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Masahat_jebheh1", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Masahat_jebheh1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Masahat_Jebheh2", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Masahat_Jebheh2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Amlak.My.MySettings.Default.DB_NoSaziConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     Shomare_Shenasnameh, Radif, Jahat AS jahat_value,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                   "& _ 
                "       (SELECT     CASE jahat WHEN jahat THEN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                 "& _ 
                "                      (SELECT     name"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                        "& _ 
                "                  FROM         dfns"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                           "& _ 
                "               WHERE     code = jahat) END AS jahat) AS jahat, Tool_Zel, Tool_Ba"& _ 
                "r, MaAbar_Name, MaAbar_Arz, MaAbar_radif, zavieh, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      Masaha"& _ 
                "t_jebheh1, Masahat_Jebheh2"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         Tbl_Moshakhasat_Zamin"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (Shoma"& _ 
                "re_Shenasnameh = @SHsh)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SHsh", Global.System.Data.SqlDbType.VarChar, 27, Global.System.Data.ParameterDirection.Input, 0, 0, "Shomare_Shenasnameh", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DB_NoSaziDataSet.Tbl_Moshakhasat_ZaminDataTable, ByVal SHsh As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (SHsh Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(SHsh,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal SHsh As String) As DB_NoSaziDataSet.Tbl_Moshakhasat_ZaminDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (SHsh Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(SHsh,String)
            End If
            Dim dataTable As DB_NoSaziDataSet.Tbl_Moshakhasat_ZaminDataTable = New DB_NoSaziDataSet.Tbl_Moshakhasat_ZaminDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DB_NoSaziDataSet.Tbl_Moshakhasat_ZaminDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DB_NoSaziDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "Tbl_Moshakhasat_Zamin")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class TblDFN_GheymatTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "TblDFN_Gheymat"
            tableMapping.ColumnMappings.Add("Sharh", "Sharh")
            tableMapping.ColumnMappings.Add("Code", "Code")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [TblDFN_Gheymat] ([Sharh], [Code]) VALUES (@Sharh, @Code)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sharh", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sharh", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Code", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Amlak.My.MySettings.Default.DB_NoSaziConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Sharh, Code FROM TblDFN_Gheymat WHERE (Sharh LIKE '%' + @Sharh + '%')"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sharh", Global.System.Data.SqlDbType.NVarChar, 200, Global.System.Data.ParameterDirection.Input, 0, 0, "Sharh", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DB_NoSaziDataSet.TblDFN_GheymatDataTable, ByVal Sharh As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Sharh Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Sharh,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Sharh As String) As DB_NoSaziDataSet.TblDFN_GheymatDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Sharh Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Sharh,String)
            End If
            Dim dataTable As DB_NoSaziDataSet.TblDFN_GheymatDataTable = New DB_NoSaziDataSet.TblDFN_GheymatDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DB_NoSaziDataSet.TblDFN_GheymatDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DB_NoSaziDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "TblDFN_Gheymat")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Sharh As String, ByVal Code As String) As Integer
            If (Sharh Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Sharh,String)
            End If
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Code,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class TblDFN_BlockTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "TblDFN_Block"
            tableMapping.ColumnMappings.Add("Code", "Code")
            tableMapping.ColumnMappings.Add("Code_SHsh", "Code_SHsh")
            tableMapping.ColumnMappings.Add("Sharh", "Sharh")
            tableMapping.ColumnMappings.Add("Shomal", "Shomal")
            tableMapping.ColumnMappings.Add("Shargh", "Shargh")
            tableMapping.ColumnMappings.Add("Jonoub", "Jonoub")
            tableMapping.ColumnMappings.Add("Gharb", "Gharb")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[TblDFN_Block] WHERE (([Code] = @Original_Code) AND ((@IsNull_C"& _ 
                "ode_SHsh = 1 AND [Code_SHsh] IS NULL) OR ([Code_SHsh] = @Original_Code_SHsh)) AN"& _ 
                "D ((@IsNull_Sharh = 1 AND [Sharh] IS NULL) OR ([Sharh] = @Original_Sharh)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Code", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Code", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Code_SHsh", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Code_SHsh", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Code_SHsh", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Code_SHsh", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Sharh", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sharh", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sharh", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sharh", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[TblDFN_Block] ([Code], [Code_SHsh], [Sharh], [Shomal], [Shargh"& _ 
                "], [Jonoub], [Gharb]) VALUES (@Code, @Code_SHsh, @Sharh, @Shomal, @Shargh, @Jono"& _ 
                "ub, @Gharb);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT Code, Code_SHsh, Sharh, Shomal, Shargh, Jonoub, Gharb FROM "& _ 
                "TblDFN_Block WHERE (Code = @Code)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Code", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Code_SHsh", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Code_SHsh", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sharh", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sharh", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Shomal", Global.System.Data.SqlDbType.NText, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Shomal", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Shargh", Global.System.Data.SqlDbType.NText, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Shargh", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Jonoub", Global.System.Data.SqlDbType.NText, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Jonoub", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Gharb", Global.System.Data.SqlDbType.NText, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Gharb", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[TblDFN_Block] SET [Code] = @Code, [Code_SHsh] = @Code_SHsh, [Sharh]"& _ 
                " = @Sharh, [Shomal] = @Shomal, [Shargh] = @Shargh, [Jonoub] = @Jonoub, [Gharb] ="& _ 
                " @Gharb WHERE (([Code] = @Original_Code) AND ((@IsNull_Code_SHsh = 1 AND [Code_S"& _ 
                "Hsh] IS NULL) OR ([Code_SHsh] = @Original_Code_SHsh)) AND ((@IsNull_Sharh = 1 AN"& _ 
                "D [Sharh] IS NULL) OR ([Sharh] = @Original_Sharh)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT Code, Code_SHsh, Sh"& _ 
                "arh, Shomal, Shargh, Jonoub, Gharb FROM TblDFN_Block WHERE (Code = @Code)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Code", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Code_SHsh", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Code_SHsh", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sharh", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sharh", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Shomal", Global.System.Data.SqlDbType.NText, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Shomal", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Shargh", Global.System.Data.SqlDbType.NText, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Shargh", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Jonoub", Global.System.Data.SqlDbType.NText, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Jonoub", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Gharb", Global.System.Data.SqlDbType.NText, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Gharb", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Code", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Code", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Code_SHsh", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Code_SHsh", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Code_SHsh", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Code_SHsh", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Sharh", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sharh", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sharh", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sharh", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Amlak.My.MySettings.Default.DB_NoSaziConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Code, Code_SHsh, Sharh, Shomal, Shargh, Jonoub, Gharb FROM dbo.TblDFN_Bloc"& _ 
                "k"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DB_NoSaziDataSet.TblDFN_BlockDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DB_NoSaziDataSet.TblDFN_BlockDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DB_NoSaziDataSet.TblDFN_BlockDataTable = New DB_NoSaziDataSet.TblDFN_BlockDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DB_NoSaziDataSet.TblDFN_BlockDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DB_NoSaziDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "TblDFN_Block")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_Code As Byte, ByVal Original_Code_SHsh As String, ByVal Original_Sharh As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Code,Byte)
            If (Original_Code_SHsh Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_Code_SHsh,String)
            End If
            If (Original_Sharh Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_Sharh,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Code As Byte, ByVal Code_SHsh As String, ByVal Sharh As String, ByVal Shomal As String, ByVal Shargh As String, ByVal Jonoub As String, ByVal Gharb As String) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(Code,Byte)
            If (Code_SHsh Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Code_SHsh,String)
            End If
            If (Sharh Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Sharh,String)
            End If
            If (Shomal Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(Shomal,String)
            End If
            If (Shargh Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(Shargh,String)
            End If
            If (Jonoub Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(Jonoub,String)
            End If
            If (Gharb Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(Gharb,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Code As Byte, ByVal Code_SHsh As String, ByVal Sharh As String, ByVal Shomal As String, ByVal Shargh As String, ByVal Jonoub As String, ByVal Gharb As String, ByVal Original_Code As Byte, ByVal Original_Code_SHsh As String, ByVal Original_Sharh As String) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Code,Byte)
            If (Code_SHsh Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Code_SHsh,String)
            End If
            If (Sharh Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Sharh,String)
            End If
            If (Shomal Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Shomal,String)
            End If
            If (Shargh Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Shargh,String)
            End If
            If (Jonoub Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Jonoub,String)
            End If
            If (Gharb Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Gharb,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_Code,Byte)
            If (Original_Code_SHsh Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_Code_SHsh,String)
            End If
            If (Original_Sharh Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_Sharh,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Code_SHsh As String, ByVal Sharh As String, ByVal Shomal As String, ByVal Shargh As String, ByVal Jonoub As String, ByVal Gharb As String, ByVal Original_Code As Byte, ByVal Original_Code_SHsh As String, ByVal Original_Sharh As String) As Integer
            Return Me.Update(Original_Code, Code_SHsh, Sharh, Shomal, Shargh, Jonoub, Gharb, Original_Code, Original_Code_SHsh, Original_Sharh)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class TblDFN_SALTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "TblDFN_SAL"
            tableMapping.ColumnMappings.Add("Code_Block", "Code_Block")
            tableMapping.ColumnMappings.Add("Gheymat", "Gheymat")
            tableMapping.ColumnMappings.Add("sal", "sal")
            tableMapping.ColumnMappings.Add("darsad", "darsad")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [TblDFN_SAL] ([Code_Block], [Gheymat], [sal], [darsad]) VALUES (@Code"& _ 
                "_Block, @Gheymat, @sal, @darsad)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Code_Block", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Code_Block", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Gheymat", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Gheymat", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@sal", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "sal", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@darsad", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "darsad", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Amlak.My.MySettings.Default.DB_NoSaziConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Code_Block, Gheymat, sal, darsad FROM TblDFN_SAL"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DB_NoSaziDataSet.TblDFN_SALDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DB_NoSaziDataSet.TblDFN_SALDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DB_NoSaziDataSet.TblDFN_SALDataTable = New DB_NoSaziDataSet.TblDFN_SALDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DB_NoSaziDataSet.TblDFN_SALDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DB_NoSaziDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "TblDFN_SAL")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Code_Block As String, ByVal Gheymat As Global.System.Nullable(Of Integer), ByVal sal As String, ByVal darsad As Global.System.Nullable(Of Byte)) As Integer
            If (Code_Block Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Code_Block,String)
            End If
            If (Gheymat.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Gheymat.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (sal Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(sal,String)
            End If
            If (darsad.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(darsad.Value,Byte)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Select_DFNsTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Select_DFNs"
            tableMapping.ColumnMappings.Add("code", "code")
            tableMapping.ColumnMappings.Add("name", "name")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Amlak.My.MySettings.Default.DB_NoSaziConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.Select_DFNs"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@where", Global.System.Data.SqlDbType.VarChar, 30, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DB_NoSaziDataSet.Select_DFNsDataTable, ByVal where As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (where Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(where,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal where As String) As DB_NoSaziDataSet.Select_DFNsDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (where Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(where,String)
            End If
            Dim dataTable As DB_NoSaziDataSet.Select_DFNsDataTable = New DB_NoSaziDataSet.Select_DFNsDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Select_Sal_Gheymat_AllTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Select_Sal_Gheymat_All"
            tableMapping.ColumnMappings.Add("Code", "Code")
            tableMapping.ColumnMappings.Add("Block_Name", "Block_Name")
            tableMapping.ColumnMappings.Add("sharh", "sharh")
            tableMapping.ColumnMappings.Add("gheymat", "gheymat")
            tableMapping.ColumnMappings.Add("sal", "sal")
            tableMapping.ColumnMappings.Add("darsad", "darsad")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Amlak.My.MySettings.Default.DB_NoSaziConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.Select_Sal_Gheymat_All"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DB_NoSaziDataSet.Select_Sal_Gheymat_AllDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DB_NoSaziDataSet.Select_Sal_Gheymat_AllDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DB_NoSaziDataSet.Select_Sal_Gheymat_AllDataTable = New DB_NoSaziDataSet.Select_Sal_Gheymat_AllDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class FSelect_CalcTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "FSelect_Calc"
            tableMapping.ColumnMappings.Add("Masahat_Melk", "Masahat_Melk")
            tableMapping.ColumnMappings.Add("Bar_Tedad", "Bar_Tedad")
            tableMapping.ColumnMappings.Add("N_Meydan", "N_Meydan")
            tableMapping.ColumnMappings.Add("Rah_Mostaghel", "Rah_Mostaghel")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Amlak.My.MySettings.Default.DB_NoSaziConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Masahat_Melk, Bar_Tedad, N_Meydan, Rah_Mostaghel FROM dbo.FSelect_Calc(@SH"& _ 
                "sh)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SHsh", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DB_NoSaziDataSet.FSelect_CalcDataTable, ByVal SHsh As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (SHsh Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SHsh")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(SHsh,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal SHsh As String) As DB_NoSaziDataSet.FSelect_CalcDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (SHsh Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SHsh")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(SHsh,String)
            End If
            Dim dataTable As DB_NoSaziDataSet.FSelect_CalcDataTable = New DB_NoSaziDataSet.FSelect_CalcDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class FSelect_Calc_SalTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "FSelect_Calc_Sal"
            tableMapping.ColumnMappings.Add("Code_Block", "Code_Block")
            tableMapping.ColumnMappings.Add("Gheymat", "Gheymat")
            tableMapping.ColumnMappings.Add("sal", "sal")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Amlak.My.MySettings.Default.DB_NoSaziConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Code_Block, Gheymat, sal FROM dbo.FSelect_Calc_Sal(@SHsh)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SHsh", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DB_NoSaziDataSet.FSelect_Calc_SalDataTable, ByVal SHsh As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (SHsh Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SHsh")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(SHsh,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal SHsh As String) As DB_NoSaziDataSet.FSelect_Calc_SalDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (SHsh Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SHsh")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(SHsh,String)
            End If
            Dim dataTable As DB_NoSaziDataSet.FSelect_Calc_SalDataTable = New DB_NoSaziDataSet.FSelect_Calc_SalDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class FSelect_SalTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "FSelect_Sal"
            tableMapping.ColumnMappings.Add("gheymat", "gheymat")
            tableMapping.ColumnMappings.Add("sal", "sal")
            tableMapping.ColumnMappings.Add("darsad", "darsad")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Amlak.My.MySettings.Default.DB_NoSaziConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT gheymat, sal, darsad FROM dbo.FSelect_Sal(@Code_Block) AS FSelect_Sal_1"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Code_Block", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DB_NoSaziDataSet.FSelect_SalDataTable, ByVal Code_Block As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Code_Block Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code_Block")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Code_Block,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Code_Block As String) As DB_NoSaziDataSet.FSelect_SalDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Code_Block Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code_Block")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Code_Block,String)
            End If
            Dim dataTable As DB_NoSaziDataSet.FSelect_SalDataTable = New DB_NoSaziDataSet.FSelect_SalDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class FSelect_Sal_GheymatTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "FSelect_Sal_Gheymat"
            tableMapping.ColumnMappings.Add("code", "code")
            tableMapping.ColumnMappings.Add("sharh", "sharh")
            tableMapping.ColumnMappings.Add("gheymat", "gheymat")
            tableMapping.ColumnMappings.Add("sal", "sal")
            tableMapping.ColumnMappings.Add("darsad", "darsad")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Amlak.My.MySettings.Default.DB_NoSaziConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT code, sharh, gheymat, sal, darsad FROM dbo.FSelect_Sal_Gheymat(@Code_Block"& _ 
                ")"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Code_Block", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DB_NoSaziDataSet.FSelect_Sal_GheymatDataTable, ByVal Code_Block As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Code_Block Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code_Block")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Code_Block,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Code_Block As String) As DB_NoSaziDataSet.FSelect_Sal_GheymatDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Code_Block Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code_Block")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Code_Block,String)
            End If
            Dim dataTable As DB_NoSaziDataSet.FSelect_Sal_GheymatDataTable = New DB_NoSaziDataSet.FSelect_Sal_GheymatDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class FSelect_Sal_Gheymat_AllTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "FSelect_Sal_Gheymat_All"
            tableMapping.ColumnMappings.Add("Code", "Code")
            tableMapping.ColumnMappings.Add("Block_Name", "Block_Name")
            tableMapping.ColumnMappings.Add("sharh", "sharh")
            tableMapping.ColumnMappings.Add("gheymat", "gheymat")
            tableMapping.ColumnMappings.Add("sal", "sal")
            tableMapping.ColumnMappings.Add("darsad", "darsad")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Amlak.My.MySettings.Default.DB_NoSaziConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Code, Block_Name, sharh, gheymat, sal, darsad FROM dbo.FSelect_Sal_Gheymat"& _ 
                "_All()"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DB_NoSaziDataSet.FSelect_Sal_Gheymat_AllDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DB_NoSaziDataSet.FSelect_Sal_Gheymat_AllDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DB_NoSaziDataSet.FSelect_Sal_Gheymat_AllDataTable = New DB_NoSaziDataSet.FSelect_Sal_Gheymat_AllDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class FSelect_Tbl_Moshakhasat_MalekinTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "FSelect_Tbl_Moshakhasat_Malekin"
            tableMapping.ColumnMappings.Add("Shomare_Shenasnameh", "Shomare_Shenasnameh")
            tableMapping.ColumnMappings.Add("Tarikh_Tamallok", "Tarikh_Tamallok")
            tableMapping.ColumnMappings.Add("No_Malekiyat_Code", "No_Malekiyat_Code")
            tableMapping.ColumnMappings.Add("No_Malekiyat_Tedad", "No_Malekiyat_Tedad")
            tableMapping.ColumnMappings.Add("Vaziyat_Tamallok", "Vaziyat_Tamallok")
            tableMapping.ColumnMappings.Add("Code_No_Malekiat", "Code_No_Malekiat")
            tableMapping.ColumnMappings.Add("Malek_Name", "Malek_Name")
            tableMapping.ColumnMappings.Add("Malek_Family", "Malek_Family")
            tableMapping.ColumnMappings.Add("Malek_Name_Pedar", "Malek_Name_Pedar")
            tableMapping.ColumnMappings.Add("Malek_SHsh", "Malek_SHsh")
            tableMapping.ColumnMappings.Add("Malek_CodeMelli", "Malek_CodeMelli")
            tableMapping.ColumnMappings.Add("Malek_MahalSodur", "Malek_MahalSodur")
            tableMapping.ColumnMappings.Add("Malek_Address", "Malek_Address")
            tableMapping.ColumnMappings.Add("Malek_Tel", "Malek_Tel")
            tableMapping.ColumnMappings.Add("Radif", "Radif")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Amlak.My.MySettings.Default.DB_NoSaziConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Shomare_Shenasnameh, Tarikh_Tamallok, No_Malekiyat_Code, No_Malekiyat_Teda"& _ 
                "d, Vaziyat_Tamallok, Code_No_Malekiat, Malek_Name, Malek_Family, Malek_Name_Peda"& _ 
                "r, Malek_SHsh, Malek_CodeMelli, Malek_MahalSodur, Malek_Address, Malek_Tel, Radi"& _ 
                "f FROM dbo.FSelect_Tbl_Moshakhasat_Malekin(@SHsh) AS FSelect_Tbl_Moshakhasat_Mal"& _ 
                "ekin_1"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SHsh", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DB_NoSaziDataSet.FSelect_Tbl_Moshakhasat_MalekinDataTable, ByVal SHsh As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (SHsh Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SHsh")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(SHsh,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal SHsh As String) As DB_NoSaziDataSet.FSelect_Tbl_Moshakhasat_MalekinDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (SHsh Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SHsh")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(SHsh,String)
            End If
            Dim dataTable As DB_NoSaziDataSet.FSelect_Tbl_Moshakhasat_MalekinDataTable = New DB_NoSaziDataSet.FSelect_Tbl_Moshakhasat_MalekinDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Tbl_Moshakhasat_MalekinTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Tbl_Moshakhasat_Malekin"
            tableMapping.ColumnMappings.Add("Shomare_Shenasnameh", "Shomare_Shenasnameh")
            tableMapping.ColumnMappings.Add("Radif", "Radif")
            tableMapping.ColumnMappings.Add("Tarikh_Tamallok", "Tarikh_Tamallok")
            tableMapping.ColumnMappings.Add("No_Malekiyat_Code", "No_Malekiyat_Code")
            tableMapping.ColumnMappings.Add("No_Malekiyat_Tedad", "No_Malekiyat_Tedad")
            tableMapping.ColumnMappings.Add("Vaziyat_Tamallok", "Vaziyat_Tamallok")
            tableMapping.ColumnMappings.Add("Code_No_Malekiat", "Code_No_Malekiat")
            tableMapping.ColumnMappings.Add("Malek_Name", "Malek_Name")
            tableMapping.ColumnMappings.Add("Malek_Family", "Malek_Family")
            tableMapping.ColumnMappings.Add("Malek_Name_Pedar", "Malek_Name_Pedar")
            tableMapping.ColumnMappings.Add("Malek_SHsh", "Malek_SHsh")
            tableMapping.ColumnMappings.Add("Malek_CodeMelli", "Malek_CodeMelli")
            tableMapping.ColumnMappings.Add("Malek_MahalSodur", "Malek_MahalSodur")
            tableMapping.ColumnMappings.Add("Malek_Address", "Malek_Address")
            tableMapping.ColumnMappings.Add("Malek_Tel", "Malek_Tel")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Tbl_Moshakhasat_Malekin] ([Shomare_Shenasnameh], [Radif], [Tar"& _ 
                "ikh_Tamallok], [No_Malekiyat_Code], [No_Malekiyat_Tedad], [Vaziyat_Tamallok], [C"& _ 
                "ode_No_Malekiat], [Malek_Name], [Malek_Family], [Malek_Name_Pedar], [Malek_SHsh]"& _ 
                ", [Malek_CodeMelli], [Malek_MahalSodur], [Malek_Address], [Malek_Tel]) VALUES (@"& _ 
                "Shomare_Shenasnameh, @Radif, @Tarikh_Tamallok, @No_Malekiyat_Code, @No_Malekiyat"& _ 
                "_Tedad, @Vaziyat_Tamallok, @Code_No_Malekiat, @Malek_Name, @Malek_Family, @Malek"& _ 
                "_Name_Pedar, @Malek_SHsh, @Malek_CodeMelli, @Malek_MahalSodur, @Malek_Address, @"& _ 
                "Malek_Tel)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Shomare_Shenasnameh", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Shomare_Shenasnameh", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Radif", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Radif", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tarikh_Tamallok", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Tarikh_Tamallok", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@No_Malekiyat_Code", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "No_Malekiyat_Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@No_Malekiyat_Tedad", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "No_Malekiyat_Tedad", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Vaziyat_Tamallok", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Vaziyat_Tamallok", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Code_No_Malekiat", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Code_No_Malekiat", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Malek_Name", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Malek_Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Malek_Family", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Malek_Family", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Malek_Name_Pedar", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Malek_Name_Pedar", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Malek_SHsh", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Malek_SHsh", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Malek_CodeMelli", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Malek_CodeMelli", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Malek_MahalSodur", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Malek_MahalSodur", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Malek_Address", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Malek_Address", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Malek_Tel", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Malek_Tel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Amlak.My.MySettings.Default.DB_NoSaziConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Shomare_Shenasnameh, Radif, Tarikh_Tamallok, No_Malekiyat_Code, No_Malekiy"& _ 
                "at_Tedad, Vaziyat_Tamallok, Code_No_Malekiat, Malek_Name, Malek_Family, Malek_Na"& _ 
                "me_Pedar, Malek_SHsh, Malek_CodeMelli, Malek_MahalSodur, Malek_Address, Malek_Te"& _ 
                "l FROM dbo.Tbl_Moshakhasat_Malekin"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DB_NoSaziDataSet.Tbl_Moshakhasat_MalekinDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DB_NoSaziDataSet.Tbl_Moshakhasat_MalekinDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DB_NoSaziDataSet.Tbl_Moshakhasat_MalekinDataTable = New DB_NoSaziDataSet.Tbl_Moshakhasat_MalekinDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DB_NoSaziDataSet.Tbl_Moshakhasat_MalekinDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DB_NoSaziDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "Tbl_Moshakhasat_Malekin")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Shomare_Shenasnameh As String, ByVal Radif As Global.System.Nullable(Of Byte), ByVal Tarikh_Tamallok As String, ByVal No_Malekiyat_Code As String, ByVal No_Malekiyat_Tedad As Global.System.Nullable(Of Byte), ByVal Vaziyat_Tamallok As String, ByVal Code_No_Malekiat As String, ByVal Malek_Name As String, ByVal Malek_Family As String, ByVal Malek_Name_Pedar As String, ByVal Malek_SHsh As Global.System.Nullable(Of Integer), ByVal Malek_CodeMelli As String, ByVal Malek_MahalSodur As String, ByVal Malek_Address As String, ByVal Malek_Tel As String) As Integer
            If (Shomare_Shenasnameh Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Shomare_Shenasnameh,String)
            End If
            If (Radif.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Radif.Value,Byte)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Tarikh_Tamallok Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Tarikh_Tamallok,String)
            End If
            If (No_Malekiyat_Code Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(No_Malekiyat_Code,String)
            End If
            If (No_Malekiyat_Tedad.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(No_Malekiyat_Tedad.Value,Byte)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Vaziyat_Tamallok Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(Vaziyat_Tamallok,String)
            End If
            If (Code_No_Malekiat Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(Code_No_Malekiat,String)
            End If
            If (Malek_Name Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(Malek_Name,String)
            End If
            If (Malek_Family Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(Malek_Family,String)
            End If
            If (Malek_Name_Pedar Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(Malek_Name_Pedar,String)
            End If
            If (Malek_SHsh.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(Malek_SHsh.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Malek_CodeMelli Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(Malek_CodeMelli,String)
            End If
            If (Malek_MahalSodur Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(Malek_MahalSodur,String)
            End If
            If (Malek_Address Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(Malek_Address,String)
            End If
            If (Malek_Tel Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(Malek_Tel,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Select_Tbl_Moshakhasat_MalekinTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Select_Tbl_Moshakhasat_Malekin"
            tableMapping.ColumnMappings.Add("Shomare_Shenasnameh", "Shomare_Shenasnameh")
            tableMapping.ColumnMappings.Add("Radif", "Radif")
            tableMapping.ColumnMappings.Add("Tarikh_Tamallok", "Tarikh_Tamallok")
            tableMapping.ColumnMappings.Add("No_Malekiyat_Code", "No_Malekiyat_Code")
            tableMapping.ColumnMappings.Add("No_Malekiyat_Tedad", "No_Malekiyat_Tedad")
            tableMapping.ColumnMappings.Add("Vaziyat_Tamallok", "Vaziyat_Tamallok")
            tableMapping.ColumnMappings.Add("Code_No_Malekiat", "Code_No_Malekiat")
            tableMapping.ColumnMappings.Add("Malek_Name", "Malek_Name")
            tableMapping.ColumnMappings.Add("Malek_Family", "Malek_Family")
            tableMapping.ColumnMappings.Add("Malek_Name_Pedar", "Malek_Name_Pedar")
            tableMapping.ColumnMappings.Add("Malek_SHsh", "Malek_SHsh")
            tableMapping.ColumnMappings.Add("Malek_CodeMelli", "Malek_CodeMelli")
            tableMapping.ColumnMappings.Add("Malek_MahalSodur", "Malek_MahalSodur")
            tableMapping.ColumnMappings.Add("Malek_Address", "Malek_Address")
            tableMapping.ColumnMappings.Add("Malek_Tel", "Malek_Tel")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Amlak.My.MySettings.Default.DB_NoSaziConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.Select_Tbl_Moshakhasat_Malekin"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SHsh", Global.System.Data.SqlDbType.VarChar, 27, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DB_NoSaziDataSet.Select_Tbl_Moshakhasat_MalekinDataTable, ByVal SHsh As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (SHsh Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(SHsh,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal SHsh As String) As DB_NoSaziDataSet.Select_Tbl_Moshakhasat_MalekinDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (SHsh Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(SHsh,String)
            End If
            Dim dataTable As DB_NoSaziDataSet.Select_Tbl_Moshakhasat_MalekinDataTable = New DB_NoSaziDataSet.Select_Tbl_Moshakhasat_MalekinDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Tbl_Mahiyat_FizikiTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Tbl_Mahiyat_Fiziki"
            tableMapping.ColumnMappings.Add("Shomare_Shenasnameh", "Shomare_Shenasnameh")
            tableMapping.ColumnMappings.Add("C300", "C300")
            tableMapping.ColumnMappings.Add("C301", "C301")
            tableMapping.ColumnMappings.Add("C302", "C302")
            tableMapping.ColumnMappings.Add("C303", "C303")
            tableMapping.ColumnMappings.Add("C304", "C304")
            tableMapping.ColumnMappings.Add("C305", "C305")
            tableMapping.ColumnMappings.Add("C306", "C306")
            tableMapping.ColumnMappings.Add("C307", "C307")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Tbl_Mahiyat_Fiziki] ([Shomare_Shenasnameh], [C300], [C301], [C"& _ 
                "302], [C303], [C304], [C305], [C306], [C307]) VALUES (@Shomare_Shenasnameh, @C30"& _ 
                "0, @C301, @C302, @C303, @C304, @C305, @C306, @C307)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Shomare_Shenasnameh", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Shomare_Shenasnameh", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C300", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "C300", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C301", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "C301", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C302", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "C302", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C303", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "C303", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C304", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "C304", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C305", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "C305", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C306", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "C306", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C307", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "C307", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Amlak.My.MySettings.Default.DB_NoSaziConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Shomare_Shenasnameh, C300, C301, C302, C303, C304, C305, C306, C307 FROM d"& _ 
                "bo.Tbl_Mahiyat_Fiziki"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DB_NoSaziDataSet.Tbl_Mahiyat_FizikiDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DB_NoSaziDataSet.Tbl_Mahiyat_FizikiDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DB_NoSaziDataSet.Tbl_Mahiyat_FizikiDataTable = New DB_NoSaziDataSet.Tbl_Mahiyat_FizikiDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DB_NoSaziDataSet.Tbl_Mahiyat_FizikiDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DB_NoSaziDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "Tbl_Mahiyat_Fiziki")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Shomare_Shenasnameh As String, ByVal C300 As Global.System.Nullable(Of Boolean), ByVal C301 As Global.System.Nullable(Of Boolean), ByVal C302 As Global.System.Nullable(Of Boolean), ByVal C303 As Global.System.Nullable(Of Boolean), ByVal C304 As Global.System.Nullable(Of Boolean), ByVal C305 As Global.System.Nullable(Of Boolean), ByVal C306 As Global.System.Nullable(Of Boolean), ByVal C307 As Global.System.Nullable(Of Boolean)) As Integer
            If (Shomare_Shenasnameh Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Shomare_Shenasnameh,String)
            End If
            If (C300.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(C300.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (C301.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(C301.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (C302.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(C302.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (C303.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(C303.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (C304.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(C304.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (C305.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(C305.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (C306.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(C306.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (C307.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(C307.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Select_Tbl_Mahiyat_FizikiTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Select_Tbl_Mahiyat_Fiziki"
            tableMapping.ColumnMappings.Add("Shomare_Shenasnameh", "Shomare_Shenasnameh")
            tableMapping.ColumnMappings.Add("C300", "C300")
            tableMapping.ColumnMappings.Add("C301", "C301")
            tableMapping.ColumnMappings.Add("C302", "C302")
            tableMapping.ColumnMappings.Add("C303", "C303")
            tableMapping.ColumnMappings.Add("C304", "C304")
            tableMapping.ColumnMappings.Add("C305", "C305")
            tableMapping.ColumnMappings.Add("C306", "C306")
            tableMapping.ColumnMappings.Add("C307", "C307")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Amlak.My.MySettings.Default.DB_NoSaziConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.Select_Tbl_Mahiyat_Fiziki"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SHsh", Global.System.Data.SqlDbType.VarChar, 27, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DB_NoSaziDataSet.Select_Tbl_Mahiyat_FizikiDataTable, ByVal SHsh As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (SHsh Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(SHsh,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal SHsh As String) As DB_NoSaziDataSet.Select_Tbl_Mahiyat_FizikiDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (SHsh Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(SHsh,String)
            End If
            Dim dataTable As DB_NoSaziDataSet.Select_Tbl_Mahiyat_FizikiDataTable = New DB_NoSaziDataSet.Select_Tbl_Mahiyat_FizikiDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Tbl_No_EstefadehTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Tbl_No_Estefadeh"
            tableMapping.ColumnMappings.Add("Shomare_Shenasnameh", "Shomare_Shenasnameh")
            tableMapping.ColumnMappings.Add("C350", "C350")
            tableMapping.ColumnMappings.Add("C351", "C351")
            tableMapping.ColumnMappings.Add("C352", "C352")
            tableMapping.ColumnMappings.Add("C353", "C353")
            tableMapping.ColumnMappings.Add("C354", "C354")
            tableMapping.ColumnMappings.Add("C355", "C355")
            tableMapping.ColumnMappings.Add("C356", "C356")
            tableMapping.ColumnMappings.Add("C357", "C357")
            tableMapping.ColumnMappings.Add("C358", "C358")
            tableMapping.ColumnMappings.Add("C359", "C359")
            tableMapping.ColumnMappings.Add("C360", "C360")
            tableMapping.ColumnMappings.Add("C361", "C361")
            tableMapping.ColumnMappings.Add("C362", "C362")
            tableMapping.ColumnMappings.Add("C363", "C363")
            tableMapping.ColumnMappings.Add("C364", "C364")
            tableMapping.ColumnMappings.Add("C365", "C365")
            tableMapping.ColumnMappings.Add("C366", "C366")
            tableMapping.ColumnMappings.Add("C367", "C367")
            tableMapping.ColumnMappings.Add("C368", "C368")
            tableMapping.ColumnMappings.Add("C369", "C369")
            tableMapping.ColumnMappings.Add("C370", "C370")
            tableMapping.ColumnMappings.Add("C371", "C371")
            tableMapping.ColumnMappings.Add("C372", "C372")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [Tbl_No_Estefadeh] ([Shomare_Shenasnameh], [C350], [C351], [C352], [C"& _ 
                "353], [C354], [C355], [C356], [C357], [C358], [C359], [C360], [C361], [C362], [C"& _ 
                "363], [C364], [C365], [C366], [C367], [C368], [C369], [C370], [C371], [C372]) VA"& _ 
                "LUES (@Shomare_Shenasnameh, @C350, @C351, @C352, @C353, @C354, @C355, @C356, @C3"& _ 
                "57, @C358, @C359, @C360, @C361, @C362, @C363, @C364, @C365, @C366, @C367, @C368,"& _ 
                " @C369, @C370, @C371, @C372)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Shomare_Shenasnameh", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Shomare_Shenasnameh", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C350", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "C350", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C351", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "C351", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C352", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "C352", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C353", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "C353", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C354", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "C354", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C355", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "C355", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C356", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "C356", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C357", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "C357", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C358", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "C358", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C359", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "C359", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C360", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "C360", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C361", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "C361", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C362", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "C362", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C363", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "C363", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C364", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "C364", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C365", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "C365", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C366", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "C366", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C367", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "C367", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C368", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "C368", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C369", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "C369", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C370", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "C370", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C371", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "C371", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C372", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "C372", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Amlak.My.MySettings.Default.DB_NoSaziConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Shomare_Shenasnameh, C350, C351, C352, C353, C354, C355, C356, C357, C358,"& _ 
                " C359, C360, C361, C362, C363, C364, C365, C366, C367, C368, C369, C370, C371, C"& _ 
                "372 FROM Tbl_No_Estefadeh"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DB_NoSaziDataSet.Tbl_No_EstefadehDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DB_NoSaziDataSet.Tbl_No_EstefadehDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DB_NoSaziDataSet.Tbl_No_EstefadehDataTable = New DB_NoSaziDataSet.Tbl_No_EstefadehDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DB_NoSaziDataSet.Tbl_No_EstefadehDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DB_NoSaziDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "Tbl_No_Estefadeh")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal Shomare_Shenasnameh As String,  _
                    ByVal C350 As Global.System.Nullable(Of Boolean),  _
                    ByVal C351 As Global.System.Nullable(Of Boolean),  _
                    ByVal C352 As Global.System.Nullable(Of Boolean),  _
                    ByVal C353 As Global.System.Nullable(Of Boolean),  _
                    ByVal C354 As Global.System.Nullable(Of Boolean),  _
                    ByVal C355 As Global.System.Nullable(Of Boolean),  _
                    ByVal C356 As Global.System.Nullable(Of Boolean),  _
                    ByVal C357 As Global.System.Nullable(Of Boolean),  _
                    ByVal C358 As Global.System.Nullable(Of Boolean),  _
                    ByVal C359 As Global.System.Nullable(Of Boolean),  _
                    ByVal C360 As Global.System.Nullable(Of Boolean),  _
                    ByVal C361 As Global.System.Nullable(Of Boolean),  _
                    ByVal C362 As Global.System.Nullable(Of Boolean),  _
                    ByVal C363 As Global.System.Nullable(Of Boolean),  _
                    ByVal C364 As Global.System.Nullable(Of Boolean),  _
                    ByVal C365 As Global.System.Nullable(Of Boolean),  _
                    ByVal C366 As Global.System.Nullable(Of Boolean),  _
                    ByVal C367 As Global.System.Nullable(Of Boolean),  _
                    ByVal C368 As Global.System.Nullable(Of Boolean),  _
                    ByVal C369 As Global.System.Nullable(Of Boolean),  _
                    ByVal C370 As Global.System.Nullable(Of Boolean),  _
                    ByVal C371 As Global.System.Nullable(Of Boolean),  _
                    ByVal C372 As Global.System.Nullable(Of Boolean)) As Integer
            If (Shomare_Shenasnameh Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Shomare_Shenasnameh,String)
            End If
            If (C350.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(C350.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (C351.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(C351.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (C352.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(C352.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (C353.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(C353.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (C354.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(C354.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (C355.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(C355.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (C356.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(C356.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (C357.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(C357.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (C358.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(C358.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (C359.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(C359.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (C360.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(C360.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (C361.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(C361.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (C362.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(C362.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (C363.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(C363.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (C364.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(C364.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (C365.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(C365.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (C366.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(C366.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (C367.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(C367.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (C368.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(C368.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (C369.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(C369.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (C370.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(C370.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (C371.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(C371.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (C372.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(C372.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class TAmlakTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "TAmlak"
            tableMapping.ColumnMappings.Add("SHsh", "SHsh")
            tableMapping.ColumnMappings.Add("Kasri", "Kasri")
            tableMapping.ColumnMappings.Add("Ezafat", "Ezafat")
            tableMapping.ColumnMappings.Add("No_Melk", "No_Melk")
            tableMapping.ColumnMappings.Add("Masahat_ZirBana", "Masahat_ZirBana")
            tableMapping.ColumnMappings.Add("Tedad_vahed", "Tedad_vahed")
            tableMapping.ColumnMappings.Add("Masahat_Bana", "Masahat_Bana")
            tableMapping.ColumnMappings.Add("Arzesh_Moamelati", "Arzesh_Moamelati")
            tableMapping.ColumnMappings.Add("TKasri_Zamin", "TKasri_Zamin")
            tableMapping.ColumnMappings.Add("TAzafe_tarakom", "TAzafe_tarakom")
            tableMapping.ColumnMappings.Add("THagh_Nezareh", "THagh_Nezareh")
            tableMapping.ColumnMappings.Add("TSodore_ParvanehAnboh", "TSodore_ParvanehAnboh")
            tableMapping.ColumnMappings.Add("TSodore_ParvanehVilaie", "TSodore_ParvanehVilaie")
            tableMapping.ColumnMappings.Add("TSath_Shahr", "TSath_Shahr")
            tableMapping.ColumnMappings.Add("TNosazi", "TNosazi")
            tableMapping.ColumnMappings.Add("TTamirat", "TTamirat")
            tableMapping.ColumnMappings.Add("TTransfer", "TTransfer")
            tableMapping.ColumnMappings.Add("TPazireh", "TPazireh")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[TAmlak] ([SHsh], [Kasri], [Ezafat], [No_Melk], [Masahat_ZirBan"& _ 
                "a], [Tedad_vahed], [Masahat_Bana], [Arzesh_Moamelati], [TKasri_Zamin], [TAzafe_t"& _ 
                "arakom], [THagh_Nezareh], [TSodore_ParvanehAnboh], [TSodore_ParvanehVilaie], [TS"& _ 
                "ath_Shahr], [TNosazi], [TTamirat], [TTransfer], [TPazireh]) VALUES (@SHsh, @Kasr"& _ 
                "i, @Ezafat, @No_Melk, @Masahat_ZirBana, @Tedad_vahed, @Masahat_Bana, @Arzesh_Moa"& _ 
                "melati, @TKasri_Zamin, @TAzafe_tarakom, @THagh_Nezareh, @TSodore_ParvanehAnboh, "& _ 
                "@TSodore_ParvanehVilaie, @TSath_Shahr, @TNosazi, @TTamirat, @TTransfer, @TPazire"& _ 
                "h)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SHsh", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SHsh", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Kasri", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Kasri", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Ezafat", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Ezafat", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@No_Melk", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "No_Melk", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Masahat_ZirBana", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Masahat_ZirBana", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tedad_vahed", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Tedad_vahed", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Masahat_Bana", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Masahat_Bana", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Arzesh_Moamelati", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Arzesh_Moamelati", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TKasri_Zamin", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TKasri_Zamin", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TAzafe_tarakom", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TAzafe_tarakom", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@THagh_Nezareh", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "THagh_Nezareh", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TSodore_ParvanehAnboh", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TSodore_ParvanehAnboh", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TSodore_ParvanehVilaie", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TSodore_ParvanehVilaie", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TSath_Shahr", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TSath_Shahr", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TNosazi", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TNosazi", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TTamirat", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TTamirat", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TTransfer", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TTransfer", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TPazireh", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TPazireh", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Amlak.My.MySettings.Default.DB_NoSaziConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT SHsh, Kasri, Ezafat, No_Melk, Masahat_ZirBana, Tedad_vahed, Masahat_Bana, "& _ 
                "Arzesh_Moamelati, TKasri_Zamin, TAzafe_tarakom, THagh_Nezareh, TSodore_ParvanehA"& _ 
                "nboh, TSodore_ParvanehVilaie, TSath_Shahr, TNosazi, TTamirat, TTransfer, TPazire"& _ 
                "h FROM dbo.TAmlak"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DB_NoSaziDataSet.TAmlakDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DB_NoSaziDataSet.TAmlakDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DB_NoSaziDataSet.TAmlakDataTable = New DB_NoSaziDataSet.TAmlakDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DB_NoSaziDataSet.TAmlakDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DB_NoSaziDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "TAmlak")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal SHsh As String,  _
                    ByVal Kasri As Global.System.Nullable(Of Single),  _
                    ByVal Ezafat As Global.System.Nullable(Of Single),  _
                    ByVal No_Melk As Global.System.Nullable(Of Byte),  _
                    ByVal Masahat_ZirBana As Global.System.Nullable(Of Single),  _
                    ByVal Tedad_vahed As Global.System.Nullable(Of Integer),  _
                    ByVal Masahat_Bana As Global.System.Nullable(Of Single),  _
                    ByVal Arzesh_Moamelati As Global.System.Nullable(Of Single),  _
                    ByVal TKasri_Zamin As Global.System.Nullable(Of Boolean),  _
                    ByVal TAzafe_tarakom As Global.System.Nullable(Of Boolean),  _
                    ByVal THagh_Nezareh As Global.System.Nullable(Of Boolean),  _
                    ByVal TSodore_ParvanehAnboh As Global.System.Nullable(Of Boolean),  _
                    ByVal TSodore_ParvanehVilaie As Global.System.Nullable(Of Boolean),  _
                    ByVal TSath_Shahr As String,  _
                    ByVal TNosazi As String,  _
                    ByVal TTamirat As String,  _
                    ByVal TTransfer As Global.System.Nullable(Of Boolean),  _
                    ByVal TPazireh As Global.System.Nullable(Of Boolean)) As Integer
            If (SHsh Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(SHsh,String)
            End If
            If (Kasri.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Kasri.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Ezafat.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Ezafat.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (No_Melk.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(No_Melk.Value,Byte)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Masahat_ZirBana.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(Masahat_ZirBana.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Tedad_vahed.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(Tedad_vahed.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Masahat_Bana.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(Masahat_Bana.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Arzesh_Moamelati.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(Arzesh_Moamelati.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (TKasri_Zamin.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(TKasri_Zamin.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (TAzafe_tarakom.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(TAzafe_tarakom.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (THagh_Nezareh.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(THagh_Nezareh.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (TSodore_ParvanehAnboh.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(TSodore_ParvanehAnboh.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (TSodore_ParvanehVilaie.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(TSodore_ParvanehVilaie.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (TSath_Shahr Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(TSath_Shahr,String)
            End If
            If (TNosazi Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(TNosazi,String)
            End If
            If (TTamirat Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(TTamirat,String)
            End If
            If (TTransfer.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(TTransfer.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (TPazireh.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(TPazireh.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Tbl_Moshakhasat_Zamin1TableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Tbl_Moshakhasat_Zamin1"
            tableMapping.ColumnMappings.Add("Shomare_Shenasnameh", "Shomare_Shenasnameh")
            tableMapping.ColumnMappings.Add("Radif", "Radif")
            tableMapping.ColumnMappings.Add("Jahat", "Jahat")
            tableMapping.ColumnMappings.Add("Tool_Zel", "Tool_Zel")
            tableMapping.ColumnMappings.Add("Tool_Bar", "Tool_Bar")
            tableMapping.ColumnMappings.Add("MaAbar_Name", "MaAbar_Name")
            tableMapping.ColumnMappings.Add("MaAbar_Arz", "MaAbar_Arz")
            tableMapping.ColumnMappings.Add("MaAbar_radif", "MaAbar_radif")
            tableMapping.ColumnMappings.Add("zavieh", "zavieh")
            tableMapping.ColumnMappings.Add("Masahat_jebheh1", "Masahat_jebheh1")
            tableMapping.ColumnMappings.Add("Masahat_Jebheh2", "Masahat_Jebheh2")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Tbl_Moshakhasat_Zamin] ([Shomare_Shenasnameh], [Radif], [Jahat"& _ 
                "], [Tool_Zel], [Tool_Bar], [MaAbar_Name], [MaAbar_Arz], [MaAbar_radif], [zavieh]"& _ 
                ", [Masahat_jebheh1], [Masahat_Jebheh2]) VALUES (@Shomare_Shenasnameh, @Radif, @J"& _ 
                "ahat, @Tool_Zel, @Tool_Bar, @MaAbar_Name, @MaAbar_Arz, @MaAbar_radif, @zavieh, @"& _ 
                "Masahat_jebheh1, @Masahat_Jebheh2)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Shomare_Shenasnameh", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Shomare_Shenasnameh", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Radif", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Radif", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Jahat", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Jahat", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tool_Zel", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Tool_Zel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tool_Bar", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Tool_Bar", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaAbar_Name", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaAbar_Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaAbar_Arz", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaAbar_Arz", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaAbar_radif", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaAbar_radif", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@zavieh", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "zavieh", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Masahat_jebheh1", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Masahat_jebheh1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Masahat_Jebheh2", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Masahat_Jebheh2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Amlak.My.MySettings.Default.DB_NoSaziConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Shomare_Shenasnameh, Radif, Jahat, Tool_Zel, Tool_Bar, MaAbar_Name, MaAbar"& _ 
                "_Arz, MaAbar_radif, zavieh, Masahat_jebheh1, Masahat_Jebheh2 FROM dbo.Tbl_Moshak"& _ 
                "hasat_Zamin"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DB_NoSaziDataSet.Tbl_Moshakhasat_Zamin1DataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DB_NoSaziDataSet.Tbl_Moshakhasat_Zamin1DataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DB_NoSaziDataSet.Tbl_Moshakhasat_Zamin1DataTable = New DB_NoSaziDataSet.Tbl_Moshakhasat_Zamin1DataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DB_NoSaziDataSet.Tbl_Moshakhasat_Zamin1DataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DB_NoSaziDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "Tbl_Moshakhasat_Zamin1")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Shomare_Shenasnameh As String, ByVal Radif As Global.System.Nullable(Of Byte), ByVal Jahat As String, ByVal Tool_Zel As Global.System.Nullable(Of Single), ByVal Tool_Bar As Global.System.Nullable(Of Single), ByVal MaAbar_Name As String, ByVal MaAbar_Arz As Global.System.Nullable(Of Single), ByVal MaAbar_radif As Global.System.Nullable(Of Byte), ByVal zavieh As Global.System.Nullable(Of Integer), ByVal Masahat_jebheh1 As Global.System.Nullable(Of Single), ByVal Masahat_Jebheh2 As Global.System.Nullable(Of Single)) As Integer
            If (Shomare_Shenasnameh Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Shomare_Shenasnameh,String)
            End If
            If (Radif.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Radif.Value,Byte)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Jahat Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Jahat,String)
            End If
            If (Tool_Zel.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(Tool_Zel.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Tool_Bar.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(Tool_Bar.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (MaAbar_Name Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(MaAbar_Name,String)
            End If
            If (MaAbar_Arz.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(MaAbar_Arz.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (MaAbar_radif.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(MaAbar_radif.Value,Byte)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (zavieh.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(zavieh.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Masahat_jebheh1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(Masahat_jebheh1.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Masahat_Jebheh2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(Masahat_Jebheh2.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Tbl_Moshakhasat_Zamin2TableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Tbl_Moshakhasat_Zamin2"
            tableMapping.ColumnMappings.Add("Shomare_Shenasnameh", "Shomare_Shenasnameh")
            tableMapping.ColumnMappings.Add("Radif", "Radif")
            tableMapping.ColumnMappings.Add("Jahat", "Jahat")
            tableMapping.ColumnMappings.Add("Tool_Zel", "Tool_Zel")
            tableMapping.ColumnMappings.Add("Tool_Bar", "Tool_Bar")
            tableMapping.ColumnMappings.Add("MaAbar_Name", "MaAbar_Name")
            tableMapping.ColumnMappings.Add("MaAbar_Arz", "MaAbar_Arz")
            tableMapping.ColumnMappings.Add("MaAbar_radif", "MaAbar_radif")
            tableMapping.ColumnMappings.Add("zavieh", "zavieh")
            tableMapping.ColumnMappings.Add("Masahat_jebheh1", "Masahat_jebheh1")
            tableMapping.ColumnMappings.Add("Masahat_Jebheh2", "Masahat_Jebheh2")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Tbl_Moshakhasat_Zamin] ([Shomare_Shenasnameh], [Radif], [Jahat"& _ 
                "], [Tool_Zel], [Tool_Bar], [MaAbar_Name], [MaAbar_Arz], [MaAbar_radif], [zavieh]"& _ 
                ", [Masahat_jebheh1], [Masahat_Jebheh2]) VALUES (@Shomare_Shenasnameh, @Radif, @J"& _ 
                "ahat, @Tool_Zel, @Tool_Bar, @MaAbar_Name, @MaAbar_Arz, @MaAbar_radif, @zavieh, @"& _ 
                "Masahat_jebheh1, @Masahat_Jebheh2)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Shomare_Shenasnameh", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Shomare_Shenasnameh", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Radif", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Radif", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Jahat", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Jahat", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tool_Zel", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Tool_Zel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tool_Bar", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Tool_Bar", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaAbar_Name", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaAbar_Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaAbar_Arz", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaAbar_Arz", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaAbar_radif", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaAbar_radif", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@zavieh", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "zavieh", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Masahat_jebheh1", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Masahat_jebheh1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Masahat_Jebheh2", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Masahat_Jebheh2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Amlak.My.MySettings.Default.DB_NoSaziConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Shomare_Shenasnameh, Radif, Jahat, Tool_Zel, Tool_Bar, MaAbar_Name, MaAbar"& _ 
                "_Arz, MaAbar_radif, zavieh, Masahat_jebheh1, Masahat_Jebheh2 FROM dbo.Tbl_Moshak"& _ 
                "hasat_Zamin"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DB_NoSaziDataSet.Tbl_Moshakhasat_Zamin2DataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DB_NoSaziDataSet.Tbl_Moshakhasat_Zamin2DataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DB_NoSaziDataSet.Tbl_Moshakhasat_Zamin2DataTable = New DB_NoSaziDataSet.Tbl_Moshakhasat_Zamin2DataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DB_NoSaziDataSet.Tbl_Moshakhasat_Zamin2DataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DB_NoSaziDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "Tbl_Moshakhasat_Zamin2")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Shomare_Shenasnameh As String, ByVal Radif As Global.System.Nullable(Of Byte), ByVal Jahat As String, ByVal Tool_Zel As Global.System.Nullable(Of Single), ByVal Tool_Bar As Global.System.Nullable(Of Single), ByVal MaAbar_Name As String, ByVal MaAbar_Arz As Global.System.Nullable(Of Single), ByVal MaAbar_radif As Global.System.Nullable(Of Byte), ByVal zavieh As Global.System.Nullable(Of Integer), ByVal Masahat_jebheh1 As Global.System.Nullable(Of Single), ByVal Masahat_Jebheh2 As Global.System.Nullable(Of Single)) As Integer
            If (Shomare_Shenasnameh Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Shomare_Shenasnameh,String)
            End If
            If (Radif.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Radif.Value,Byte)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Jahat Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Jahat,String)
            End If
            If (Tool_Zel.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(Tool_Zel.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Tool_Bar.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(Tool_Bar.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (MaAbar_Name Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(MaAbar_Name,String)
            End If
            If (MaAbar_Arz.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(MaAbar_Arz.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (MaAbar_radif.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(MaAbar_radif.Value,Byte)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (zavieh.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(zavieh.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Masahat_jebheh1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(Masahat_jebheh1.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Masahat_Jebheh2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(Masahat_Jebheh2.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Select_Tbl_Moshakhasat_ZaminTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Select_Tbl_Moshakhasat_Zamin"
            tableMapping.ColumnMappings.Add("Shomare_Shenasnameh", "Shomare_Shenasnameh")
            tableMapping.ColumnMappings.Add("Radif", "Radif")
            tableMapping.ColumnMappings.Add("jahat_value", "jahat_value")
            tableMapping.ColumnMappings.Add("jahat", "jahat")
            tableMapping.ColumnMappings.Add("Tool_Zel", "Tool_Zel")
            tableMapping.ColumnMappings.Add("Tool_Bar", "Tool_Bar")
            tableMapping.ColumnMappings.Add("MaAbar_Name", "MaAbar_Name")
            tableMapping.ColumnMappings.Add("MaAbar_Arz", "MaAbar_Arz")
            tableMapping.ColumnMappings.Add("MaAbar_radif", "MaAbar_radif")
            tableMapping.ColumnMappings.Add("zavieh", "zavieh")
            tableMapping.ColumnMappings.Add("Masahat_jebheh1", "Masahat_jebheh1")
            tableMapping.ColumnMappings.Add("Masahat_Jebheh2", "Masahat_Jebheh2")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Amlak.My.MySettings.Default.DB_NoSaziConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.Select_Tbl_Moshakhasat_Zamin"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SHsh", Global.System.Data.SqlDbType.VarChar, 27, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DB_NoSaziDataSet.Select_Tbl_Moshakhasat_ZaminDataTable, ByVal SHsh As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (SHsh Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(SHsh,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal SHsh As String) As DB_NoSaziDataSet.Select_Tbl_Moshakhasat_ZaminDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (SHsh Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(SHsh,String)
            End If
            Dim dataTable As DB_NoSaziDataSet.Select_Tbl_Moshakhasat_ZaminDataTable = New DB_NoSaziDataSet.Select_Tbl_Moshakhasat_ZaminDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class FSelect_Tbl_Moshakhasat_ZaminTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "FSelect_Tbl_Moshakhasat_Zamin"
            tableMapping.ColumnMappings.Add("Shomare_Shenasnameh", "Shomare_Shenasnameh")
            tableMapping.ColumnMappings.Add("Radif", "Radif")
            tableMapping.ColumnMappings.Add("Jahat", "Jahat")
            tableMapping.ColumnMappings.Add("Jahat2", "Jahat2")
            tableMapping.ColumnMappings.Add("Tool_Zel", "Tool_Zel")
            tableMapping.ColumnMappings.Add("Tool_Bar", "Tool_Bar")
            tableMapping.ColumnMappings.Add("MaAbar_Name", "MaAbar_Name")
            tableMapping.ColumnMappings.Add("MaAbar_Arz", "MaAbar_Arz")
            tableMapping.ColumnMappings.Add("MaAbar_radif", "MaAbar_radif")
            tableMapping.ColumnMappings.Add("zavieh", "zavieh")
            tableMapping.ColumnMappings.Add("Masahat_jebheh1", "Masahat_jebheh1")
            tableMapping.ColumnMappings.Add("Masahat_Jebheh2", "Masahat_Jebheh2")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Amlak.My.MySettings.Default.DB_NoSaziConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Shomare_Shenasnameh, Radif, Jahat, Jahat2, Tool_Zel, Tool_Bar, MaAbar_Name"& _ 
                ", MaAbar_Arz, MaAbar_radif, zavieh, Masahat_jebheh1, Masahat_Jebheh2 FROM dbo.FS"& _ 
                "elect_Tbl_Moshakhasat_Zamin(@SHsh)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SHsh", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DB_NoSaziDataSet.FSelect_Tbl_Moshakhasat_ZaminDataTable, ByVal SHsh As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (SHsh Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SHsh")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(SHsh,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal SHsh As String) As DB_NoSaziDataSet.FSelect_Tbl_Moshakhasat_ZaminDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (SHsh Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SHsh")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(SHsh,String)
            End If
            Dim dataTable As DB_NoSaziDataSet.FSelect_Tbl_Moshakhasat_ZaminDataTable = New DB_NoSaziDataSet.FSelect_Tbl_Moshakhasat_ZaminDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Select_Tbl_No_EstefadehTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Select_Tbl_No_Estefadeh"
            tableMapping.ColumnMappings.Add("Shomare_Shenasnameh", "Shomare_Shenasnameh")
            tableMapping.ColumnMappings.Add("C350", "C350")
            tableMapping.ColumnMappings.Add("C351", "C351")
            tableMapping.ColumnMappings.Add("C352", "C352")
            tableMapping.ColumnMappings.Add("C353", "C353")
            tableMapping.ColumnMappings.Add("C354", "C354")
            tableMapping.ColumnMappings.Add("C355", "C355")
            tableMapping.ColumnMappings.Add("C356", "C356")
            tableMapping.ColumnMappings.Add("C357", "C357")
            tableMapping.ColumnMappings.Add("C358", "C358")
            tableMapping.ColumnMappings.Add("C359", "C359")
            tableMapping.ColumnMappings.Add("C360", "C360")
            tableMapping.ColumnMappings.Add("C361", "C361")
            tableMapping.ColumnMappings.Add("C362", "C362")
            tableMapping.ColumnMappings.Add("C363", "C363")
            tableMapping.ColumnMappings.Add("C364", "C364")
            tableMapping.ColumnMappings.Add("C365", "C365")
            tableMapping.ColumnMappings.Add("C366", "C366")
            tableMapping.ColumnMappings.Add("C367", "C367")
            tableMapping.ColumnMappings.Add("C368", "C368")
            tableMapping.ColumnMappings.Add("C369", "C369")
            tableMapping.ColumnMappings.Add("C370", "C370")
            tableMapping.ColumnMappings.Add("C371", "C371")
            tableMapping.ColumnMappings.Add("C372", "C372")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Amlak.My.MySettings.Default.DB_NoSaziConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.Select_Tbl_No_Estefadeh"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SHsh", Global.System.Data.SqlDbType.VarChar, 27, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DB_NoSaziDataSet.Select_Tbl_No_EstefadehDataTable, ByVal SHsh As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (SHsh Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(SHsh,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal SHsh As String) As DB_NoSaziDataSet.Select_Tbl_No_EstefadehDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (SHsh Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(SHsh,String)
            End If
            Dim dataTable As DB_NoSaziDataSet.Select_Tbl_No_EstefadehDataTable = New DB_NoSaziDataSet.Select_Tbl_No_EstefadehDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Select_TBL_Amlak_MostaghelatTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Select_TBL_Amlak_Mostaghelat"
            tableMapping.ColumnMappings.Add("Tarikh_Malekiat", "Tarikh_Malekiat")
            tableMapping.ColumnMappings.Add("Tarikh_PMalekiat", "Tarikh_PMalekiat")
            tableMapping.ColumnMappings.Add("Shomare_Shenasnameh", "Shomare_Shenasnameh")
            tableMapping.ColumnMappings.Add("N_Mashhoor", "N_Mashhoor")
            tableMapping.ColumnMappings.Add("N_Khiaban", "N_Khiaban")
            tableMapping.ColumnMappings.Add("N_Meydan", "N_Meydan")
            tableMapping.ColumnMappings.Add("N_Bazar", "N_Bazar")
            tableMapping.ColumnMappings.Add("N_Pasaj", "N_Pasaj")
            tableMapping.ColumnMappings.Add("N_Koocheh", "N_Koocheh")
            tableMapping.ColumnMappings.Add("N_BonBast", "N_BonBast")
            tableMapping.ColumnMappings.Add("N_PelakAbi", "N_PelakAbi")
            tableMapping.ColumnMappings.Add("N_Name_Block", "N_Name_Block")
            tableMapping.ColumnMappings.Add("N_Tabagheh", "N_Tabagheh")
            tableMapping.ColumnMappings.Add("N_Code_Posti", "N_Code_Posti")
            tableMapping.ColumnMappings.Add("N_Radif_MGhabli", "N_Radif_MGhabli")
            tableMapping.ColumnMappings.Add("Masahat_Zamin", "Masahat_Zamin")
            tableMapping.ColumnMappings.Add("Masahat_Jebheh", "Masahat_Jebheh")
            tableMapping.ColumnMappings.Add("Masahat_PJebheh", "Masahat_PJebheh")
            tableMapping.ColumnMappings.Add("Tedad_Zel", "Tedad_Zel")
            tableMapping.ColumnMappings.Add("Bar_Tedad", "Bar_Tedad")
            tableMapping.ColumnMappings.Add("Bar_Onvan", "Bar_Onvan")
            tableMapping.ColumnMappings.Add("Tedad_Malek", "Tedad_Malek")
            tableMapping.ColumnMappings.Add("No_Moshakhasat", "No_Moshakhasat")
            tableMapping.ColumnMappings.Add("Tedad_Sakhteman", "Tedad_Sakhteman")
            tableMapping.ColumnMappings.Add("Tedad_Aparteman", "Tedad_Aparteman")
            tableMapping.ColumnMappings.Add("Tedad_Vahed_Kasb", "Tedad_Vahed_Kasb")
            tableMapping.ColumnMappings.Add("Masahat_Melk", "Masahat_Melk")
            tableMapping.ColumnMappings.Add("Metr_Dar", "Metr_Dar")
            tableMapping.ColumnMappings.Add("Rah_Mostaghel", "Rah_Mostaghel")
            tableMapping.ColumnMappings.Add("Tedad_Vahed", "Tedad_Vahed")
            tableMapping.ColumnMappings.Add("No_Malekiyat", "No_Malekiyat")
            tableMapping.ColumnMappings.Add("Name_Malek", "Name_Malek")
            tableMapping.ColumnMappings.Add("Hozoor", "Hozoor")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Amlak.My.MySettings.Default.DB_NoSaziConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.Select_TBL_Amlak_Mostaghelat"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SHsh", Global.System.Data.SqlDbType.VarChar, 27, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DB_NoSaziDataSet.Select_TBL_Amlak_MostaghelatDataTable, ByVal SHsh As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (SHsh Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(SHsh,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal SHsh As String) As DB_NoSaziDataSet.Select_TBL_Amlak_MostaghelatDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (SHsh Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(SHsh,String)
            End If
            Dim dataTable As DB_NoSaziDataSet.Select_TBL_Amlak_MostaghelatDataTable = New DB_NoSaziDataSet.Select_TBL_Amlak_MostaghelatDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class FSelect_TBL_Amlak_MostaghelatTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "FSelect_TBL_Amlak_Mostaghelat"
            tableMapping.ColumnMappings.Add("Tarikh_Malekiat", "Tarikh_Malekiat")
            tableMapping.ColumnMappings.Add("Tarikh_PMalekiat", "Tarikh_PMalekiat")
            tableMapping.ColumnMappings.Add("Shomare_Shenasnameh", "Shomare_Shenasnameh")
            tableMapping.ColumnMappings.Add("N_Mashhoor", "N_Mashhoor")
            tableMapping.ColumnMappings.Add("N_Khiaban", "N_Khiaban")
            tableMapping.ColumnMappings.Add("N_Meydan", "N_Meydan")
            tableMapping.ColumnMappings.Add("N_Bazar", "N_Bazar")
            tableMapping.ColumnMappings.Add("N_Pasaj", "N_Pasaj")
            tableMapping.ColumnMappings.Add("N_Koocheh", "N_Koocheh")
            tableMapping.ColumnMappings.Add("N_BonBast", "N_BonBast")
            tableMapping.ColumnMappings.Add("N_PelakAbi", "N_PelakAbi")
            tableMapping.ColumnMappings.Add("N_Name_Block", "N_Name_Block")
            tableMapping.ColumnMappings.Add("N_Tabagheh", "N_Tabagheh")
            tableMapping.ColumnMappings.Add("N_Code_Posti", "N_Code_Posti")
            tableMapping.ColumnMappings.Add("N_Radif_MGhabli", "N_Radif_MGhabli")
            tableMapping.ColumnMappings.Add("Masahat_Zamin", "Masahat_Zamin")
            tableMapping.ColumnMappings.Add("Masahat_Jebheh", "Masahat_Jebheh")
            tableMapping.ColumnMappings.Add("Masahat_PJebheh", "Masahat_PJebheh")
            tableMapping.ColumnMappings.Add("Tedad_Zel", "Tedad_Zel")
            tableMapping.ColumnMappings.Add("Bar_Tedad", "Bar_Tedad")
            tableMapping.ColumnMappings.Add("Bar_Onvan", "Bar_Onvan")
            tableMapping.ColumnMappings.Add("Tedad_Malek", "Tedad_Malek")
            tableMapping.ColumnMappings.Add("No_Moshakhasat", "No_Moshakhasat")
            tableMapping.ColumnMappings.Add("Tedad_Sakhteman", "Tedad_Sakhteman")
            tableMapping.ColumnMappings.Add("Tedad_Aparteman", "Tedad_Aparteman")
            tableMapping.ColumnMappings.Add("Tedad_Vahed_Kasb", "Tedad_Vahed_Kasb")
            tableMapping.ColumnMappings.Add("Masahat_Melk", "Masahat_Melk")
            tableMapping.ColumnMappings.Add("Metr_Dar", "Metr_Dar")
            tableMapping.ColumnMappings.Add("Rah_Mostaghel", "Rah_Mostaghel")
            tableMapping.ColumnMappings.Add("Tedad_Vahed", "Tedad_Vahed")
            tableMapping.ColumnMappings.Add("No_Malekiyat", "No_Malekiyat")
            tableMapping.ColumnMappings.Add("Name_Malek", "Name_Malek")
            tableMapping.ColumnMappings.Add("Hozoor", "Hozoor")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Amlak.My.MySettings.Default.DB_NoSaziConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Tarikh_Malekiat, Tarikh_PMalekiat, Shomare_Shenasnameh, N_Mashhoor, N_Khia"& _ 
                "ban, N_Meydan, N_Bazar, N_Pasaj, N_Koocheh, N_BonBast, N_PelakAbi, N_Name_Block,"& _ 
                " N_Tabagheh, N_Code_Posti, N_Radif_MGhabli, Masahat_Zamin, Masahat_Jebheh, Masah"& _ 
                "at_PJebheh, Tedad_Zel, Bar_Tedad, Bar_Onvan, Tedad_Malek, No_Moshakhasat, Tedad_"& _ 
                "Sakhteman, Tedad_Aparteman, Tedad_Vahed_Kasb, Masahat_Melk, Metr_Dar, Rah_Mostag"& _ 
                "hel, Tedad_Vahed, No_Malekiyat, Name_Malek, Hozoor FROM dbo.FSelect_TBL_Amlak_Mo"& _ 
                "staghelat(@SHsh)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SHsh", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DB_NoSaziDataSet.FSelect_TBL_Amlak_MostaghelatDataTable, ByVal SHsh As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (SHsh Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SHsh")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(SHsh,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal SHsh As String) As DB_NoSaziDataSet.FSelect_TBL_Amlak_MostaghelatDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (SHsh Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SHsh")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(SHsh,String)
            End If
            Dim dataTable As DB_NoSaziDataSet.FSelect_TBL_Amlak_MostaghelatDataTable = New DB_NoSaziDataSet.FSelect_TBL_Amlak_MostaghelatDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Tbl_Amlak_MostaghelatTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Tbl_Amlak_Mostaghelat"
            tableMapping.ColumnMappings.Add("Tarikh_Malekiat", "Tarikh_Malekiat")
            tableMapping.ColumnMappings.Add("Tarikh_PMalekiat", "Tarikh_PMalekiat")
            tableMapping.ColumnMappings.Add("Shomare_Shenasnameh", "Shomare_Shenasnameh")
            tableMapping.ColumnMappings.Add("N_Mashhoor", "N_Mashhoor")
            tableMapping.ColumnMappings.Add("N_Khiaban", "N_Khiaban")
            tableMapping.ColumnMappings.Add("N_Meydan", "N_Meydan")
            tableMapping.ColumnMappings.Add("N_Bazar", "N_Bazar")
            tableMapping.ColumnMappings.Add("N_Pasaj", "N_Pasaj")
            tableMapping.ColumnMappings.Add("N_Koocheh", "N_Koocheh")
            tableMapping.ColumnMappings.Add("N_BonBast", "N_BonBast")
            tableMapping.ColumnMappings.Add("N_PelakAbi", "N_PelakAbi")
            tableMapping.ColumnMappings.Add("N_Name_Block", "N_Name_Block")
            tableMapping.ColumnMappings.Add("N_Tabagheh", "N_Tabagheh")
            tableMapping.ColumnMappings.Add("N_Code_Posti", "N_Code_Posti")
            tableMapping.ColumnMappings.Add("N_Radif_MGhabli", "N_Radif_MGhabli")
            tableMapping.ColumnMappings.Add("Masahat_Zamin", "Masahat_Zamin")
            tableMapping.ColumnMappings.Add("Masahat_Jebheh", "Masahat_Jebheh")
            tableMapping.ColumnMappings.Add("Masahat_PJebheh", "Masahat_PJebheh")
            tableMapping.ColumnMappings.Add("Tedad_Zel", "Tedad_Zel")
            tableMapping.ColumnMappings.Add("Bar_Tedad", "Bar_Tedad")
            tableMapping.ColumnMappings.Add("Bar_Onvan", "Bar_Onvan")
            tableMapping.ColumnMappings.Add("Tedad_Malek", "Tedad_Malek")
            tableMapping.ColumnMappings.Add("No_Moshakhasat", "No_Moshakhasat")
            tableMapping.ColumnMappings.Add("Tedad_Sakhteman", "Tedad_Sakhteman")
            tableMapping.ColumnMappings.Add("Tedad_Aparteman", "Tedad_Aparteman")
            tableMapping.ColumnMappings.Add("Tedad_Vahed_Kasb", "Tedad_Vahed_Kasb")
            tableMapping.ColumnMappings.Add("Masahat_Melk", "Masahat_Melk")
            tableMapping.ColumnMappings.Add("Metr_Dar", "Metr_Dar")
            tableMapping.ColumnMappings.Add("Rah_Mostaghel", "Rah_Mostaghel")
            tableMapping.ColumnMappings.Add("Tedad_Vahed", "Tedad_Vahed")
            tableMapping.ColumnMappings.Add("No_Malekiyat", "No_Malekiyat")
            tableMapping.ColumnMappings.Add("Name_Malek", "Name_Malek")
            tableMapping.ColumnMappings.Add("Hozoor", "Hozoor")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Tbl_Amlak_Mostaghelat] ([Tarikh_Malekiat], [Tarikh_PMalekiat],"& _ 
                " [Shomare_Shenasnameh], [N_Mashhoor], [N_Khiaban], [N_Meydan], [N_Bazar], [N_Pas"& _ 
                "aj], [N_Koocheh], [N_BonBast], [N_PelakAbi], [N_Name_Block], [N_Tabagheh], [N_Co"& _ 
                "de_Posti], [N_Radif_MGhabli], [Masahat_Zamin], [Masahat_Jebheh], [Masahat_PJebhe"& _ 
                "h], [Tedad_Zel], [Bar_Tedad], [Bar_Onvan], [Tedad_Malek], [No_Moshakhasat], [Ted"& _ 
                "ad_Sakhteman], [Tedad_Aparteman], [Tedad_Vahed_Kasb], [Masahat_Melk], [Metr_Dar]"& _ 
                ", [Rah_Mostaghel], [Tedad_Vahed], [No_Malekiyat], [Name_Malek], [Hozoor]) VALUES"& _ 
                " (@Tarikh_Malekiat, @Tarikh_PMalekiat, @Shomare_Shenasnameh, @N_Mashhoor, @N_Khi"& _ 
                "aban, @N_Meydan, @N_Bazar, @N_Pasaj, @N_Koocheh, @N_BonBast, @N_PelakAbi, @N_Nam"& _ 
                "e_Block, @N_Tabagheh, @N_Code_Posti, @N_Radif_MGhabli, @Masahat_Zamin, @Masahat_"& _ 
                "Jebheh, @Masahat_PJebheh, @Tedad_Zel, @Bar_Tedad, @Bar_Onvan, @Tedad_Malek, @No_"& _ 
                "Moshakhasat, @Tedad_Sakhteman, @Tedad_Aparteman, @Tedad_Vahed_Kasb, @Masahat_Mel"& _ 
                "k, @Metr_Dar, @Rah_Mostaghel, @Tedad_Vahed, @No_Malekiyat, @Name_Malek, @Hozoor)"& _ 
                ""
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tarikh_Malekiat", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Tarikh_Malekiat", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tarikh_PMalekiat", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Tarikh_PMalekiat", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Shomare_Shenasnameh", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Shomare_Shenasnameh", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@N_Mashhoor", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "N_Mashhoor", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@N_Khiaban", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "N_Khiaban", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@N_Meydan", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "N_Meydan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@N_Bazar", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "N_Bazar", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@N_Pasaj", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "N_Pasaj", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@N_Koocheh", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "N_Koocheh", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@N_BonBast", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "N_BonBast", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@N_PelakAbi", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "N_PelakAbi", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@N_Name_Block", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "N_Name_Block", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@N_Tabagheh", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "N_Tabagheh", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@N_Code_Posti", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "N_Code_Posti", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@N_Radif_MGhabli", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "N_Radif_MGhabli", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Masahat_Zamin", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Masahat_Zamin", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Masahat_Jebheh", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Masahat_Jebheh", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Masahat_PJebheh", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Masahat_PJebheh", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tedad_Zel", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Tedad_Zel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Bar_Tedad", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Bar_Tedad", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Bar_Onvan", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Bar_Onvan", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tedad_Malek", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Tedad_Malek", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@No_Moshakhasat", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "No_Moshakhasat", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tedad_Sakhteman", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Tedad_Sakhteman", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tedad_Aparteman", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Tedad_Aparteman", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tedad_Vahed_Kasb", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Tedad_Vahed_Kasb", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Masahat_Melk", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Masahat_Melk", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Metr_Dar", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Metr_Dar", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Rah_Mostaghel", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Rah_Mostaghel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tedad_Vahed", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Tedad_Vahed", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@No_Malekiyat", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "No_Malekiyat", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Name_Malek", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Name_Malek", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Hozoor", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Hozoor", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Amlak.My.MySettings.Default.DB_NoSaziConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Tarikh_Malekiat, Tarikh_PMalekiat, Shomare_Shenasnameh, N_Mashhoor, N_Khia"& _ 
                "ban, N_Meydan, N_Bazar, N_Pasaj, N_Koocheh, N_BonBast, N_PelakAbi, N_Name_Block,"& _ 
                " N_Tabagheh, N_Code_Posti, N_Radif_MGhabli, Masahat_Zamin, Masahat_Jebheh, Masah"& _ 
                "at_PJebheh, Tedad_Zel, Bar_Tedad, Bar_Onvan, Tedad_Malek, No_Moshakhasat, Tedad_"& _ 
                "Sakhteman, Tedad_Aparteman, Tedad_Vahed_Kasb, Masahat_Melk, Metr_Dar, Rah_Mostag"& _ 
                "hel, Tedad_Vahed, No_Malekiyat, Name_Malek, Hozoor FROM dbo.Tbl_Amlak_Mostaghela"& _ 
                "t"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DB_NoSaziDataSet.Tbl_Amlak_MostaghelatDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DB_NoSaziDataSet.Tbl_Amlak_MostaghelatDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DB_NoSaziDataSet.Tbl_Amlak_MostaghelatDataTable = New DB_NoSaziDataSet.Tbl_Amlak_MostaghelatDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DB_NoSaziDataSet.Tbl_Amlak_MostaghelatDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DB_NoSaziDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "Tbl_Amlak_Mostaghelat")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal Tarikh_Malekiat As String,  _
                    ByVal Tarikh_PMalekiat As String,  _
                    ByVal Shomare_Shenasnameh As String,  _
                    ByVal N_Mashhoor As String,  _
                    ByVal N_Khiaban As String,  _
                    ByVal N_Meydan As String,  _
                    ByVal N_Bazar As String,  _
                    ByVal N_Pasaj As String,  _
                    ByVal N_Koocheh As String,  _
                    ByVal N_BonBast As String,  _
                    ByVal N_PelakAbi As String,  _
                    ByVal N_Name_Block As String,  _
                    ByVal N_Tabagheh As String,  _
                    ByVal N_Code_Posti As String,  _
                    ByVal N_Radif_MGhabli As String,  _
                    ByVal Masahat_Zamin As Global.System.Nullable(Of Single),  _
                    ByVal Masahat_Jebheh As Global.System.Nullable(Of Single),  _
                    ByVal Masahat_PJebheh As Global.System.Nullable(Of Single),  _
                    ByVal Tedad_Zel As Global.System.Nullable(Of Byte),  _
                    ByVal Bar_Tedad As Global.System.Nullable(Of Byte),  _
                    ByVal Bar_Onvan As String,  _
                    ByVal Tedad_Malek As Global.System.Nullable(Of Byte),  _
                    ByVal No_Moshakhasat As String,  _
                    ByVal Tedad_Sakhteman As Global.System.Nullable(Of Integer),  _
                    ByVal Tedad_Aparteman As Global.System.Nullable(Of Single),  _
                    ByVal Tedad_Vahed_Kasb As Global.System.Nullable(Of Integer),  _
                    ByVal Masahat_Melk As Global.System.Nullable(Of Single),  _
                    ByVal Metr_Dar As String,  _
                    ByVal Rah_Mostaghel As Global.System.Nullable(Of Boolean),  _
                    ByVal Tedad_Vahed As Global.System.Nullable(Of Integer),  _
                    ByVal No_Malekiyat As String,  _
                    ByVal Name_Malek As String,  _
                    ByVal Hozoor As Global.System.Nullable(Of Boolean)) As Integer
            If (Tarikh_Malekiat Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Tarikh_Malekiat,String)
            End If
            If (Tarikh_PMalekiat Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Tarikh_PMalekiat,String)
            End If
            If (Shomare_Shenasnameh Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Shomare_Shenasnameh,String)
            End If
            If (N_Mashhoor Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(N_Mashhoor,String)
            End If
            If (N_Khiaban Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(N_Khiaban,String)
            End If
            If (N_Meydan Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(N_Meydan,String)
            End If
            If (N_Bazar Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(N_Bazar,String)
            End If
            If (N_Pasaj Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(N_Pasaj,String)
            End If
            If (N_Koocheh Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(N_Koocheh,String)
            End If
            If (N_BonBast Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(N_BonBast,String)
            End If
            If (N_PelakAbi Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(N_PelakAbi,String)
            End If
            If (N_Name_Block Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(N_Name_Block,String)
            End If
            If (N_Tabagheh Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(N_Tabagheh,String)
            End If
            If (N_Code_Posti Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(N_Code_Posti,String)
            End If
            If (N_Radif_MGhabli Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(N_Radif_MGhabli,String)
            End If
            If (Masahat_Zamin.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(Masahat_Zamin.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (Masahat_Jebheh.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(Masahat_Jebheh.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Masahat_PJebheh.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(Masahat_PJebheh.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (Tedad_Zel.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(Tedad_Zel.Value,Byte)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (Bar_Tedad.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(Bar_Tedad.Value,Byte)
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (Bar_Onvan Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(Bar_Onvan,String)
            End If
            If (Tedad_Malek.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(Tedad_Malek.Value,Byte)
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (No_Moshakhasat Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(No_Moshakhasat,String)
            End If
            If (Tedad_Sakhteman.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(Tedad_Sakhteman.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (Tedad_Aparteman.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(Tedad_Aparteman.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Tedad_Vahed_Kasb.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(Tedad_Vahed_Kasb.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (Masahat_Melk.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(Masahat_Melk.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Metr_Dar Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(Metr_Dar,String)
            End If
            If (Rah_Mostaghel.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(Rah_Mostaghel.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (Tedad_Vahed.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(Tedad_Vahed.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (No_Malekiyat Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(No_Malekiyat,String)
            End If
            If (Name_Malek Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(Name_Malek,String)
            End If
            If (Hozoor.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(Hozoor.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Select_Tbl_DerakhtTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Select_Tbl_Derakht"
            tableMapping.ColumnMappings.Add("Shomare_Shenasnameh", "Shomare_Shenasnameh")
            tableMapping.ColumnMappings.Add("No", "No")
            tableMapping.ColumnMappings.Add("Bon", "Bon")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Amlak.My.MySettings.Default.DB_NoSaziConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.Select_Tbl_Derakht"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SHsh", Global.System.Data.SqlDbType.VarChar, 27, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DB_NoSaziDataSet.Select_Tbl_DerakhtDataTable, ByVal SHsh As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (SHsh Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(SHsh,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal SHsh As String) As DB_NoSaziDataSet.Select_Tbl_DerakhtDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (SHsh Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(SHsh,String)
            End If
            Dim dataTable As DB_NoSaziDataSet.Select_Tbl_DerakhtDataTable = New DB_NoSaziDataSet.Select_Tbl_DerakhtDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Tbl_Moshakhasat_SakhtemanTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Tbl_Moshakhasat_Sakhteman"
            tableMapping.ColumnMappings.Add("Shomare_Shenasnameh", "Shomare_Shenasnameh")
            tableMapping.ColumnMappings.Add("Tedad_Tabaghat", "Tedad_Tabaghat")
            tableMapping.ColumnMappings.Add("Masahat_Zirbana", "Masahat_Zirbana")
            tableMapping.ColumnMappings.Add("Masahat_Bana", "Masahat_Bana")
            tableMapping.ColumnMappings.Add("Masahat_Hararat", "Masahat_Hararat")
            tableMapping.ColumnMappings.Add("Masahat_Tahvieh", "Masahat_Tahvieh")
            tableMapping.ColumnMappings.Add("Masahat_Khonak", "Masahat_Khonak")
            tableMapping.ColumnMappings.Add("Masahat_Asansor", "Masahat_Asansor")
            tableMapping.ColumnMappings.Add("Sharh_No_Divar", "Sharh_No_Divar")
            tableMapping.ColumnMappings.Add("Sharh_No_Saghf", "Sharh_No_Saghf")
            tableMapping.ColumnMappings.Add("Code_no_Sakhteman", "Code_no_Sakhteman")
            tableMapping.ColumnMappings.Add("No_Nama", "No_Nama")
            tableMapping.ColumnMappings.Add("No_Nama_Code", "No_Nama_Code")
            tableMapping.ColumnMappings.Add("Masahat_zirzamin", "Masahat_zirzamin")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Tbl_Moshakhasat_Sakhteman] ([Shomare_Shenasnameh], [Tedad_Taba"& _ 
                "ghat], [Masahat_Zirbana], [Masahat_Bana], [Masahat_Hararat], [Masahat_Tahvieh], "& _ 
                "[Masahat_Khonak], [Masahat_Asansor], [Sharh_No_Divar], [Sharh_No_Saghf], [Code_n"& _ 
                "o_Sakhteman], [No_Nama], [No_Nama_Code], [Masahat_zirzamin]) VALUES (@Shomare_Sh"& _ 
                "enasnameh, @Tedad_Tabaghat, @Masahat_Zirbana, @Masahat_Bana, @Masahat_Hararat, @"& _ 
                "Masahat_Tahvieh, @Masahat_Khonak, @Masahat_Asansor, @Sharh_No_Divar, @Sharh_No_S"& _ 
                "aghf, @Code_no_Sakhteman, @No_Nama, @No_Nama_Code, @Masahat_zirzamin)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Shomare_Shenasnameh", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Shomare_Shenasnameh", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tedad_Tabaghat", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Tedad_Tabaghat", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Masahat_Zirbana", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Masahat_Zirbana", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Masahat_Bana", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Masahat_Bana", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Masahat_Hararat", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Masahat_Hararat", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Masahat_Tahvieh", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Masahat_Tahvieh", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Masahat_Khonak", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Masahat_Khonak", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Masahat_Asansor", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Masahat_Asansor", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sharh_No_Divar", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sharh_No_Divar", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sharh_No_Saghf", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sharh_No_Saghf", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Code_no_Sakhteman", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Code_no_Sakhteman", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@No_Nama", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "No_Nama", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@No_Nama_Code", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "No_Nama_Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Masahat_zirzamin", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Masahat_zirzamin", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Amlak.My.MySettings.Default.DB_NoSaziConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Shomare_Shenasnameh, Tedad_Tabaghat, Masahat_Zirbana, Masahat_Bana, Masaha"& _ 
                "t_Hararat, Masahat_Tahvieh, Masahat_Khonak, Masahat_Asansor, Sharh_No_Divar, Sha"& _ 
                "rh_No_Saghf, Code_no_Sakhteman, No_Nama, No_Nama_Code, Masahat_zirzamin FROM dbo"& _ 
                ".Tbl_Moshakhasat_Sakhteman"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DB_NoSaziDataSet.Tbl_Moshakhasat_SakhtemanDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DB_NoSaziDataSet.Tbl_Moshakhasat_SakhtemanDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DB_NoSaziDataSet.Tbl_Moshakhasat_SakhtemanDataTable = New DB_NoSaziDataSet.Tbl_Moshakhasat_SakhtemanDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DB_NoSaziDataSet.Tbl_Moshakhasat_SakhtemanDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DB_NoSaziDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "Tbl_Moshakhasat_Sakhteman")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Shomare_Shenasnameh As String, ByVal Tedad_Tabaghat As Global.System.Nullable(Of Single), ByVal Masahat_Zirbana As Global.System.Nullable(Of Single), ByVal Masahat_Bana As Global.System.Nullable(Of Single), ByVal Masahat_Hararat As Global.System.Nullable(Of Single), ByVal Masahat_Tahvieh As Global.System.Nullable(Of Single), ByVal Masahat_Khonak As Global.System.Nullable(Of Single), ByVal Masahat_Asansor As Global.System.Nullable(Of Single), ByVal Sharh_No_Divar As String, ByVal Sharh_No_Saghf As String, ByVal Code_no_Sakhteman As Global.System.Nullable(Of Byte), ByVal No_Nama As String, ByVal No_Nama_Code As Global.System.Nullable(Of Byte), ByVal Masahat_zirzamin As Global.System.Nullable(Of Single)) As Integer
            If (Shomare_Shenasnameh Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Shomare_Shenasnameh,String)
            End If
            If (Tedad_Tabaghat.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Tedad_Tabaghat.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Masahat_Zirbana.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Masahat_Zirbana.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Masahat_Bana.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(Masahat_Bana.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Masahat_Hararat.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(Masahat_Hararat.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Masahat_Tahvieh.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(Masahat_Tahvieh.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Masahat_Khonak.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(Masahat_Khonak.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Masahat_Asansor.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(Masahat_Asansor.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (Sharh_No_Divar Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(Sharh_No_Divar,String)
            End If
            If (Sharh_No_Saghf Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(Sharh_No_Saghf,String)
            End If
            If (Code_no_Sakhteman.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(Code_no_Sakhteman.Value,Byte)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (No_Nama Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(No_Nama,String)
            End If
            If (No_Nama_Code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(No_Nama_Code.Value,Byte)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Masahat_zirzamin.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(Masahat_zirzamin.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Select_Tbl_Moshakhasat_SakhtemanTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Select_Tbl_Moshakhasat_Sakhteman"
            tableMapping.ColumnMappings.Add("Shomare_Shenasnameh", "Shomare_Shenasnameh")
            tableMapping.ColumnMappings.Add("Tedad_Tabaghat", "Tedad_Tabaghat")
            tableMapping.ColumnMappings.Add("Masahat_Zirbana", "Masahat_Zirbana")
            tableMapping.ColumnMappings.Add("Masahat_Bana", "Masahat_Bana")
            tableMapping.ColumnMappings.Add("Masahat_Hararat", "Masahat_Hararat")
            tableMapping.ColumnMappings.Add("Masahat_Tahvieh", "Masahat_Tahvieh")
            tableMapping.ColumnMappings.Add("Masahat_Khonak", "Masahat_Khonak")
            tableMapping.ColumnMappings.Add("Masahat_Asansor", "Masahat_Asansor")
            tableMapping.ColumnMappings.Add("Sharh_No_Divar", "Sharh_No_Divar")
            tableMapping.ColumnMappings.Add("Sharh_No_Saghf", "Sharh_No_Saghf")
            tableMapping.ColumnMappings.Add("Code_no_Sakhteman", "Code_no_Sakhteman")
            tableMapping.ColumnMappings.Add("No_Nama", "No_Nama")
            tableMapping.ColumnMappings.Add("No_Nama_Code", "No_Nama_Code")
            tableMapping.ColumnMappings.Add("Masahat_zirzamin", "Masahat_zirzamin")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Amlak.My.MySettings.Default.DB_NoSaziConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.Select_Tbl_Moshakhasat_Sakhteman"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SHsh", Global.System.Data.SqlDbType.VarChar, 27, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DB_NoSaziDataSet.Select_Tbl_Moshakhasat_SakhtemanDataTable, ByVal SHsh As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (SHsh Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(SHsh,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal SHsh As String) As DB_NoSaziDataSet.Select_Tbl_Moshakhasat_SakhtemanDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (SHsh Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(SHsh,String)
            End If
            Dim dataTable As DB_NoSaziDataSet.Select_Tbl_Moshakhasat_SakhtemanDataTable = New DB_NoSaziDataSet.Select_Tbl_Moshakhasat_SakhtemanDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Select_Tbl_EshterakTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Select_Tbl_Eshterak"
            tableMapping.ColumnMappings.Add("Shomare_Shenasnameh", "Shomare_Shenasnameh")
            tableMapping.ColumnMappings.Add("Hajm_Estakhr", "Hajm_Estakhr")
            tableMapping.ColumnMappings.Add("Masahat_Estakhr", "Masahat_Estakhr")
            tableMapping.ColumnMappings.Add("Masahat_Golkhaneh", "Masahat_Golkhaneh")
            tableMapping.ColumnMappings.Add("Tedad_Chah", "Tedad_Chah")
            tableMapping.ColumnMappings.Add("Shomareh_Ab", "Shomareh_Ab")
            tableMapping.ColumnMappings.Add("Shomareh_Bargh", "Shomareh_Bargh")
            tableMapping.ColumnMappings.Add("Shomareh_Gaz", "Shomareh_Gaz")
            tableMapping.ColumnMappings.Add("Shomareh_Tel", "Shomareh_Tel")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Amlak.My.MySettings.Default.DB_NoSaziConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.Select_Tbl_Eshterak"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SHsh", Global.System.Data.SqlDbType.VarChar, 27, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DB_NoSaziDataSet.Select_Tbl_EshterakDataTable, ByVal SHsh As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (SHsh Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(SHsh,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal SHsh As String) As DB_NoSaziDataSet.Select_Tbl_EshterakDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (SHsh Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(SHsh,String)
            End If
            Dim dataTable As DB_NoSaziDataSet.Select_Tbl_EshterakDataTable = New DB_NoSaziDataSet.Select_Tbl_EshterakDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Select_Tbl_Afrad_MomayeziTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Select_Tbl_Afrad_Momayezi"
            tableMapping.ColumnMappings.Add("Shomare_Shenasnameh", "Shomare_Shenasnameh")
            tableMapping.ColumnMappings.Add("Momayez_Tarikh", "Momayez_Tarikh")
            tableMapping.ColumnMappings.Add("Momayez_Name", "Momayez_Name")
            tableMapping.ColumnMappings.Add("Bazbin_Tarikh", "Bazbin_Tarikh")
            tableMapping.ColumnMappings.Add("Bazbin_Name", "Bazbin_Name")
            tableMapping.ColumnMappings.Add("SNahieh_Tarikh", "SNahieh_Tarikh")
            tableMapping.ColumnMappings.Add("SNahieh_Name", "SNahieh_Name")
            tableMapping.ColumnMappings.Add("SMantagheh_Tarikh", "SMantagheh_Tarikh")
            tableMapping.ColumnMappings.Add("SMantagheh_Name", "SMantagheh_Name")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Amlak.My.MySettings.Default.DB_NoSaziConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.Select_Tbl_Afrad_Momayezi"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Shsh", Global.System.Data.SqlDbType.VarChar, 27, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DB_NoSaziDataSet.Select_Tbl_Afrad_MomayeziDataTable, ByVal Shsh As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Shsh Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Shsh,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Shsh As String) As DB_NoSaziDataSet.Select_Tbl_Afrad_MomayeziDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Shsh Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Shsh,String)
            End If
            Dim dataTable As DB_NoSaziDataSet.Select_Tbl_Afrad_MomayeziDataTable = New DB_NoSaziDataSet.Select_Tbl_Afrad_MomayeziDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Select_Tbl_MomayeziTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Select_Tbl_Momayezi"
            tableMapping.ColumnMappings.Add("Shomare_Shenasnameh", "Shomare_Shenasnameh")
            tableMapping.ColumnMappings.Add("Tarikh", "Tarikh")
            tableMapping.ColumnMappings.Add("Vazeiat", "Vazeiat")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Amlak.My.MySettings.Default.DB_NoSaziConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.Select_Tbl_Momayezi"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SHsh", Global.System.Data.SqlDbType.VarChar, 27, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DB_NoSaziDataSet.Select_Tbl_MomayeziDataTable, ByVal SHsh As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (SHsh Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(SHsh,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal SHsh As String) As DB_NoSaziDataSet.Select_Tbl_MomayeziDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (SHsh Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(SHsh,String)
            End If
            Dim dataTable As DB_NoSaziDataSet.Select_Tbl_MomayeziDataTable = New DB_NoSaziDataSet.Select_Tbl_MomayeziDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Select_DFN_BLOCKTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Select_DFN_BLOCK"
            tableMapping.ColumnMappings.Add("Code", "Code")
            tableMapping.ColumnMappings.Add("Code_SHsh", "Code_SHsh")
            tableMapping.ColumnMappings.Add("Sharh", "Sharh")
            tableMapping.ColumnMappings.Add("Shomal", "Shomal")
            tableMapping.ColumnMappings.Add("Shargh", "Shargh")
            tableMapping.ColumnMappings.Add("Jonoub", "Jonoub")
            tableMapping.ColumnMappings.Add("Gharb", "Gharb")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.Amlak.My.MySettings.Default.DB_NoSaziConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.Select_DFN_BLOCK"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Code_Block", Global.System.Data.SqlDbType.VarChar, 5, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sharh", Global.System.Data.SqlDbType.VarChar, 150, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DB_NoSaziDataSet.Select_DFN_BLOCKDataTable, ByVal Code_Block As String, ByVal Sharh As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Code_Block Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Code_Block,String)
            End If
            If (Sharh Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Sharh,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Code_Block As String, ByVal Sharh As String) As DB_NoSaziDataSet.Select_DFN_BLOCKDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Code_Block Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Code_Block,String)
            End If
            If (Sharh Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Sharh,String)
            End If
            Dim dataTable As DB_NoSaziDataSet.Select_DFN_BLOCKDataTable = New DB_NoSaziDataSet.Select_DFN_BLOCKDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class QueriesTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private _commandCollection() As Global.System.Data.IDbCommand
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.IDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.IDbCommand(26) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            CType(Me._commandCollection(0),Global.System.Data.SqlClient.SqlCommand).Connection = New Global.System.Data.SqlClient.SqlConnection(Global.Amlak.My.MySettings.Default.DB_NoSaziConnectionString)
            CType(Me._commandCollection(0),Global.System.Data.SqlClient.SqlCommand).CommandText = "dbo.Insert_DFN_BLOCK"
            CType(Me._commandCollection(0),Global.System.Data.SqlClient.SqlCommand).CommandType = Global.System.Data.CommandType.StoredProcedure
            CType(Me._commandCollection(0),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(0),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Code", Global.System.Data.SqlDbType.TinyInt, 1, Global.System.Data.ParameterDirection.Input, 3, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(0),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Code_SHsh", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(0),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sharh", Global.System.Data.SqlDbType.VarChar, 150, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(0),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Shomal", Global.System.Data.SqlDbType.NText, 1073741823, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(0),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Shargh", Global.System.Data.SqlDbType.NText, 1073741823, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(0),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Jonoub", Global.System.Data.SqlDbType.NText, 1073741823, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(0),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Gharb", Global.System.Data.SqlDbType.NText, 1073741823, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand
            CType(Me._commandCollection(1),Global.System.Data.SqlClient.SqlCommand).Connection = New Global.System.Data.SqlClient.SqlConnection(Global.Amlak.My.MySettings.Default.DB_NoSaziConnectionString)
            CType(Me._commandCollection(1),Global.System.Data.SqlClient.SqlCommand).CommandText = "dbo.Insert_DFN_Gheymat"
            CType(Me._commandCollection(1),Global.System.Data.SqlClient.SqlCommand).CommandType = Global.System.Data.CommandType.StoredProcedure
            CType(Me._commandCollection(1),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(1),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Code_Block", Global.System.Data.SqlDbType.VarChar, 5, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(1),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sal", Global.System.Data.SqlDbType.VarChar, 4, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(1),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Gheymat", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(1),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sharh", Global.System.Data.SqlDbType.NVarChar, 200, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand
            CType(Me._commandCollection(2),Global.System.Data.SqlClient.SqlCommand).Connection = New Global.System.Data.SqlClient.SqlConnection(Global.Amlak.My.MySettings.Default.DB_NoSaziConnectionString)
            CType(Me._commandCollection(2),Global.System.Data.SqlClient.SqlCommand).CommandText = "dbo.Insert_Tbl_Afrad_Momayezi"
            CType(Me._commandCollection(2),Global.System.Data.SqlClient.SqlCommand).CommandType = Global.System.Data.CommandType.StoredProcedure
            CType(Me._commandCollection(2),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(2),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Shomare_Shenasnameh", Global.System.Data.SqlDbType.VarChar, 27, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(2),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Momayez_Tarikh", Global.System.Data.SqlDbType.VarChar, 8, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(2),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Momayez_Name", Global.System.Data.SqlDbType.VarChar, 60, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(2),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Bazbin_Tarikh", Global.System.Data.SqlDbType.VarChar, 8, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(2),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Bazbin_Name", Global.System.Data.SqlDbType.VarChar, 60, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(2),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SNahieh_Tarikh", Global.System.Data.SqlDbType.VarChar, 8, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(2),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SNahieh_Name", Global.System.Data.SqlDbType.VarChar, 60, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(2),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SMantagheh_Tarikh", Global.System.Data.SqlDbType.VarChar, 8, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(2),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SMantagheh_Name", Global.System.Data.SqlDbType.VarChar, 60, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand
            CType(Me._commandCollection(3),Global.System.Data.SqlClient.SqlCommand).Connection = New Global.System.Data.SqlClient.SqlConnection(Global.Amlak.My.MySettings.Default.DB_NoSaziConnectionString)
            CType(Me._commandCollection(3),Global.System.Data.SqlClient.SqlCommand).CommandText = "dbo.Insert_Tbl_Derakht"
            CType(Me._commandCollection(3),Global.System.Data.SqlClient.SqlCommand).CommandType = Global.System.Data.CommandType.StoredProcedure
            CType(Me._commandCollection(3),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(3),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Shomare_Shenasnameh", Global.System.Data.SqlDbType.VarChar, 27, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(3),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@No", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(3),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Bon", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4) = New Global.System.Data.SqlClient.SqlCommand
            CType(Me._commandCollection(4),Global.System.Data.SqlClient.SqlCommand).Connection = New Global.System.Data.SqlClient.SqlConnection(Global.Amlak.My.MySettings.Default.DB_NoSaziConnectionString)
            CType(Me._commandCollection(4),Global.System.Data.SqlClient.SqlCommand).CommandText = "dbo.Insert_Tbl_Eshterak"
            CType(Me._commandCollection(4),Global.System.Data.SqlClient.SqlCommand).CommandType = Global.System.Data.CommandType.StoredProcedure
            CType(Me._commandCollection(4),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(4),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Shomare_Shenasnameh", Global.System.Data.SqlDbType.VarChar, 27, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(4),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Hajm_Estakhr", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 24, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(4),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Masahat_Estakhr", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 24, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(4),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Masahat_Golkhaneh", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 24, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(4),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tedad_Chah", Global.System.Data.SqlDbType.TinyInt, 1, Global.System.Data.ParameterDirection.Input, 3, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(4),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Shomareh_Ab", Global.System.Data.SqlDbType.VarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(4),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Shomareh_Bargh", Global.System.Data.SqlDbType.VarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(4),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Shomareh_Gaz", Global.System.Data.SqlDbType.VarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(4),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Shomareh_Tel", Global.System.Data.SqlDbType.VarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5) = New Global.System.Data.SqlClient.SqlCommand
            CType(Me._commandCollection(5),Global.System.Data.SqlClient.SqlCommand).Connection = New Global.System.Data.SqlClient.SqlConnection(Global.Amlak.My.MySettings.Default.DB_NoSaziConnectionString)
            CType(Me._commandCollection(5),Global.System.Data.SqlClient.SqlCommand).CommandText = "dbo.Insert_Tbl_Momayezi"
            CType(Me._commandCollection(5),Global.System.Data.SqlClient.SqlCommand).CommandType = Global.System.Data.CommandType.StoredProcedure
            CType(Me._commandCollection(5),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(5),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Shomare_Shenasnameh", Global.System.Data.SqlDbType.VarChar, 27, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(5),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tarikh", Global.System.Data.SqlDbType.VarChar, 8, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(5),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Vazeiat", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6) = New Global.System.Data.SqlClient.SqlCommand
            CType(Me._commandCollection(6),Global.System.Data.SqlClient.SqlCommand).Connection = New Global.System.Data.SqlClient.SqlConnection(Global.Amlak.My.MySettings.Default.DB_NoSaziConnectionString)
            CType(Me._commandCollection(6),Global.System.Data.SqlClient.SqlCommand).CommandText = "dbo.Insert_Tbl_Moshakhasat_Malekin"
            CType(Me._commandCollection(6),Global.System.Data.SqlClient.SqlCommand).CommandType = Global.System.Data.CommandType.StoredProcedure
            CType(Me._commandCollection(6),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(6),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Shomare_Shenasnameh", Global.System.Data.SqlDbType.VarChar, 27, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(6),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tarikh_Tamallok", Global.System.Data.SqlDbType.VarChar, 8, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(6),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@No_Malekiyat_Code", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(6),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@No_Malekiyat_Tedad", Global.System.Data.SqlDbType.TinyInt, 1, Global.System.Data.ParameterDirection.Input, 3, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(6),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Vaziyat_Tamallok", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(6),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Code_No_Malekiat", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(6),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Malek_Name", Global.System.Data.SqlDbType.VarChar, 30, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(6),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Malek_Family", Global.System.Data.SqlDbType.VarChar, 35, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(6),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Malek_Name_Pedar", Global.System.Data.SqlDbType.VarChar, 30, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(6),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Malek_SHsh", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(6),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Malek_CodeMelli", Global.System.Data.SqlDbType.VarChar, 12, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(6),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Malek_MahalSodur", Global.System.Data.SqlDbType.VarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(6),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Malek_Address", Global.System.Data.SqlDbType.VarChar, 150, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(6),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Malek_Tel", Global.System.Data.SqlDbType.VarChar, 30, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(7) = New Global.System.Data.SqlClient.SqlCommand
            CType(Me._commandCollection(7),Global.System.Data.SqlClient.SqlCommand).Connection = New Global.System.Data.SqlClient.SqlConnection(Global.Amlak.My.MySettings.Default.DB_NoSaziConnectionString)
            CType(Me._commandCollection(7),Global.System.Data.SqlClient.SqlCommand).CommandText = "dbo.Insert_Tbl_Mahiyat_Fiziki"
            CType(Me._commandCollection(7),Global.System.Data.SqlClient.SqlCommand).CommandType = Global.System.Data.CommandType.StoredProcedure
            CType(Me._commandCollection(7),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(7),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SHsh", Global.System.Data.SqlDbType.VarChar, 27, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(7),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C300", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(7),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C301", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(7),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C302", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(7),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C303", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(7),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C304", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(7),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C305", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(7),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C306", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(7),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C307", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(8) = New Global.System.Data.SqlClient.SqlCommand
            CType(Me._commandCollection(8),Global.System.Data.SqlClient.SqlCommand).Connection = New Global.System.Data.SqlClient.SqlConnection(Global.Amlak.My.MySettings.Default.DB_NoSaziConnectionString)
            CType(Me._commandCollection(8),Global.System.Data.SqlClient.SqlCommand).CommandText = "dbo.Update_Tbl_Mahiyat_Fiziki"
            CType(Me._commandCollection(8),Global.System.Data.SqlClient.SqlCommand).CommandType = Global.System.Data.CommandType.StoredProcedure
            CType(Me._commandCollection(8),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(8),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SHsh", Global.System.Data.SqlDbType.VarChar, 27, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(8),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C300", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(8),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C301", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(8),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C302", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(8),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C303", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(8),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C304", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(8),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C305", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(8),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C306", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(8),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C307", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(9) = New Global.System.Data.SqlClient.SqlCommand
            CType(Me._commandCollection(9),Global.System.Data.SqlClient.SqlCommand).Connection = New Global.System.Data.SqlClient.SqlConnection(Global.Amlak.My.MySettings.Default.DB_NoSaziConnectionString)
            CType(Me._commandCollection(9),Global.System.Data.SqlClient.SqlCommand).CommandText = "dbo.[Insert_Update_TAmlak ]"
            CType(Me._commandCollection(9),Global.System.Data.SqlClient.SqlCommand).CommandType = Global.System.Data.CommandType.StoredProcedure
            CType(Me._commandCollection(9),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(9),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SHsh", Global.System.Data.SqlDbType.VarChar, 27, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(9),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Kasri", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 24, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(9),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Ezafat", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 24, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(9),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@No_Melk", Global.System.Data.SqlDbType.TinyInt, 1, Global.System.Data.ParameterDirection.Input, 3, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(9),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Masahat_ZirBana", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 24, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(9),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tedad_vahed", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(9),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Masahat_Bana", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 24, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(9),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Arzesh_Moamelati", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 24, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(9),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TKasri_Zamin", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(9),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TAzafe_tarakom", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(9),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@THagh_Nezareh", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(9),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TSodore_ParvanehAnboh", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(9),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TSodore_ParvanehVilaie", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(9),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TSath_Shahr", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(9),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TNosazi", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(9),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TTamirat", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(9),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TTransfer", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(9),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tpazireh", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(10) = New Global.System.Data.SqlClient.SqlCommand
            CType(Me._commandCollection(10),Global.System.Data.SqlClient.SqlCommand).Connection = New Global.System.Data.SqlClient.SqlConnection(Global.Amlak.My.MySettings.Default.DB_NoSaziConnectionString)
            CType(Me._commandCollection(10),Global.System.Data.SqlClient.SqlCommand).CommandText = "dbo.Insert_TAmlak"
            CType(Me._commandCollection(10),Global.System.Data.SqlClient.SqlCommand).CommandType = Global.System.Data.CommandType.StoredProcedure
            CType(Me._commandCollection(10),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(10),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SHsh", Global.System.Data.SqlDbType.VarChar, 27, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(10),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Kasri", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 24, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(10),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Ezafat", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 24, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(10),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@No_Melk", Global.System.Data.SqlDbType.TinyInt, 1, Global.System.Data.ParameterDirection.Input, 3, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(10),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Masahat_ZirBana", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 24, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(10),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tedad_vahed", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(10),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Masahat_Bana", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 24, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(10),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Arzesh_Moamelati", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 24, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(10),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TKasri_Zamin", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(10),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TAzafe_tarakom", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(10),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@THagh_Nezareh", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(10),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TSodore_ParvanehAnboh", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(10),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TSodore_ParvanehVilaie", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(10),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TSath_Shahr", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(10),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TNosazi", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(10),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TTamirat", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(10),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TTransfer", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(10),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tpazireh", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(11) = New Global.System.Data.SqlClient.SqlCommand
            CType(Me._commandCollection(11),Global.System.Data.SqlClient.SqlCommand).Connection = New Global.System.Data.SqlClient.SqlConnection(Global.Amlak.My.MySettings.Default.DB_NoSaziConnectionString)
            CType(Me._commandCollection(11),Global.System.Data.SqlClient.SqlCommand).CommandText = "dbo.Update_TAmlak"
            CType(Me._commandCollection(11),Global.System.Data.SqlClient.SqlCommand).CommandType = Global.System.Data.CommandType.StoredProcedure
            CType(Me._commandCollection(11),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(11),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SHsh", Global.System.Data.SqlDbType.VarChar, 27, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(11),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Kasri", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 24, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(11),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Ezafat", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 24, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(11),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@No_Melk", Global.System.Data.SqlDbType.TinyInt, 1, Global.System.Data.ParameterDirection.Input, 3, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(11),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Masahat_ZirBana", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 24, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(11),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tedad_vahed", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(11),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Masahat_Bana", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 24, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(11),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Arzesh_Moamelati", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 24, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(11),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TKasri_Zamin", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(11),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TAzafe_tarakom", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(11),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@THagh_Nezareh", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(11),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TSodore_ParvanehAnboh", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(11),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TSodore_ParvanehVilaie", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(11),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TSath_Shahr", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(11),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TNosazi", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(11),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TTamirat", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(11),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TTransfer", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(11),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tpazireh", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(12) = New Global.System.Data.SqlClient.SqlCommand
            CType(Me._commandCollection(12),Global.System.Data.SqlClient.SqlCommand).Connection = New Global.System.Data.SqlClient.SqlConnection(Global.Amlak.My.MySettings.Default.DB_NoSaziConnectionString)
            CType(Me._commandCollection(12),Global.System.Data.SqlClient.SqlCommand).CommandText = "dbo.Insert_Tbl_Moshakhasat_Zamin"
            CType(Me._commandCollection(12),Global.System.Data.SqlClient.SqlCommand).CommandType = Global.System.Data.CommandType.StoredProcedure
            CType(Me._commandCollection(12),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(12),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Shomare_Shenasnameh", Global.System.Data.SqlDbType.VarChar, 27, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(12),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Radif", Global.System.Data.SqlDbType.TinyInt, 1, Global.System.Data.ParameterDirection.Input, 3, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(12),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Jahat", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(12),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tool_Zel", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 24, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(12),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tool_Bar", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 24, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(12),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaAbar_Name", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(12),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaAbar_Arz", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 24, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(12),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaAbar_radif", Global.System.Data.SqlDbType.TinyInt, 1, Global.System.Data.ParameterDirection.Input, 3, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(12),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@zavieh", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(12),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Masahat_jebheh1", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 24, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(12),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Masahat_Jebheh2", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 24, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(13) = New Global.System.Data.SqlClient.SqlCommand
            CType(Me._commandCollection(13),Global.System.Data.SqlClient.SqlCommand).Connection = New Global.System.Data.SqlClient.SqlConnection(Global.Amlak.My.MySettings.Default.DB_NoSaziConnectionString)
            CType(Me._commandCollection(13),Global.System.Data.SqlClient.SqlCommand).CommandText = "dbo.Update_Tbl_Moshakhasat_Zamin"
            CType(Me._commandCollection(13),Global.System.Data.SqlClient.SqlCommand).CommandType = Global.System.Data.CommandType.StoredProcedure
            CType(Me._commandCollection(13),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(13),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Shomare_Shenasnameh", Global.System.Data.SqlDbType.VarChar, 27, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(13),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Param_Jahat", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(13),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Radif", Global.System.Data.SqlDbType.TinyInt, 1, Global.System.Data.ParameterDirection.Input, 3, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(13),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Jahat", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(13),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tool_Zel", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 24, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(13),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tool_Bar", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 24, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(13),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaAbar_Name", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(13),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaAbar_Arz", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 24, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(13),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaAbar_radif", Global.System.Data.SqlDbType.TinyInt, 1, Global.System.Data.ParameterDirection.Input, 3, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(13),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@zavieh", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(13),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Masahat_jebheh1", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 24, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(13),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Masahat_Jebheh2", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 24, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(14) = New Global.System.Data.SqlClient.SqlCommand
            CType(Me._commandCollection(14),Global.System.Data.SqlClient.SqlCommand).Connection = New Global.System.Data.SqlClient.SqlConnection(Global.Amlak.My.MySettings.Default.DB_NoSaziConnectionString)
            CType(Me._commandCollection(14),Global.System.Data.SqlClient.SqlCommand).CommandText = "dbo.Update_Tbl_Moshakhasat_Malekin"
            CType(Me._commandCollection(14),Global.System.Data.SqlClient.SqlCommand).CommandType = Global.System.Data.CommandType.StoredProcedure
            CType(Me._commandCollection(14),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(14),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Shomare_Shenasnameh", Global.System.Data.SqlDbType.VarChar, 27, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(14),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Malek_CodeMelli_Param", Global.System.Data.SqlDbType.VarChar, 12, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(14),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Radif", Global.System.Data.SqlDbType.TinyInt, 1, Global.System.Data.ParameterDirection.Input, 3, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(14),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tarikh_Tamallok", Global.System.Data.SqlDbType.VarChar, 8, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(14),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@No_Malekiyat_Code", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(14),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@No_Malekiyat_Tedad", Global.System.Data.SqlDbType.TinyInt, 1, Global.System.Data.ParameterDirection.Input, 3, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(14),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Vaziyat_Tamallok", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(14),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Code_No_Malekiat", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(14),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Malek_Name", Global.System.Data.SqlDbType.VarChar, 30, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(14),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Malek_Family", Global.System.Data.SqlDbType.VarChar, 35, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(14),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Malek_Name_Pedar", Global.System.Data.SqlDbType.VarChar, 30, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(14),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Malek_SHsh", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(14),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Malek_CodeMelli", Global.System.Data.SqlDbType.VarChar, 12, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(14),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Malek_MahalSodur", Global.System.Data.SqlDbType.VarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(14),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Malek_Address", Global.System.Data.SqlDbType.VarChar, 150, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(14),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Malek_Tel", Global.System.Data.SqlDbType.VarChar, 30, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(15) = New Global.System.Data.SqlClient.SqlCommand
            CType(Me._commandCollection(15),Global.System.Data.SqlClient.SqlCommand).Connection = New Global.System.Data.SqlClient.SqlConnection(Global.Amlak.My.MySettings.Default.DB_NoSaziConnectionString)
            CType(Me._commandCollection(15),Global.System.Data.SqlClient.SqlCommand).CommandText = "dbo.Insert_Tbl_No_Estefadeh"
            CType(Me._commandCollection(15),Global.System.Data.SqlClient.SqlCommand).CommandType = Global.System.Data.CommandType.StoredProcedure
            CType(Me._commandCollection(15),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(15),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Shomare_Shenasnameh", Global.System.Data.SqlDbType.VarChar, 27, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(15),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C350", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(15),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C351", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(15),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C352", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(15),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C353", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(15),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C354", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(15),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C355", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(15),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C356", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(15),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C357", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(15),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C358", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(15),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C359", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(15),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C360", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(15),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C361", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(15),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C362", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(15),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C363", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(15),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C364", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(15),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C365", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(15),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C366", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(15),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C367", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(15),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C368", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(15),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C369", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(15),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C370", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(15),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C371", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(15),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C372", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(16) = New Global.System.Data.SqlClient.SqlCommand
            CType(Me._commandCollection(16),Global.System.Data.SqlClient.SqlCommand).Connection = New Global.System.Data.SqlClient.SqlConnection(Global.Amlak.My.MySettings.Default.DB_NoSaziConnectionString)
            CType(Me._commandCollection(16),Global.System.Data.SqlClient.SqlCommand).CommandText = "dbo.Update_Tbl_No_Estefadeh"
            CType(Me._commandCollection(16),Global.System.Data.SqlClient.SqlCommand).CommandType = Global.System.Data.CommandType.StoredProcedure
            CType(Me._commandCollection(16),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(16),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SHsh", Global.System.Data.SqlDbType.VarChar, 27, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(16),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C350", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(16),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C351", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(16),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C352", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(16),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C353", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(16),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C354", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(16),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C355", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(16),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C356", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(16),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C357", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(16),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C358", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(16),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C359", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(16),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C360", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(16),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C361", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(16),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C362", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(16),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C363", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(16),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C364", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(16),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C365", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(16),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C366", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(16),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C367", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(16),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C368", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(16),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C369", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(16),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C370", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(16),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C371", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(16),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C372", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(17) = New Global.System.Data.SqlClient.SqlCommand
            CType(Me._commandCollection(17),Global.System.Data.SqlClient.SqlCommand).Connection = New Global.System.Data.SqlClient.SqlConnection(Global.Amlak.My.MySettings.Default.DB_NoSaziConnectionString)
            CType(Me._commandCollection(17),Global.System.Data.SqlClient.SqlCommand).CommandText = "dbo.Exists_For_Update"
            CType(Me._commandCollection(17),Global.System.Data.SqlClient.SqlCommand).CommandType = Global.System.Data.CommandType.StoredProcedure
            CType(Me._commandCollection(17),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(17),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SHsh", Global.System.Data.SqlDbType.VarChar, 27, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(17),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Table_Name", Global.System.Data.SqlDbType.VarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(18) = New Global.System.Data.SqlClient.SqlCommand
            CType(Me._commandCollection(18),Global.System.Data.SqlClient.SqlCommand).Connection = New Global.System.Data.SqlClient.SqlConnection(Global.Amlak.My.MySettings.Default.DB_NoSaziConnectionString)
            CType(Me._commandCollection(18),Global.System.Data.SqlClient.SqlCommand).CommandText = "dbo.Insert_TBL_Amlak_Mostaghelat"
            CType(Me._commandCollection(18),Global.System.Data.SqlClient.SqlCommand).CommandType = Global.System.Data.CommandType.StoredProcedure
            CType(Me._commandCollection(18),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(18),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tarikh_Malekiat", Global.System.Data.SqlDbType.VarChar, 8, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(18),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tarikh_PMalekiat", Global.System.Data.SqlDbType.VarChar, 8, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(18),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Shomare_Shenasnameh", Global.System.Data.SqlDbType.VarChar, 27, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(18),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@N_Mashhoor", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(18),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@N_Khiaban", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(18),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@N_Meydan", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(18),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@N_Bazar", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(18),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@N_Pasaj", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(18),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@N_Koocheh", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(18),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@N_BonBast", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(18),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@N_PelakAbi", Global.System.Data.SqlDbType.VarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(18),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@N_Name_Block", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(18),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@N_Tabagheh", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(18),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@N_Code_Posti", Global.System.Data.SqlDbType.VarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(18),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@N_Radif_MGhabli", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(18),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Masahat_Zamin", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 24, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(18),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Masahat_Jebheh", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 24, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(18),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Masahat_PJebheh", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 24, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(18),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tedad_Zel", Global.System.Data.SqlDbType.TinyInt, 1, Global.System.Data.ParameterDirection.Input, 3, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(18),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Bar_Tedad", Global.System.Data.SqlDbType.TinyInt, 1, Global.System.Data.ParameterDirection.Input, 3, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(18),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Bar_Onvan", Global.System.Data.SqlDbType.TinyInt, 1, Global.System.Data.ParameterDirection.Input, 3, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(18),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tedad_Malek", Global.System.Data.SqlDbType.TinyInt, 1, Global.System.Data.ParameterDirection.Input, 3, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(18),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@No_Moshakhasat", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(18),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tedad_Sakhteman", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(18),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tedad_Aparteman", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 24, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(18),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tedad_Vahed_Kasb", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(18),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Masahat_Melk", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 24, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(18),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Metr_Dar", Global.System.Data.SqlDbType.VarChar, 15, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(18),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Rah_Mostaghel", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(18),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tedad_Vahed", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(18),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@No_Malekiyat", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(18),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Name_Malek", Global.System.Data.SqlDbType.VarChar, 60, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(18),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Hozoor", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(19) = New Global.System.Data.SqlClient.SqlCommand
            CType(Me._commandCollection(19),Global.System.Data.SqlClient.SqlCommand).Connection = New Global.System.Data.SqlClient.SqlConnection(Global.Amlak.My.MySettings.Default.DB_NoSaziConnectionString)
            CType(Me._commandCollection(19),Global.System.Data.SqlClient.SqlCommand).CommandText = "dbo.Update_Tbl_Amlak_Mostaghelat"
            CType(Me._commandCollection(19),Global.System.Data.SqlClient.SqlCommand).CommandType = Global.System.Data.CommandType.StoredProcedure
            CType(Me._commandCollection(19),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(19),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SHsh", Global.System.Data.SqlDbType.VarChar, 27, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(19),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tarikh_Malekiat", Global.System.Data.SqlDbType.VarChar, 8, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(19),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tarikh_PMalekiat", Global.System.Data.SqlDbType.VarChar, 8, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(19),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Shomare_Shenasnameh", Global.System.Data.SqlDbType.VarChar, 27, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(19),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@N_Mashhoor", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(19),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@N_Khiaban", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(19),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@N_Meydan", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(19),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@N_Bazar", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(19),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@N_Pasaj", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(19),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@N_Koocheh", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(19),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@N_BonBast", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(19),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@N_PelakAbi", Global.System.Data.SqlDbType.VarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(19),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@N_Name_Block", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(19),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@N_Tabagheh", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(19),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@N_Code_Posti", Global.System.Data.SqlDbType.VarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(19),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@N_Radif_MGhabli", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(19),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Masahat_Zamin", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 24, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(19),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Masahat_Jebheh", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 24, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(19),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Masahat_PJebheh", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 24, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(19),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tedad_Zel", Global.System.Data.SqlDbType.TinyInt, 1, Global.System.Data.ParameterDirection.Input, 3, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(19),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Bar_Tedad", Global.System.Data.SqlDbType.TinyInt, 1, Global.System.Data.ParameterDirection.Input, 3, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(19),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Bar_Onvan", Global.System.Data.SqlDbType.TinyInt, 1, Global.System.Data.ParameterDirection.Input, 3, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(19),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tedad_Malek", Global.System.Data.SqlDbType.TinyInt, 1, Global.System.Data.ParameterDirection.Input, 3, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(19),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@No_Moshakhasat", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(19),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tedad_Sakhteman", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(19),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tedad_Aparteman", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 24, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(19),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tedad_Vahed_Kasb", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(19),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Masahat_Melk", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 24, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(19),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Metr_Dar", Global.System.Data.SqlDbType.VarChar, 15, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(19),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Rah_Mostaghel", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(19),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tedad_Vahed", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(19),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@No_Malekiyat", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(19),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Name_Malek", Global.System.Data.SqlDbType.VarChar, 60, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(19),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Hozoor", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(20) = New Global.System.Data.SqlClient.SqlCommand
            CType(Me._commandCollection(20),Global.System.Data.SqlClient.SqlCommand).Connection = New Global.System.Data.SqlClient.SqlConnection(Global.Amlak.My.MySettings.Default.DB_NoSaziConnectionString)
            CType(Me._commandCollection(20),Global.System.Data.SqlClient.SqlCommand).CommandText = "dbo.Update_Tbl_Derakht"
            CType(Me._commandCollection(20),Global.System.Data.SqlClient.SqlCommand).CommandType = Global.System.Data.CommandType.StoredProcedure
            CType(Me._commandCollection(20),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(20),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SHsh", Global.System.Data.SqlDbType.VarChar, 27, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(20),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@No_Param", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(20),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Bon_Param", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(20),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@No", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(20),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Bon", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(21) = New Global.System.Data.SqlClient.SqlCommand
            CType(Me._commandCollection(21),Global.System.Data.SqlClient.SqlCommand).Connection = New Global.System.Data.SqlClient.SqlConnection(Global.Amlak.My.MySettings.Default.DB_NoSaziConnectionString)
            CType(Me._commandCollection(21),Global.System.Data.SqlClient.SqlCommand).CommandText = "dbo.Insert_Tbl_Moshakhasat_Sakhteman"
            CType(Me._commandCollection(21),Global.System.Data.SqlClient.SqlCommand).CommandType = Global.System.Data.CommandType.StoredProcedure
            CType(Me._commandCollection(21),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(21),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Shomare_Shenasnameh", Global.System.Data.SqlDbType.VarChar, 27, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(21),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tedad_Tabaghat", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 24, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(21),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Masahat_Zirbana", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 24, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(21),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Masahat_Bana", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 24, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(21),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Masahat_Hararat", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 24, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(21),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Masahat_Tahvieh", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 24, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(21),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Masahat_Khonak", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 24, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(21),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Masahat_Asansor", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 24, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(21),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sharh_No_Divar", Global.System.Data.SqlDbType.VarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(21),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sharh_No_Saghf", Global.System.Data.SqlDbType.VarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(21),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Code_no_Sakhteman", Global.System.Data.SqlDbType.TinyInt, 1, Global.System.Data.ParameterDirection.Input, 3, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(21),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@No_Nama", Global.System.Data.SqlDbType.VarChar, 5, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(21),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@No_Nama_Code", Global.System.Data.SqlDbType.TinyInt, 1, Global.System.Data.ParameterDirection.Input, 3, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(21),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Masahat_zirzamin", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 24, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(22) = New Global.System.Data.SqlClient.SqlCommand
            CType(Me._commandCollection(22),Global.System.Data.SqlClient.SqlCommand).Connection = New Global.System.Data.SqlClient.SqlConnection(Global.Amlak.My.MySettings.Default.DB_NoSaziConnectionString)
            CType(Me._commandCollection(22),Global.System.Data.SqlClient.SqlCommand).CommandText = "dbo.Update_Tbl_Moshakhasat_Sakhteman"
            CType(Me._commandCollection(22),Global.System.Data.SqlClient.SqlCommand).CommandType = Global.System.Data.CommandType.StoredProcedure
            CType(Me._commandCollection(22),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(22),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SHsh", Global.System.Data.SqlDbType.VarChar, 27, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(22),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Masahat_Zirbana_Param", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 24, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(22),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Masahat_Bana_Param", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 24, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(22),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tedad_Tabaghat", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 24, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(22),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Masahat_Zirbana", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 24, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(22),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Masahat_Bana", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 24, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(22),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Masahat_Hararat", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 24, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(22),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Masahat_Tahvieh", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 24, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(22),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Masahat_Khonak", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 24, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(22),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Masahat_Asansor", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 24, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(22),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sharh_No_Divar", Global.System.Data.SqlDbType.VarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(22),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sharh_No_Saghf", Global.System.Data.SqlDbType.VarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(22),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Code_no_Sakhteman", Global.System.Data.SqlDbType.TinyInt, 1, Global.System.Data.ParameterDirection.Input, 3, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(22),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@No_Nama", Global.System.Data.SqlDbType.VarChar, 5, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(22),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@No_Nama_Code", Global.System.Data.SqlDbType.TinyInt, 1, Global.System.Data.ParameterDirection.Input, 3, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(22),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Masahat_zirzamin", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 24, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(23) = New Global.System.Data.SqlClient.SqlCommand
            CType(Me._commandCollection(23),Global.System.Data.SqlClient.SqlCommand).Connection = New Global.System.Data.SqlClient.SqlConnection(Global.Amlak.My.MySettings.Default.DB_NoSaziConnectionString)
            CType(Me._commandCollection(23),Global.System.Data.SqlClient.SqlCommand).CommandText = "dbo.Update_Tbl_Eshterak"
            CType(Me._commandCollection(23),Global.System.Data.SqlClient.SqlCommand).CommandType = Global.System.Data.CommandType.StoredProcedure
            CType(Me._commandCollection(23),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(23),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SHsh", Global.System.Data.SqlDbType.VarChar, 27, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(23),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Hajm_Estakhr", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 24, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(23),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Masahat_Estakhr", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 24, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(23),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Masahat_Golkhaneh", Global.System.Data.SqlDbType.Real, 4, Global.System.Data.ParameterDirection.Input, 24, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(23),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tedad_Chah", Global.System.Data.SqlDbType.TinyInt, 1, Global.System.Data.ParameterDirection.Input, 3, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(23),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Shomareh_Ab", Global.System.Data.SqlDbType.VarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(23),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Shomareh_Bargh", Global.System.Data.SqlDbType.VarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(23),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Shomareh_Gaz", Global.System.Data.SqlDbType.VarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(23),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Shomareh_Tel", Global.System.Data.SqlDbType.VarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(24) = New Global.System.Data.SqlClient.SqlCommand
            CType(Me._commandCollection(24),Global.System.Data.SqlClient.SqlCommand).Connection = New Global.System.Data.SqlClient.SqlConnection(Global.Amlak.My.MySettings.Default.DB_NoSaziConnectionString)
            CType(Me._commandCollection(24),Global.System.Data.SqlClient.SqlCommand).CommandText = "dbo.Update_Tbl_Afrad_Momayezi"
            CType(Me._commandCollection(24),Global.System.Data.SqlClient.SqlCommand).CommandType = Global.System.Data.CommandType.StoredProcedure
            CType(Me._commandCollection(24),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(24),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SHsh", Global.System.Data.SqlDbType.VarChar, 27, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(24),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Momayez_Tarikh", Global.System.Data.SqlDbType.VarChar, 8, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(24),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Momayez_Name", Global.System.Data.SqlDbType.VarChar, 60, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(24),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Bazbin_Tarikh", Global.System.Data.SqlDbType.VarChar, 8, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(24),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Bazbin_Name", Global.System.Data.SqlDbType.VarChar, 60, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(24),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SNahieh_Tarikh", Global.System.Data.SqlDbType.VarChar, 8, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(24),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SNahieh_Name", Global.System.Data.SqlDbType.VarChar, 60, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(24),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SMantagheh_Tarikh", Global.System.Data.SqlDbType.VarChar, 8, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(24),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SMantagheh_Name", Global.System.Data.SqlDbType.VarChar, 60, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(25) = New Global.System.Data.SqlClient.SqlCommand
            CType(Me._commandCollection(25),Global.System.Data.SqlClient.SqlCommand).Connection = New Global.System.Data.SqlClient.SqlConnection(Global.Amlak.My.MySettings.Default.DB_NoSaziConnectionString)
            CType(Me._commandCollection(25),Global.System.Data.SqlClient.SqlCommand).CommandText = "dbo.Update_Tbl_Momayezi"
            CType(Me._commandCollection(25),Global.System.Data.SqlClient.SqlCommand).CommandType = Global.System.Data.CommandType.StoredProcedure
            CType(Me._commandCollection(25),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(25),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SHsh", Global.System.Data.SqlDbType.VarChar, 27, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(25),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tarikh", Global.System.Data.SqlDbType.VarChar, 8, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(25),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Vazeiat", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(26) = New Global.System.Data.SqlClient.SqlCommand
            CType(Me._commandCollection(26),Global.System.Data.SqlClient.SqlCommand).Connection = New Global.System.Data.SqlClient.SqlConnection(Global.Amlak.My.MySettings.Default.DB_NoSaziConnectionString)
            CType(Me._commandCollection(26),Global.System.Data.SqlClient.SqlCommand).CommandText = "dbo.Update_TblDFN_Block"
            CType(Me._commandCollection(26),Global.System.Data.SqlClient.SqlCommand).CommandType = Global.System.Data.CommandType.StoredProcedure
            CType(Me._commandCollection(26),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(26),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Code", Global.System.Data.SqlDbType.TinyInt, 1, Global.System.Data.ParameterDirection.Input, 3, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(26),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Code_SHsh", Global.System.Data.SqlDbType.VarChar, 3, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(26),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sharh", Global.System.Data.SqlDbType.VarChar, 150, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(26),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Shomal", Global.System.Data.SqlDbType.NText, 1073741823, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(26),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Shargh", Global.System.Data.SqlDbType.NText, 1073741823, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(26),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Jonoub", Global.System.Data.SqlDbType.NText, 1073741823, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(26),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Gharb", Global.System.Data.SqlDbType.NText, 1073741823, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Insert_DFN_BLOCK(ByVal Code As Global.System.Nullable(Of Byte), ByVal Code_SHsh As String, ByVal Sharh As String, ByVal Shomal As String, ByVal Shargh As String, ByVal Jonoub As String, ByVal Gharb As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = CType(Me.CommandCollection(0),Global.System.Data.SqlClient.SqlCommand)
            If (Code.HasValue = true) Then
                command.Parameters(1).Value = CType(Code.Value,Byte)
            Else
                command.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Code_SHsh Is Nothing) Then
                command.Parameters(2).Value = Global.System.DBNull.Value
            Else
                command.Parameters(2).Value = CType(Code_SHsh,String)
            End If
            If (Sharh Is Nothing) Then
                command.Parameters(3).Value = Global.System.DBNull.Value
            Else
                command.Parameters(3).Value = CType(Sharh,String)
            End If
            If (Shomal Is Nothing) Then
                command.Parameters(4).Value = Global.System.DBNull.Value
            Else
                command.Parameters(4).Value = CType(Shomal,String)
            End If
            If (Shargh Is Nothing) Then
                command.Parameters(5).Value = Global.System.DBNull.Value
            Else
                command.Parameters(5).Value = CType(Shargh,String)
            End If
            If (Jonoub Is Nothing) Then
                command.Parameters(6).Value = Global.System.DBNull.Value
            Else
                command.Parameters(6).Value = CType(Jonoub,String)
            End If
            If (Gharb Is Nothing) Then
                command.Parameters(7).Value = Global.System.DBNull.Value
            Else
                command.Parameters(7).Value = CType(Gharb,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Insert_DFN_Gheymat(ByVal Code_Block As String, ByVal Sal As String, ByVal Gheymat As Global.System.Nullable(Of Integer), ByVal Sharh As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = CType(Me.CommandCollection(1),Global.System.Data.SqlClient.SqlCommand)
            If (Code_Block Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(Code_Block,String)
            End If
            If (Sal Is Nothing) Then
                command.Parameters(2).Value = Global.System.DBNull.Value
            Else
                command.Parameters(2).Value = CType(Sal,String)
            End If
            If (Gheymat.HasValue = true) Then
                command.Parameters(3).Value = CType(Gheymat.Value,Integer)
            Else
                command.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Sharh Is Nothing) Then
                command.Parameters(4).Value = Global.System.DBNull.Value
            Else
                command.Parameters(4).Value = CType(Sharh,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Insert_Tbl_Afrad_Momayezi(ByVal Shomare_Shenasnameh As String, ByVal Momayez_Tarikh As String, ByVal Momayez_Name As String, ByVal Bazbin_Tarikh As String, ByVal Bazbin_Name As String, ByVal SNahieh_Tarikh As String, ByVal SNahieh_Name As String, ByVal SMantagheh_Tarikh As String, ByVal SMantagheh_Name As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = CType(Me.CommandCollection(2),Global.System.Data.SqlClient.SqlCommand)
            If (Shomare_Shenasnameh Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(Shomare_Shenasnameh,String)
            End If
            If (Momayez_Tarikh Is Nothing) Then
                command.Parameters(2).Value = Global.System.DBNull.Value
            Else
                command.Parameters(2).Value = CType(Momayez_Tarikh,String)
            End If
            If (Momayez_Name Is Nothing) Then
                command.Parameters(3).Value = Global.System.DBNull.Value
            Else
                command.Parameters(3).Value = CType(Momayez_Name,String)
            End If
            If (Bazbin_Tarikh Is Nothing) Then
                command.Parameters(4).Value = Global.System.DBNull.Value
            Else
                command.Parameters(4).Value = CType(Bazbin_Tarikh,String)
            End If
            If (Bazbin_Name Is Nothing) Then
                command.Parameters(5).Value = Global.System.DBNull.Value
            Else
                command.Parameters(5).Value = CType(Bazbin_Name,String)
            End If
            If (SNahieh_Tarikh Is Nothing) Then
                command.Parameters(6).Value = Global.System.DBNull.Value
            Else
                command.Parameters(6).Value = CType(SNahieh_Tarikh,String)
            End If
            If (SNahieh_Name Is Nothing) Then
                command.Parameters(7).Value = Global.System.DBNull.Value
            Else
                command.Parameters(7).Value = CType(SNahieh_Name,String)
            End If
            If (SMantagheh_Tarikh Is Nothing) Then
                command.Parameters(8).Value = Global.System.DBNull.Value
            Else
                command.Parameters(8).Value = CType(SMantagheh_Tarikh,String)
            End If
            If (SMantagheh_Name Is Nothing) Then
                command.Parameters(9).Value = Global.System.DBNull.Value
            Else
                command.Parameters(9).Value = CType(SMantagheh_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Insert_Tbl_Derakht(ByVal Shomare_Shenasnameh As String, ByVal No As String, ByVal Bon As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = CType(Me.CommandCollection(3),Global.System.Data.SqlClient.SqlCommand)
            If (Shomare_Shenasnameh Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(Shomare_Shenasnameh,String)
            End If
            If (No Is Nothing) Then
                command.Parameters(2).Value = Global.System.DBNull.Value
            Else
                command.Parameters(2).Value = CType(No,String)
            End If
            If (Bon Is Nothing) Then
                command.Parameters(3).Value = Global.System.DBNull.Value
            Else
                command.Parameters(3).Value = CType(Bon,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Insert_Tbl_Eshterak(ByVal Shomare_Shenasnameh As String, ByVal Hajm_Estakhr As Global.System.Nullable(Of Single), ByVal Masahat_Estakhr As Global.System.Nullable(Of Single), ByVal Masahat_Golkhaneh As Global.System.Nullable(Of Single), ByVal Tedad_Chah As Global.System.Nullable(Of Byte), ByVal Shomareh_Ab As String, ByVal Shomareh_Bargh As String, ByVal Shomareh_Gaz As String, ByVal Shomareh_Tel As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = CType(Me.CommandCollection(4),Global.System.Data.SqlClient.SqlCommand)
            If (Shomare_Shenasnameh Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(Shomare_Shenasnameh,String)
            End If
            If (Hajm_Estakhr.HasValue = true) Then
                command.Parameters(2).Value = CType(Hajm_Estakhr.Value,Single)
            Else
                command.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Masahat_Estakhr.HasValue = true) Then
                command.Parameters(3).Value = CType(Masahat_Estakhr.Value,Single)
            Else
                command.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Masahat_Golkhaneh.HasValue = true) Then
                command.Parameters(4).Value = CType(Masahat_Golkhaneh.Value,Single)
            Else
                command.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Tedad_Chah.HasValue = true) Then
                command.Parameters(5).Value = CType(Tedad_Chah.Value,Byte)
            Else
                command.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Shomareh_Ab Is Nothing) Then
                command.Parameters(6).Value = Global.System.DBNull.Value
            Else
                command.Parameters(6).Value = CType(Shomareh_Ab,String)
            End If
            If (Shomareh_Bargh Is Nothing) Then
                command.Parameters(7).Value = Global.System.DBNull.Value
            Else
                command.Parameters(7).Value = CType(Shomareh_Bargh,String)
            End If
            If (Shomareh_Gaz Is Nothing) Then
                command.Parameters(8).Value = Global.System.DBNull.Value
            Else
                command.Parameters(8).Value = CType(Shomareh_Gaz,String)
            End If
            If (Shomareh_Tel Is Nothing) Then
                command.Parameters(9).Value = Global.System.DBNull.Value
            Else
                command.Parameters(9).Value = CType(Shomareh_Tel,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Insert_Tbl_Momayezi(ByVal Shomare_Shenasnameh As String, ByVal Tarikh As String, ByVal Vazeiat As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = CType(Me.CommandCollection(5),Global.System.Data.SqlClient.SqlCommand)
            If (Shomare_Shenasnameh Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(Shomare_Shenasnameh,String)
            End If
            If (Tarikh Is Nothing) Then
                command.Parameters(2).Value = Global.System.DBNull.Value
            Else
                command.Parameters(2).Value = CType(Tarikh,String)
            End If
            If (Vazeiat Is Nothing) Then
                command.Parameters(3).Value = Global.System.DBNull.Value
            Else
                command.Parameters(3).Value = CType(Vazeiat,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Insert_Tbl_Moshakhasat_Malekin(ByVal Shomare_Shenasnameh As String, ByVal Tarikh_Tamallok As String, ByVal No_Malekiyat_Code As String, ByVal No_Malekiyat_Tedad As Global.System.Nullable(Of Byte), ByVal Vaziyat_Tamallok As String, ByVal Code_No_Malekiat As String, ByVal Malek_Name As String, ByVal Malek_Family As String, ByVal Malek_Name_Pedar As String, ByVal Malek_SHsh As Global.System.Nullable(Of Integer), ByVal Malek_CodeMelli As String, ByVal Malek_MahalSodur As String, ByVal Malek_Address As String, ByVal Malek_Tel As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = CType(Me.CommandCollection(6),Global.System.Data.SqlClient.SqlCommand)
            If (Shomare_Shenasnameh Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(Shomare_Shenasnameh,String)
            End If
            If (Tarikh_Tamallok Is Nothing) Then
                command.Parameters(2).Value = Global.System.DBNull.Value
            Else
                command.Parameters(2).Value = CType(Tarikh_Tamallok,String)
            End If
            If (No_Malekiyat_Code Is Nothing) Then
                command.Parameters(3).Value = Global.System.DBNull.Value
            Else
                command.Parameters(3).Value = CType(No_Malekiyat_Code,String)
            End If
            If (No_Malekiyat_Tedad.HasValue = true) Then
                command.Parameters(4).Value = CType(No_Malekiyat_Tedad.Value,Byte)
            Else
                command.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Vaziyat_Tamallok Is Nothing) Then
                command.Parameters(5).Value = Global.System.DBNull.Value
            Else
                command.Parameters(5).Value = CType(Vaziyat_Tamallok,String)
            End If
            If (Code_No_Malekiat Is Nothing) Then
                command.Parameters(6).Value = Global.System.DBNull.Value
            Else
                command.Parameters(6).Value = CType(Code_No_Malekiat,String)
            End If
            If (Malek_Name Is Nothing) Then
                command.Parameters(7).Value = Global.System.DBNull.Value
            Else
                command.Parameters(7).Value = CType(Malek_Name,String)
            End If
            If (Malek_Family Is Nothing) Then
                command.Parameters(8).Value = Global.System.DBNull.Value
            Else
                command.Parameters(8).Value = CType(Malek_Family,String)
            End If
            If (Malek_Name_Pedar Is Nothing) Then
                command.Parameters(9).Value = Global.System.DBNull.Value
            Else
                command.Parameters(9).Value = CType(Malek_Name_Pedar,String)
            End If
            If (Malek_SHsh.HasValue = true) Then
                command.Parameters(10).Value = CType(Malek_SHsh.Value,Integer)
            Else
                command.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Malek_CodeMelli Is Nothing) Then
                command.Parameters(11).Value = Global.System.DBNull.Value
            Else
                command.Parameters(11).Value = CType(Malek_CodeMelli,String)
            End If
            If (Malek_MahalSodur Is Nothing) Then
                command.Parameters(12).Value = Global.System.DBNull.Value
            Else
                command.Parameters(12).Value = CType(Malek_MahalSodur,String)
            End If
            If (Malek_Address Is Nothing) Then
                command.Parameters(13).Value = Global.System.DBNull.Value
            Else
                command.Parameters(13).Value = CType(Malek_Address,String)
            End If
            If (Malek_Tel Is Nothing) Then
                command.Parameters(14).Value = Global.System.DBNull.Value
            Else
                command.Parameters(14).Value = CType(Malek_Tel,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Insert_Tbl_Mahiyat_Fiziki(ByVal SHsh As String, ByVal C300 As Global.System.Nullable(Of Boolean), ByVal C301 As Global.System.Nullable(Of Boolean), ByVal C302 As Global.System.Nullable(Of Boolean), ByVal C303 As Global.System.Nullable(Of Boolean), ByVal C304 As Global.System.Nullable(Of Boolean), ByVal C305 As Global.System.Nullable(Of Boolean), ByVal C306 As Global.System.Nullable(Of Boolean), ByVal C307 As Global.System.Nullable(Of Boolean)) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = CType(Me.CommandCollection(7),Global.System.Data.SqlClient.SqlCommand)
            If (SHsh Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(SHsh,String)
            End If
            If (C300.HasValue = true) Then
                command.Parameters(2).Value = CType(C300.Value,Boolean)
            Else
                command.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (C301.HasValue = true) Then
                command.Parameters(3).Value = CType(C301.Value,Boolean)
            Else
                command.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (C302.HasValue = true) Then
                command.Parameters(4).Value = CType(C302.Value,Boolean)
            Else
                command.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (C303.HasValue = true) Then
                command.Parameters(5).Value = CType(C303.Value,Boolean)
            Else
                command.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (C304.HasValue = true) Then
                command.Parameters(6).Value = CType(C304.Value,Boolean)
            Else
                command.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (C305.HasValue = true) Then
                command.Parameters(7).Value = CType(C305.Value,Boolean)
            Else
                command.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (C306.HasValue = true) Then
                command.Parameters(8).Value = CType(C306.Value,Boolean)
            Else
                command.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (C307.HasValue = true) Then
                command.Parameters(9).Value = CType(C307.Value,Boolean)
            Else
                command.Parameters(9).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update_Tbl_Mahiyat_Fiziki(ByVal SHsh As String, ByVal C300 As Global.System.Nullable(Of Boolean), ByVal C301 As Global.System.Nullable(Of Boolean), ByVal C302 As Global.System.Nullable(Of Boolean), ByVal C303 As Global.System.Nullable(Of Boolean), ByVal C304 As Global.System.Nullable(Of Boolean), ByVal C305 As Global.System.Nullable(Of Boolean), ByVal C306 As Global.System.Nullable(Of Boolean), ByVal C307 As Global.System.Nullable(Of Boolean)) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = CType(Me.CommandCollection(8),Global.System.Data.SqlClient.SqlCommand)
            If (SHsh Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(SHsh,String)
            End If
            If (C300.HasValue = true) Then
                command.Parameters(2).Value = CType(C300.Value,Boolean)
            Else
                command.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (C301.HasValue = true) Then
                command.Parameters(3).Value = CType(C301.Value,Boolean)
            Else
                command.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (C302.HasValue = true) Then
                command.Parameters(4).Value = CType(C302.Value,Boolean)
            Else
                command.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (C303.HasValue = true) Then
                command.Parameters(5).Value = CType(C303.Value,Boolean)
            Else
                command.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (C304.HasValue = true) Then
                command.Parameters(6).Value = CType(C304.Value,Boolean)
            Else
                command.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (C305.HasValue = true) Then
                command.Parameters(7).Value = CType(C305.Value,Boolean)
            Else
                command.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (C306.HasValue = true) Then
                command.Parameters(8).Value = CType(C306.Value,Boolean)
            Else
                command.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (C307.HasValue = true) Then
                command.Parameters(9).Value = CType(C307.Value,Boolean)
            Else
                command.Parameters(9).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Insert_Update_TAmlak_( _
                    ByVal SHsh As String,  _
                    ByVal Kasri As Global.System.Nullable(Of Single),  _
                    ByVal Ezafat As Global.System.Nullable(Of Single),  _
                    ByVal No_Melk As Global.System.Nullable(Of Byte),  _
                    ByVal Masahat_ZirBana As Global.System.Nullable(Of Single),  _
                    ByVal Tedad_vahed As Global.System.Nullable(Of Integer),  _
                    ByVal Masahat_Bana As Global.System.Nullable(Of Single),  _
                    ByVal Arzesh_Moamelati As Global.System.Nullable(Of Single),  _
                    ByVal TKasri_Zamin As Global.System.Nullable(Of Boolean),  _
                    ByVal TAzafe_tarakom As Global.System.Nullable(Of Boolean),  _
                    ByVal THagh_Nezareh As Global.System.Nullable(Of Boolean),  _
                    ByVal TSodore_ParvanehAnboh As Global.System.Nullable(Of Boolean),  _
                    ByVal TSodore_ParvanehVilaie As Global.System.Nullable(Of Boolean),  _
                    ByVal TSath_Shahr As String,  _
                    ByVal TNosazi As String,  _
                    ByVal TTamirat As String,  _
                    ByVal TTransfer As Global.System.Nullable(Of Boolean),  _
                    ByVal Tpazireh As Global.System.Nullable(Of Boolean)) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = CType(Me.CommandCollection(9),Global.System.Data.SqlClient.SqlCommand)
            If (SHsh Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(SHsh,String)
            End If
            If (Kasri.HasValue = true) Then
                command.Parameters(2).Value = CType(Kasri.Value,Single)
            Else
                command.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Ezafat.HasValue = true) Then
                command.Parameters(3).Value = CType(Ezafat.Value,Single)
            Else
                command.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (No_Melk.HasValue = true) Then
                command.Parameters(4).Value = CType(No_Melk.Value,Byte)
            Else
                command.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Masahat_ZirBana.HasValue = true) Then
                command.Parameters(5).Value = CType(Masahat_ZirBana.Value,Single)
            Else
                command.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Tedad_vahed.HasValue = true) Then
                command.Parameters(6).Value = CType(Tedad_vahed.Value,Integer)
            Else
                command.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Masahat_Bana.HasValue = true) Then
                command.Parameters(7).Value = CType(Masahat_Bana.Value,Single)
            Else
                command.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (Arzesh_Moamelati.HasValue = true) Then
                command.Parameters(8).Value = CType(Arzesh_Moamelati.Value,Single)
            Else
                command.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (TKasri_Zamin.HasValue = true) Then
                command.Parameters(9).Value = CType(TKasri_Zamin.Value,Boolean)
            Else
                command.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (TAzafe_tarakom.HasValue = true) Then
                command.Parameters(10).Value = CType(TAzafe_tarakom.Value,Boolean)
            Else
                command.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (THagh_Nezareh.HasValue = true) Then
                command.Parameters(11).Value = CType(THagh_Nezareh.Value,Boolean)
            Else
                command.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (TSodore_ParvanehAnboh.HasValue = true) Then
                command.Parameters(12).Value = CType(TSodore_ParvanehAnboh.Value,Boolean)
            Else
                command.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (TSodore_ParvanehVilaie.HasValue = true) Then
                command.Parameters(13).Value = CType(TSodore_ParvanehVilaie.Value,Boolean)
            Else
                command.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (TSath_Shahr Is Nothing) Then
                command.Parameters(14).Value = Global.System.DBNull.Value
            Else
                command.Parameters(14).Value = CType(TSath_Shahr,String)
            End If
            If (TNosazi Is Nothing) Then
                command.Parameters(15).Value = Global.System.DBNull.Value
            Else
                command.Parameters(15).Value = CType(TNosazi,String)
            End If
            If (TTamirat Is Nothing) Then
                command.Parameters(16).Value = Global.System.DBNull.Value
            Else
                command.Parameters(16).Value = CType(TTamirat,String)
            End If
            If (TTransfer.HasValue = true) Then
                command.Parameters(17).Value = CType(TTransfer.Value,Boolean)
            Else
                command.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (Tpazireh.HasValue = true) Then
                command.Parameters(18).Value = CType(Tpazireh.Value,Boolean)
            Else
                command.Parameters(18).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Insert_TAmlak( _
                    ByVal SHsh As String,  _
                    ByVal Kasri As Global.System.Nullable(Of Single),  _
                    ByVal Ezafat As Global.System.Nullable(Of Single),  _
                    ByVal No_Melk As Global.System.Nullable(Of Byte),  _
                    ByVal Masahat_ZirBana As Global.System.Nullable(Of Single),  _
                    ByVal Tedad_vahed As Global.System.Nullable(Of Integer),  _
                    ByVal Masahat_Bana As Global.System.Nullable(Of Single),  _
                    ByVal Arzesh_Moamelati As Global.System.Nullable(Of Single),  _
                    ByVal TKasri_Zamin As Global.System.Nullable(Of Boolean),  _
                    ByVal TAzafe_tarakom As Global.System.Nullable(Of Boolean),  _
                    ByVal THagh_Nezareh As Global.System.Nullable(Of Boolean),  _
                    ByVal TSodore_ParvanehAnboh As Global.System.Nullable(Of Boolean),  _
                    ByVal TSodore_ParvanehVilaie As Global.System.Nullable(Of Boolean),  _
                    ByVal TSath_Shahr As String,  _
                    ByVal TNosazi As String,  _
                    ByVal TTamirat As String,  _
                    ByVal TTransfer As Global.System.Nullable(Of Boolean),  _
                    ByVal Tpazireh As Global.System.Nullable(Of Boolean)) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = CType(Me.CommandCollection(10),Global.System.Data.SqlClient.SqlCommand)
            If (SHsh Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(SHsh,String)
            End If
            If (Kasri.HasValue = true) Then
                command.Parameters(2).Value = CType(Kasri.Value,Single)
            Else
                command.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Ezafat.HasValue = true) Then
                command.Parameters(3).Value = CType(Ezafat.Value,Single)
            Else
                command.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (No_Melk.HasValue = true) Then
                command.Parameters(4).Value = CType(No_Melk.Value,Byte)
            Else
                command.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Masahat_ZirBana.HasValue = true) Then
                command.Parameters(5).Value = CType(Masahat_ZirBana.Value,Single)
            Else
                command.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Tedad_vahed.HasValue = true) Then
                command.Parameters(6).Value = CType(Tedad_vahed.Value,Integer)
            Else
                command.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Masahat_Bana.HasValue = true) Then
                command.Parameters(7).Value = CType(Masahat_Bana.Value,Single)
            Else
                command.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (Arzesh_Moamelati.HasValue = true) Then
                command.Parameters(8).Value = CType(Arzesh_Moamelati.Value,Single)
            Else
                command.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (TKasri_Zamin.HasValue = true) Then
                command.Parameters(9).Value = CType(TKasri_Zamin.Value,Boolean)
            Else
                command.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (TAzafe_tarakom.HasValue = true) Then
                command.Parameters(10).Value = CType(TAzafe_tarakom.Value,Boolean)
            Else
                command.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (THagh_Nezareh.HasValue = true) Then
                command.Parameters(11).Value = CType(THagh_Nezareh.Value,Boolean)
            Else
                command.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (TSodore_ParvanehAnboh.HasValue = true) Then
                command.Parameters(12).Value = CType(TSodore_ParvanehAnboh.Value,Boolean)
            Else
                command.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (TSodore_ParvanehVilaie.HasValue = true) Then
                command.Parameters(13).Value = CType(TSodore_ParvanehVilaie.Value,Boolean)
            Else
                command.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (TSath_Shahr Is Nothing) Then
                command.Parameters(14).Value = Global.System.DBNull.Value
            Else
                command.Parameters(14).Value = CType(TSath_Shahr,String)
            End If
            If (TNosazi Is Nothing) Then
                command.Parameters(15).Value = Global.System.DBNull.Value
            Else
                command.Parameters(15).Value = CType(TNosazi,String)
            End If
            If (TTamirat Is Nothing) Then
                command.Parameters(16).Value = Global.System.DBNull.Value
            Else
                command.Parameters(16).Value = CType(TTamirat,String)
            End If
            If (TTransfer.HasValue = true) Then
                command.Parameters(17).Value = CType(TTransfer.Value,Boolean)
            Else
                command.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (Tpazireh.HasValue = true) Then
                command.Parameters(18).Value = CType(Tpazireh.Value,Boolean)
            Else
                command.Parameters(18).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update_TAmlak( _
                    ByVal SHsh As String,  _
                    ByVal Kasri As Global.System.Nullable(Of Single),  _
                    ByVal Ezafat As Global.System.Nullable(Of Single),  _
                    ByVal No_Melk As Global.System.Nullable(Of Byte),  _
                    ByVal Masahat_ZirBana As Global.System.Nullable(Of Single),  _
                    ByVal Tedad_vahed As Global.System.Nullable(Of Integer),  _
                    ByVal Masahat_Bana As Global.System.Nullable(Of Single),  _
                    ByVal Arzesh_Moamelati As Global.System.Nullable(Of Single),  _
                    ByVal TKasri_Zamin As Global.System.Nullable(Of Boolean),  _
                    ByVal TAzafe_tarakom As Global.System.Nullable(Of Boolean),  _
                    ByVal THagh_Nezareh As Global.System.Nullable(Of Boolean),  _
                    ByVal TSodore_ParvanehAnboh As Global.System.Nullable(Of Boolean),  _
                    ByVal TSodore_ParvanehVilaie As Global.System.Nullable(Of Boolean),  _
                    ByVal TSath_Shahr As String,  _
                    ByVal TNosazi As String,  _
                    ByVal TTamirat As String,  _
                    ByVal TTransfer As Global.System.Nullable(Of Boolean),  _
                    ByVal Tpazireh As Global.System.Nullable(Of Boolean)) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = CType(Me.CommandCollection(11),Global.System.Data.SqlClient.SqlCommand)
            If (SHsh Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(SHsh,String)
            End If
            If (Kasri.HasValue = true) Then
                command.Parameters(2).Value = CType(Kasri.Value,Single)
            Else
                command.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Ezafat.HasValue = true) Then
                command.Parameters(3).Value = CType(Ezafat.Value,Single)
            Else
                command.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (No_Melk.HasValue = true) Then
                command.Parameters(4).Value = CType(No_Melk.Value,Byte)
            Else
                command.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Masahat_ZirBana.HasValue = true) Then
                command.Parameters(5).Value = CType(Masahat_ZirBana.Value,Single)
            Else
                command.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Tedad_vahed.HasValue = true) Then
                command.Parameters(6).Value = CType(Tedad_vahed.Value,Integer)
            Else
                command.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Masahat_Bana.HasValue = true) Then
                command.Parameters(7).Value = CType(Masahat_Bana.Value,Single)
            Else
                command.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (Arzesh_Moamelati.HasValue = true) Then
                command.Parameters(8).Value = CType(Arzesh_Moamelati.Value,Single)
            Else
                command.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (TKasri_Zamin.HasValue = true) Then
                command.Parameters(9).Value = CType(TKasri_Zamin.Value,Boolean)
            Else
                command.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (TAzafe_tarakom.HasValue = true) Then
                command.Parameters(10).Value = CType(TAzafe_tarakom.Value,Boolean)
            Else
                command.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (THagh_Nezareh.HasValue = true) Then
                command.Parameters(11).Value = CType(THagh_Nezareh.Value,Boolean)
            Else
                command.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (TSodore_ParvanehAnboh.HasValue = true) Then
                command.Parameters(12).Value = CType(TSodore_ParvanehAnboh.Value,Boolean)
            Else
                command.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (TSodore_ParvanehVilaie.HasValue = true) Then
                command.Parameters(13).Value = CType(TSodore_ParvanehVilaie.Value,Boolean)
            Else
                command.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (TSath_Shahr Is Nothing) Then
                command.Parameters(14).Value = Global.System.DBNull.Value
            Else
                command.Parameters(14).Value = CType(TSath_Shahr,String)
            End If
            If (TNosazi Is Nothing) Then
                command.Parameters(15).Value = Global.System.DBNull.Value
            Else
                command.Parameters(15).Value = CType(TNosazi,String)
            End If
            If (TTamirat Is Nothing) Then
                command.Parameters(16).Value = Global.System.DBNull.Value
            Else
                command.Parameters(16).Value = CType(TTamirat,String)
            End If
            If (TTransfer.HasValue = true) Then
                command.Parameters(17).Value = CType(TTransfer.Value,Boolean)
            Else
                command.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (Tpazireh.HasValue = true) Then
                command.Parameters(18).Value = CType(Tpazireh.Value,Boolean)
            Else
                command.Parameters(18).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Insert_Tbl_Moshakhasat_Zamin(ByVal Shomare_Shenasnameh As String, ByVal Radif As Global.System.Nullable(Of Byte), ByVal Jahat As String, ByVal Tool_Zel As Global.System.Nullable(Of Single), ByVal Tool_Bar As Global.System.Nullable(Of Single), ByVal MaAbar_Name As String, ByVal MaAbar_Arz As Global.System.Nullable(Of Single), ByVal MaAbar_radif As Global.System.Nullable(Of Byte), ByVal zavieh As Global.System.Nullable(Of Integer), ByVal Masahat_jebheh1 As Global.System.Nullable(Of Single), ByVal Masahat_Jebheh2 As Global.System.Nullable(Of Single)) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = CType(Me.CommandCollection(12),Global.System.Data.SqlClient.SqlCommand)
            If (Shomare_Shenasnameh Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(Shomare_Shenasnameh,String)
            End If
            If (Radif.HasValue = true) Then
                command.Parameters(2).Value = CType(Radif.Value,Byte)
            Else
                command.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Jahat Is Nothing) Then
                command.Parameters(3).Value = Global.System.DBNull.Value
            Else
                command.Parameters(3).Value = CType(Jahat,String)
            End If
            If (Tool_Zel.HasValue = true) Then
                command.Parameters(4).Value = CType(Tool_Zel.Value,Single)
            Else
                command.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Tool_Bar.HasValue = true) Then
                command.Parameters(5).Value = CType(Tool_Bar.Value,Single)
            Else
                command.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (MaAbar_Name Is Nothing) Then
                command.Parameters(6).Value = Global.System.DBNull.Value
            Else
                command.Parameters(6).Value = CType(MaAbar_Name,String)
            End If
            If (MaAbar_Arz.HasValue = true) Then
                command.Parameters(7).Value = CType(MaAbar_Arz.Value,Single)
            Else
                command.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (MaAbar_radif.HasValue = true) Then
                command.Parameters(8).Value = CType(MaAbar_radif.Value,Byte)
            Else
                command.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (zavieh.HasValue = true) Then
                command.Parameters(9).Value = CType(zavieh.Value,Integer)
            Else
                command.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Masahat_jebheh1.HasValue = true) Then
                command.Parameters(10).Value = CType(Masahat_jebheh1.Value,Single)
            Else
                command.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Masahat_Jebheh2.HasValue = true) Then
                command.Parameters(11).Value = CType(Masahat_Jebheh2.Value,Single)
            Else
                command.Parameters(11).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update_Tbl_Moshakhasat_Zamin(ByVal Shomare_Shenasnameh As String, ByVal Param_Jahat As String, ByVal Radif As Global.System.Nullable(Of Byte), ByVal Jahat As String, ByVal Tool_Zel As Global.System.Nullable(Of Single), ByVal Tool_Bar As Global.System.Nullable(Of Single), ByVal MaAbar_Name As String, ByVal MaAbar_Arz As Global.System.Nullable(Of Single), ByVal MaAbar_radif As Global.System.Nullable(Of Byte), ByVal zavieh As Global.System.Nullable(Of Integer), ByVal Masahat_jebheh1 As Global.System.Nullable(Of Single), ByVal Masahat_Jebheh2 As Global.System.Nullable(Of Single)) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = CType(Me.CommandCollection(13),Global.System.Data.SqlClient.SqlCommand)
            If (Shomare_Shenasnameh Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(Shomare_Shenasnameh,String)
            End If
            If (Param_Jahat Is Nothing) Then
                command.Parameters(2).Value = Global.System.DBNull.Value
            Else
                command.Parameters(2).Value = CType(Param_Jahat,String)
            End If
            If (Radif.HasValue = true) Then
                command.Parameters(3).Value = CType(Radif.Value,Byte)
            Else
                command.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Jahat Is Nothing) Then
                command.Parameters(4).Value = Global.System.DBNull.Value
            Else
                command.Parameters(4).Value = CType(Jahat,String)
            End If
            If (Tool_Zel.HasValue = true) Then
                command.Parameters(5).Value = CType(Tool_Zel.Value,Single)
            Else
                command.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Tool_Bar.HasValue = true) Then
                command.Parameters(6).Value = CType(Tool_Bar.Value,Single)
            Else
                command.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (MaAbar_Name Is Nothing) Then
                command.Parameters(7).Value = Global.System.DBNull.Value
            Else
                command.Parameters(7).Value = CType(MaAbar_Name,String)
            End If
            If (MaAbar_Arz.HasValue = true) Then
                command.Parameters(8).Value = CType(MaAbar_Arz.Value,Single)
            Else
                command.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (MaAbar_radif.HasValue = true) Then
                command.Parameters(9).Value = CType(MaAbar_radif.Value,Byte)
            Else
                command.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (zavieh.HasValue = true) Then
                command.Parameters(10).Value = CType(zavieh.Value,Integer)
            Else
                command.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Masahat_jebheh1.HasValue = true) Then
                command.Parameters(11).Value = CType(Masahat_jebheh1.Value,Single)
            Else
                command.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Masahat_Jebheh2.HasValue = true) Then
                command.Parameters(12).Value = CType(Masahat_Jebheh2.Value,Single)
            Else
                command.Parameters(12).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update_Tbl_Moshakhasat_Malekin( _
                    ByVal Shomare_Shenasnameh As String,  _
                    ByVal Malek_CodeMelli_Param As String,  _
                    ByVal Radif As Global.System.Nullable(Of Byte),  _
                    ByVal Tarikh_Tamallok As String,  _
                    ByVal No_Malekiyat_Code As String,  _
                    ByVal No_Malekiyat_Tedad As Global.System.Nullable(Of Byte),  _
                    ByVal Vaziyat_Tamallok As String,  _
                    ByVal Code_No_Malekiat As String,  _
                    ByVal Malek_Name As String,  _
                    ByVal Malek_Family As String,  _
                    ByVal Malek_Name_Pedar As String,  _
                    ByVal Malek_SHsh As Global.System.Nullable(Of Integer),  _
                    ByVal Malek_CodeMelli As String,  _
                    ByVal Malek_MahalSodur As String,  _
                    ByVal Malek_Address As String,  _
                    ByVal Malek_Tel As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = CType(Me.CommandCollection(14),Global.System.Data.SqlClient.SqlCommand)
            If (Shomare_Shenasnameh Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(Shomare_Shenasnameh,String)
            End If
            If (Malek_CodeMelli_Param Is Nothing) Then
                command.Parameters(2).Value = Global.System.DBNull.Value
            Else
                command.Parameters(2).Value = CType(Malek_CodeMelli_Param,String)
            End If
            If (Radif.HasValue = true) Then
                command.Parameters(3).Value = CType(Radif.Value,Byte)
            Else
                command.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Tarikh_Tamallok Is Nothing) Then
                command.Parameters(4).Value = Global.System.DBNull.Value
            Else
                command.Parameters(4).Value = CType(Tarikh_Tamallok,String)
            End If
            If (No_Malekiyat_Code Is Nothing) Then
                command.Parameters(5).Value = Global.System.DBNull.Value
            Else
                command.Parameters(5).Value = CType(No_Malekiyat_Code,String)
            End If
            If (No_Malekiyat_Tedad.HasValue = true) Then
                command.Parameters(6).Value = CType(No_Malekiyat_Tedad.Value,Byte)
            Else
                command.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Vaziyat_Tamallok Is Nothing) Then
                command.Parameters(7).Value = Global.System.DBNull.Value
            Else
                command.Parameters(7).Value = CType(Vaziyat_Tamallok,String)
            End If
            If (Code_No_Malekiat Is Nothing) Then
                command.Parameters(8).Value = Global.System.DBNull.Value
            Else
                command.Parameters(8).Value = CType(Code_No_Malekiat,String)
            End If
            If (Malek_Name Is Nothing) Then
                command.Parameters(9).Value = Global.System.DBNull.Value
            Else
                command.Parameters(9).Value = CType(Malek_Name,String)
            End If
            If (Malek_Family Is Nothing) Then
                command.Parameters(10).Value = Global.System.DBNull.Value
            Else
                command.Parameters(10).Value = CType(Malek_Family,String)
            End If
            If (Malek_Name_Pedar Is Nothing) Then
                command.Parameters(11).Value = Global.System.DBNull.Value
            Else
                command.Parameters(11).Value = CType(Malek_Name_Pedar,String)
            End If
            If (Malek_SHsh.HasValue = true) Then
                command.Parameters(12).Value = CType(Malek_SHsh.Value,Integer)
            Else
                command.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Malek_CodeMelli Is Nothing) Then
                command.Parameters(13).Value = Global.System.DBNull.Value
            Else
                command.Parameters(13).Value = CType(Malek_CodeMelli,String)
            End If
            If (Malek_MahalSodur Is Nothing) Then
                command.Parameters(14).Value = Global.System.DBNull.Value
            Else
                command.Parameters(14).Value = CType(Malek_MahalSodur,String)
            End If
            If (Malek_Address Is Nothing) Then
                command.Parameters(15).Value = Global.System.DBNull.Value
            Else
                command.Parameters(15).Value = CType(Malek_Address,String)
            End If
            If (Malek_Tel Is Nothing) Then
                command.Parameters(16).Value = Global.System.DBNull.Value
            Else
                command.Parameters(16).Value = CType(Malek_Tel,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Insert_Tbl_No_Estefadeh( _
                    ByVal Shomare_Shenasnameh As String,  _
                    ByVal C350 As Global.System.Nullable(Of Boolean),  _
                    ByVal C351 As Global.System.Nullable(Of Boolean),  _
                    ByVal C352 As Global.System.Nullable(Of Boolean),  _
                    ByVal C353 As Global.System.Nullable(Of Boolean),  _
                    ByVal C354 As Global.System.Nullable(Of Boolean),  _
                    ByVal C355 As Global.System.Nullable(Of Boolean),  _
                    ByVal C356 As Global.System.Nullable(Of Boolean),  _
                    ByVal C357 As Global.System.Nullable(Of Boolean),  _
                    ByVal C358 As Global.System.Nullable(Of Boolean),  _
                    ByVal C359 As Global.System.Nullable(Of Boolean),  _
                    ByVal C360 As Global.System.Nullable(Of Boolean),  _
                    ByVal C361 As Global.System.Nullable(Of Boolean),  _
                    ByVal C362 As Global.System.Nullable(Of Boolean),  _
                    ByVal C363 As Global.System.Nullable(Of Boolean),  _
                    ByVal C364 As Global.System.Nullable(Of Boolean),  _
                    ByVal C365 As Global.System.Nullable(Of Boolean),  _
                    ByVal C366 As Global.System.Nullable(Of Boolean),  _
                    ByVal C367 As Global.System.Nullable(Of Boolean),  _
                    ByVal C368 As Global.System.Nullable(Of Boolean),  _
                    ByVal C369 As Global.System.Nullable(Of Boolean),  _
                    ByVal C370 As Global.System.Nullable(Of Boolean),  _
                    ByVal C371 As Global.System.Nullable(Of Boolean),  _
                    ByVal C372 As Global.System.Nullable(Of Boolean)) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = CType(Me.CommandCollection(15),Global.System.Data.SqlClient.SqlCommand)
            If (Shomare_Shenasnameh Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(Shomare_Shenasnameh,String)
            End If
            If (C350.HasValue = true) Then
                command.Parameters(2).Value = CType(C350.Value,Boolean)
            Else
                command.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (C351.HasValue = true) Then
                command.Parameters(3).Value = CType(C351.Value,Boolean)
            Else
                command.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (C352.HasValue = true) Then
                command.Parameters(4).Value = CType(C352.Value,Boolean)
            Else
                command.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (C353.HasValue = true) Then
                command.Parameters(5).Value = CType(C353.Value,Boolean)
            Else
                command.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (C354.HasValue = true) Then
                command.Parameters(6).Value = CType(C354.Value,Boolean)
            Else
                command.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (C355.HasValue = true) Then
                command.Parameters(7).Value = CType(C355.Value,Boolean)
            Else
                command.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (C356.HasValue = true) Then
                command.Parameters(8).Value = CType(C356.Value,Boolean)
            Else
                command.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (C357.HasValue = true) Then
                command.Parameters(9).Value = CType(C357.Value,Boolean)
            Else
                command.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (C358.HasValue = true) Then
                command.Parameters(10).Value = CType(C358.Value,Boolean)
            Else
                command.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (C359.HasValue = true) Then
                command.Parameters(11).Value = CType(C359.Value,Boolean)
            Else
                command.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (C360.HasValue = true) Then
                command.Parameters(12).Value = CType(C360.Value,Boolean)
            Else
                command.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (C361.HasValue = true) Then
                command.Parameters(13).Value = CType(C361.Value,Boolean)
            Else
                command.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (C362.HasValue = true) Then
                command.Parameters(14).Value = CType(C362.Value,Boolean)
            Else
                command.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (C363.HasValue = true) Then
                command.Parameters(15).Value = CType(C363.Value,Boolean)
            Else
                command.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (C364.HasValue = true) Then
                command.Parameters(16).Value = CType(C364.Value,Boolean)
            Else
                command.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (C365.HasValue = true) Then
                command.Parameters(17).Value = CType(C365.Value,Boolean)
            Else
                command.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (C366.HasValue = true) Then
                command.Parameters(18).Value = CType(C366.Value,Boolean)
            Else
                command.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (C367.HasValue = true) Then
                command.Parameters(19).Value = CType(C367.Value,Boolean)
            Else
                command.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (C368.HasValue = true) Then
                command.Parameters(20).Value = CType(C368.Value,Boolean)
            Else
                command.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (C369.HasValue = true) Then
                command.Parameters(21).Value = CType(C369.Value,Boolean)
            Else
                command.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (C370.HasValue = true) Then
                command.Parameters(22).Value = CType(C370.Value,Boolean)
            Else
                command.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (C371.HasValue = true) Then
                command.Parameters(23).Value = CType(C371.Value,Boolean)
            Else
                command.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (C372.HasValue = true) Then
                command.Parameters(24).Value = CType(C372.Value,Boolean)
            Else
                command.Parameters(24).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update_Tbl_No_Estefadeh( _
                    ByVal SHsh As String,  _
                    ByVal C350 As Global.System.Nullable(Of Boolean),  _
                    ByVal C351 As Global.System.Nullable(Of Boolean),  _
                    ByVal C352 As Global.System.Nullable(Of Boolean),  _
                    ByVal C353 As Global.System.Nullable(Of Boolean),  _
                    ByVal C354 As Global.System.Nullable(Of Boolean),  _
                    ByVal C355 As Global.System.Nullable(Of Boolean),  _
                    ByVal C356 As Global.System.Nullable(Of Boolean),  _
                    ByVal C357 As Global.System.Nullable(Of Boolean),  _
                    ByVal C358 As Global.System.Nullable(Of Boolean),  _
                    ByVal C359 As Global.System.Nullable(Of Boolean),  _
                    ByVal C360 As Global.System.Nullable(Of Boolean),  _
                    ByVal C361 As Global.System.Nullable(Of Boolean),  _
                    ByVal C362 As Global.System.Nullable(Of Boolean),  _
                    ByVal C363 As Global.System.Nullable(Of Boolean),  _
                    ByVal C364 As Global.System.Nullable(Of Boolean),  _
                    ByVal C365 As Global.System.Nullable(Of Boolean),  _
                    ByVal C366 As Global.System.Nullable(Of Boolean),  _
                    ByVal C367 As Global.System.Nullable(Of Boolean),  _
                    ByVal C368 As Global.System.Nullable(Of Boolean),  _
                    ByVal C369 As Global.System.Nullable(Of Boolean),  _
                    ByVal C370 As Global.System.Nullable(Of Boolean),  _
                    ByVal C371 As Global.System.Nullable(Of Boolean),  _
                    ByVal C372 As Global.System.Nullable(Of Boolean)) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = CType(Me.CommandCollection(16),Global.System.Data.SqlClient.SqlCommand)
            If (SHsh Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(SHsh,String)
            End If
            If (C350.HasValue = true) Then
                command.Parameters(2).Value = CType(C350.Value,Boolean)
            Else
                command.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (C351.HasValue = true) Then
                command.Parameters(3).Value = CType(C351.Value,Boolean)
            Else
                command.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (C352.HasValue = true) Then
                command.Parameters(4).Value = CType(C352.Value,Boolean)
            Else
                command.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (C353.HasValue = true) Then
                command.Parameters(5).Value = CType(C353.Value,Boolean)
            Else
                command.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (C354.HasValue = true) Then
                command.Parameters(6).Value = CType(C354.Value,Boolean)
            Else
                command.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (C355.HasValue = true) Then
                command.Parameters(7).Value = CType(C355.Value,Boolean)
            Else
                command.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (C356.HasValue = true) Then
                command.Parameters(8).Value = CType(C356.Value,Boolean)
            Else
                command.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (C357.HasValue = true) Then
                command.Parameters(9).Value = CType(C357.Value,Boolean)
            Else
                command.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (C358.HasValue = true) Then
                command.Parameters(10).Value = CType(C358.Value,Boolean)
            Else
                command.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (C359.HasValue = true) Then
                command.Parameters(11).Value = CType(C359.Value,Boolean)
            Else
                command.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (C360.HasValue = true) Then
                command.Parameters(12).Value = CType(C360.Value,Boolean)
            Else
                command.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (C361.HasValue = true) Then
                command.Parameters(13).Value = CType(C361.Value,Boolean)
            Else
                command.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (C362.HasValue = true) Then
                command.Parameters(14).Value = CType(C362.Value,Boolean)
            Else
                command.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (C363.HasValue = true) Then
                command.Parameters(15).Value = CType(C363.Value,Boolean)
            Else
                command.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (C364.HasValue = true) Then
                command.Parameters(16).Value = CType(C364.Value,Boolean)
            Else
                command.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (C365.HasValue = true) Then
                command.Parameters(17).Value = CType(C365.Value,Boolean)
            Else
                command.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (C366.HasValue = true) Then
                command.Parameters(18).Value = CType(C366.Value,Boolean)
            Else
                command.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (C367.HasValue = true) Then
                command.Parameters(19).Value = CType(C367.Value,Boolean)
            Else
                command.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (C368.HasValue = true) Then
                command.Parameters(20).Value = CType(C368.Value,Boolean)
            Else
                command.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (C369.HasValue = true) Then
                command.Parameters(21).Value = CType(C369.Value,Boolean)
            Else
                command.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (C370.HasValue = true) Then
                command.Parameters(22).Value = CType(C370.Value,Boolean)
            Else
                command.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (C371.HasValue = true) Then
                command.Parameters(23).Value = CType(C371.Value,Boolean)
            Else
                command.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (C372.HasValue = true) Then
                command.Parameters(24).Value = CType(C372.Value,Boolean)
            Else
                command.Parameters(24).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Exists_For_Update(ByVal SHsh As String, ByVal Table_Name As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = CType(Me.CommandCollection(17),Global.System.Data.SqlClient.SqlCommand)
            If (SHsh Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(SHsh,String)
            End If
            If (Table_Name Is Nothing) Then
                command.Parameters(2).Value = Global.System.DBNull.Value
            Else
                command.Parameters(2).Value = CType(Table_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Insert_TBL_Amlak_Mostaghelat( _
                    ByVal Tarikh_Malekiat As String,  _
                    ByVal Tarikh_PMalekiat As String,  _
                    ByVal Shomare_Shenasnameh As String,  _
                    ByVal N_Mashhoor As String,  _
                    ByVal N_Khiaban As String,  _
                    ByVal N_Meydan As String,  _
                    ByVal N_Bazar As String,  _
                    ByVal N_Pasaj As String,  _
                    ByVal N_Koocheh As String,  _
                    ByVal N_BonBast As String,  _
                    ByVal N_PelakAbi As String,  _
                    ByVal N_Name_Block As String,  _
                    ByVal N_Tabagheh As String,  _
                    ByVal N_Code_Posti As String,  _
                    ByVal N_Radif_MGhabli As String,  _
                    ByVal Masahat_Zamin As Global.System.Nullable(Of Single),  _
                    ByVal Masahat_Jebheh As Global.System.Nullable(Of Single),  _
                    ByVal Masahat_PJebheh As Global.System.Nullable(Of Single),  _
                    ByVal Tedad_Zel As Global.System.Nullable(Of Byte),  _
                    ByVal Bar_Tedad As Global.System.Nullable(Of Byte),  _
                    ByVal Bar_Onvan As Global.System.Nullable(Of Byte),  _
                    ByVal Tedad_Malek As Global.System.Nullable(Of Byte),  _
                    ByVal No_Moshakhasat As String,  _
                    ByVal Tedad_Sakhteman As Global.System.Nullable(Of Integer),  _
                    ByVal Tedad_Aparteman As Global.System.Nullable(Of Single),  _
                    ByVal Tedad_Vahed_Kasb As Global.System.Nullable(Of Integer),  _
                    ByVal Masahat_Melk As Global.System.Nullable(Of Single),  _
                    ByVal Metr_Dar As String,  _
                    ByVal Rah_Mostaghel As Global.System.Nullable(Of Boolean),  _
                    ByVal Tedad_Vahed As Global.System.Nullable(Of Integer),  _
                    ByVal No_Malekiyat As String,  _
                    ByVal Name_Malek As String,  _
                    ByVal Hozoor As Global.System.Nullable(Of Boolean)) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = CType(Me.CommandCollection(18),Global.System.Data.SqlClient.SqlCommand)
            If (Tarikh_Malekiat Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(Tarikh_Malekiat,String)
            End If
            If (Tarikh_PMalekiat Is Nothing) Then
                command.Parameters(2).Value = Global.System.DBNull.Value
            Else
                command.Parameters(2).Value = CType(Tarikh_PMalekiat,String)
            End If
            If (Shomare_Shenasnameh Is Nothing) Then
                command.Parameters(3).Value = Global.System.DBNull.Value
            Else
                command.Parameters(3).Value = CType(Shomare_Shenasnameh,String)
            End If
            If (N_Mashhoor Is Nothing) Then
                command.Parameters(4).Value = Global.System.DBNull.Value
            Else
                command.Parameters(4).Value = CType(N_Mashhoor,String)
            End If
            If (N_Khiaban Is Nothing) Then
                command.Parameters(5).Value = Global.System.DBNull.Value
            Else
                command.Parameters(5).Value = CType(N_Khiaban,String)
            End If
            If (N_Meydan Is Nothing) Then
                command.Parameters(6).Value = Global.System.DBNull.Value
            Else
                command.Parameters(6).Value = CType(N_Meydan,String)
            End If
            If (N_Bazar Is Nothing) Then
                command.Parameters(7).Value = Global.System.DBNull.Value
            Else
                command.Parameters(7).Value = CType(N_Bazar,String)
            End If
            If (N_Pasaj Is Nothing) Then
                command.Parameters(8).Value = Global.System.DBNull.Value
            Else
                command.Parameters(8).Value = CType(N_Pasaj,String)
            End If
            If (N_Koocheh Is Nothing) Then
                command.Parameters(9).Value = Global.System.DBNull.Value
            Else
                command.Parameters(9).Value = CType(N_Koocheh,String)
            End If
            If (N_BonBast Is Nothing) Then
                command.Parameters(10).Value = Global.System.DBNull.Value
            Else
                command.Parameters(10).Value = CType(N_BonBast,String)
            End If
            If (N_PelakAbi Is Nothing) Then
                command.Parameters(11).Value = Global.System.DBNull.Value
            Else
                command.Parameters(11).Value = CType(N_PelakAbi,String)
            End If
            If (N_Name_Block Is Nothing) Then
                command.Parameters(12).Value = Global.System.DBNull.Value
            Else
                command.Parameters(12).Value = CType(N_Name_Block,String)
            End If
            If (N_Tabagheh Is Nothing) Then
                command.Parameters(13).Value = Global.System.DBNull.Value
            Else
                command.Parameters(13).Value = CType(N_Tabagheh,String)
            End If
            If (N_Code_Posti Is Nothing) Then
                command.Parameters(14).Value = Global.System.DBNull.Value
            Else
                command.Parameters(14).Value = CType(N_Code_Posti,String)
            End If
            If (N_Radif_MGhabli Is Nothing) Then
                command.Parameters(15).Value = Global.System.DBNull.Value
            Else
                command.Parameters(15).Value = CType(N_Radif_MGhabli,String)
            End If
            If (Masahat_Zamin.HasValue = true) Then
                command.Parameters(16).Value = CType(Masahat_Zamin.Value,Single)
            Else
                command.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Masahat_Jebheh.HasValue = true) Then
                command.Parameters(17).Value = CType(Masahat_Jebheh.Value,Single)
            Else
                command.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (Masahat_PJebheh.HasValue = true) Then
                command.Parameters(18).Value = CType(Masahat_PJebheh.Value,Single)
            Else
                command.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (Tedad_Zel.HasValue = true) Then
                command.Parameters(19).Value = CType(Tedad_Zel.Value,Byte)
            Else
                command.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (Bar_Tedad.HasValue = true) Then
                command.Parameters(20).Value = CType(Bar_Tedad.Value,Byte)
            Else
                command.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (Bar_Onvan.HasValue = true) Then
                command.Parameters(21).Value = CType(Bar_Onvan.Value,Byte)
            Else
                command.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (Tedad_Malek.HasValue = true) Then
                command.Parameters(22).Value = CType(Tedad_Malek.Value,Byte)
            Else
                command.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (No_Moshakhasat Is Nothing) Then
                command.Parameters(23).Value = Global.System.DBNull.Value
            Else
                command.Parameters(23).Value = CType(No_Moshakhasat,String)
            End If
            If (Tedad_Sakhteman.HasValue = true) Then
                command.Parameters(24).Value = CType(Tedad_Sakhteman.Value,Integer)
            Else
                command.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Tedad_Aparteman.HasValue = true) Then
                command.Parameters(25).Value = CType(Tedad_Aparteman.Value,Single)
            Else
                command.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (Tedad_Vahed_Kasb.HasValue = true) Then
                command.Parameters(26).Value = CType(Tedad_Vahed_Kasb.Value,Integer)
            Else
                command.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Masahat_Melk.HasValue = true) Then
                command.Parameters(27).Value = CType(Masahat_Melk.Value,Single)
            Else
                command.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (Metr_Dar Is Nothing) Then
                command.Parameters(28).Value = Global.System.DBNull.Value
            Else
                command.Parameters(28).Value = CType(Metr_Dar,String)
            End If
            If (Rah_Mostaghel.HasValue = true) Then
                command.Parameters(29).Value = CType(Rah_Mostaghel.Value,Boolean)
            Else
                command.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (Tedad_Vahed.HasValue = true) Then
                command.Parameters(30).Value = CType(Tedad_Vahed.Value,Integer)
            Else
                command.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (No_Malekiyat Is Nothing) Then
                command.Parameters(31).Value = Global.System.DBNull.Value
            Else
                command.Parameters(31).Value = CType(No_Malekiyat,String)
            End If
            If (Name_Malek Is Nothing) Then
                command.Parameters(32).Value = Global.System.DBNull.Value
            Else
                command.Parameters(32).Value = CType(Name_Malek,String)
            End If
            If (Hozoor.HasValue = true) Then
                command.Parameters(33).Value = CType(Hozoor.Value,Boolean)
            Else
                command.Parameters(33).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update_Tbl_Amlak_Mostaghelat( _
                    ByVal SHsh As String,  _
                    ByVal Tarikh_Malekiat As String,  _
                    ByVal Tarikh_PMalekiat As String,  _
                    ByVal Shomare_Shenasnameh As String,  _
                    ByVal N_Mashhoor As String,  _
                    ByVal N_Khiaban As String,  _
                    ByVal N_Meydan As String,  _
                    ByVal N_Bazar As String,  _
                    ByVal N_Pasaj As String,  _
                    ByVal N_Koocheh As String,  _
                    ByVal N_BonBast As String,  _
                    ByVal N_PelakAbi As String,  _
                    ByVal N_Name_Block As String,  _
                    ByVal N_Tabagheh As String,  _
                    ByVal N_Code_Posti As String,  _
                    ByVal N_Radif_MGhabli As String,  _
                    ByVal Masahat_Zamin As Global.System.Nullable(Of Single),  _
                    ByVal Masahat_Jebheh As Global.System.Nullable(Of Single),  _
                    ByVal Masahat_PJebheh As Global.System.Nullable(Of Single),  _
                    ByVal Tedad_Zel As Global.System.Nullable(Of Byte),  _
                    ByVal Bar_Tedad As Global.System.Nullable(Of Byte),  _
                    ByVal Bar_Onvan As Global.System.Nullable(Of Byte),  _
                    ByVal Tedad_Malek As Global.System.Nullable(Of Byte),  _
                    ByVal No_Moshakhasat As String,  _
                    ByVal Tedad_Sakhteman As Global.System.Nullable(Of Integer),  _
                    ByVal Tedad_Aparteman As Global.System.Nullable(Of Single),  _
                    ByVal Tedad_Vahed_Kasb As Global.System.Nullable(Of Integer),  _
                    ByVal Masahat_Melk As Global.System.Nullable(Of Single),  _
                    ByVal Metr_Dar As String,  _
                    ByVal Rah_Mostaghel As Global.System.Nullable(Of Boolean),  _
                    ByVal Tedad_Vahed As Global.System.Nullable(Of Integer),  _
                    ByVal No_Malekiyat As String,  _
                    ByVal Name_Malek As String,  _
                    ByVal Hozoor As Global.System.Nullable(Of Boolean)) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = CType(Me.CommandCollection(19),Global.System.Data.SqlClient.SqlCommand)
            If (SHsh Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(SHsh,String)
            End If
            If (Tarikh_Malekiat Is Nothing) Then
                command.Parameters(2).Value = Global.System.DBNull.Value
            Else
                command.Parameters(2).Value = CType(Tarikh_Malekiat,String)
            End If
            If (Tarikh_PMalekiat Is Nothing) Then
                command.Parameters(3).Value = Global.System.DBNull.Value
            Else
                command.Parameters(3).Value = CType(Tarikh_PMalekiat,String)
            End If
            If (Shomare_Shenasnameh Is Nothing) Then
                command.Parameters(4).Value = Global.System.DBNull.Value
            Else
                command.Parameters(4).Value = CType(Shomare_Shenasnameh,String)
            End If
            If (N_Mashhoor Is Nothing) Then
                command.Parameters(5).Value = Global.System.DBNull.Value
            Else
                command.Parameters(5).Value = CType(N_Mashhoor,String)
            End If
            If (N_Khiaban Is Nothing) Then
                command.Parameters(6).Value = Global.System.DBNull.Value
            Else
                command.Parameters(6).Value = CType(N_Khiaban,String)
            End If
            If (N_Meydan Is Nothing) Then
                command.Parameters(7).Value = Global.System.DBNull.Value
            Else
                command.Parameters(7).Value = CType(N_Meydan,String)
            End If
            If (N_Bazar Is Nothing) Then
                command.Parameters(8).Value = Global.System.DBNull.Value
            Else
                command.Parameters(8).Value = CType(N_Bazar,String)
            End If
            If (N_Pasaj Is Nothing) Then
                command.Parameters(9).Value = Global.System.DBNull.Value
            Else
                command.Parameters(9).Value = CType(N_Pasaj,String)
            End If
            If (N_Koocheh Is Nothing) Then
                command.Parameters(10).Value = Global.System.DBNull.Value
            Else
                command.Parameters(10).Value = CType(N_Koocheh,String)
            End If
            If (N_BonBast Is Nothing) Then
                command.Parameters(11).Value = Global.System.DBNull.Value
            Else
                command.Parameters(11).Value = CType(N_BonBast,String)
            End If
            If (N_PelakAbi Is Nothing) Then
                command.Parameters(12).Value = Global.System.DBNull.Value
            Else
                command.Parameters(12).Value = CType(N_PelakAbi,String)
            End If
            If (N_Name_Block Is Nothing) Then
                command.Parameters(13).Value = Global.System.DBNull.Value
            Else
                command.Parameters(13).Value = CType(N_Name_Block,String)
            End If
            If (N_Tabagheh Is Nothing) Then
                command.Parameters(14).Value = Global.System.DBNull.Value
            Else
                command.Parameters(14).Value = CType(N_Tabagheh,String)
            End If
            If (N_Code_Posti Is Nothing) Then
                command.Parameters(15).Value = Global.System.DBNull.Value
            Else
                command.Parameters(15).Value = CType(N_Code_Posti,String)
            End If
            If (N_Radif_MGhabli Is Nothing) Then
                command.Parameters(16).Value = Global.System.DBNull.Value
            Else
                command.Parameters(16).Value = CType(N_Radif_MGhabli,String)
            End If
            If (Masahat_Zamin.HasValue = true) Then
                command.Parameters(17).Value = CType(Masahat_Zamin.Value,Single)
            Else
                command.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (Masahat_Jebheh.HasValue = true) Then
                command.Parameters(18).Value = CType(Masahat_Jebheh.Value,Single)
            Else
                command.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (Masahat_PJebheh.HasValue = true) Then
                command.Parameters(19).Value = CType(Masahat_PJebheh.Value,Single)
            Else
                command.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (Tedad_Zel.HasValue = true) Then
                command.Parameters(20).Value = CType(Tedad_Zel.Value,Byte)
            Else
                command.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (Bar_Tedad.HasValue = true) Then
                command.Parameters(21).Value = CType(Bar_Tedad.Value,Byte)
            Else
                command.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (Bar_Onvan.HasValue = true) Then
                command.Parameters(22).Value = CType(Bar_Onvan.Value,Byte)
            Else
                command.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (Tedad_Malek.HasValue = true) Then
                command.Parameters(23).Value = CType(Tedad_Malek.Value,Byte)
            Else
                command.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (No_Moshakhasat Is Nothing) Then
                command.Parameters(24).Value = Global.System.DBNull.Value
            Else
                command.Parameters(24).Value = CType(No_Moshakhasat,String)
            End If
            If (Tedad_Sakhteman.HasValue = true) Then
                command.Parameters(25).Value = CType(Tedad_Sakhteman.Value,Integer)
            Else
                command.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (Tedad_Aparteman.HasValue = true) Then
                command.Parameters(26).Value = CType(Tedad_Aparteman.Value,Single)
            Else
                command.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Tedad_Vahed_Kasb.HasValue = true) Then
                command.Parameters(27).Value = CType(Tedad_Vahed_Kasb.Value,Integer)
            Else
                command.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (Masahat_Melk.HasValue = true) Then
                command.Parameters(28).Value = CType(Masahat_Melk.Value,Single)
            Else
                command.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (Metr_Dar Is Nothing) Then
                command.Parameters(29).Value = Global.System.DBNull.Value
            Else
                command.Parameters(29).Value = CType(Metr_Dar,String)
            End If
            If (Rah_Mostaghel.HasValue = true) Then
                command.Parameters(30).Value = CType(Rah_Mostaghel.Value,Boolean)
            Else
                command.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (Tedad_Vahed.HasValue = true) Then
                command.Parameters(31).Value = CType(Tedad_Vahed.Value,Integer)
            Else
                command.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (No_Malekiyat Is Nothing) Then
                command.Parameters(32).Value = Global.System.DBNull.Value
            Else
                command.Parameters(32).Value = CType(No_Malekiyat,String)
            End If
            If (Name_Malek Is Nothing) Then
                command.Parameters(33).Value = Global.System.DBNull.Value
            Else
                command.Parameters(33).Value = CType(Name_Malek,String)
            End If
            If (Hozoor.HasValue = true) Then
                command.Parameters(34).Value = CType(Hozoor.Value,Boolean)
            Else
                command.Parameters(34).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update_Tbl_Derakht(ByVal SHsh As String, ByVal No_Param As String, ByVal Bon_Param As String, ByVal No As String, ByVal Bon As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = CType(Me.CommandCollection(20),Global.System.Data.SqlClient.SqlCommand)
            If (SHsh Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(SHsh,String)
            End If
            If (No_Param Is Nothing) Then
                command.Parameters(2).Value = Global.System.DBNull.Value
            Else
                command.Parameters(2).Value = CType(No_Param,String)
            End If
            If (Bon_Param Is Nothing) Then
                command.Parameters(3).Value = Global.System.DBNull.Value
            Else
                command.Parameters(3).Value = CType(Bon_Param,String)
            End If
            If (No Is Nothing) Then
                command.Parameters(4).Value = Global.System.DBNull.Value
            Else
                command.Parameters(4).Value = CType(No,String)
            End If
            If (Bon Is Nothing) Then
                command.Parameters(5).Value = Global.System.DBNull.Value
            Else
                command.Parameters(5).Value = CType(Bon,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Insert_Tbl_Moshakhasat_Sakhteman(ByVal Shomare_Shenasnameh As String, ByVal Tedad_Tabaghat As Global.System.Nullable(Of Single), ByVal Masahat_Zirbana As Global.System.Nullable(Of Single), ByVal Masahat_Bana As Global.System.Nullable(Of Single), ByVal Masahat_Hararat As Global.System.Nullable(Of Single), ByVal Masahat_Tahvieh As Global.System.Nullable(Of Single), ByVal Masahat_Khonak As Global.System.Nullable(Of Single), ByVal Masahat_Asansor As Global.System.Nullable(Of Single), ByVal Sharh_No_Divar As String, ByVal Sharh_No_Saghf As String, ByVal Code_no_Sakhteman As Global.System.Nullable(Of Byte), ByVal No_Nama As String, ByVal No_Nama_Code As Global.System.Nullable(Of Byte), ByVal Masahat_zirzamin As Global.System.Nullable(Of Single)) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = CType(Me.CommandCollection(21),Global.System.Data.SqlClient.SqlCommand)
            If (Shomare_Shenasnameh Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(Shomare_Shenasnameh,String)
            End If
            If (Tedad_Tabaghat.HasValue = true) Then
                command.Parameters(2).Value = CType(Tedad_Tabaghat.Value,Single)
            Else
                command.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Masahat_Zirbana.HasValue = true) Then
                command.Parameters(3).Value = CType(Masahat_Zirbana.Value,Single)
            Else
                command.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Masahat_Bana.HasValue = true) Then
                command.Parameters(4).Value = CType(Masahat_Bana.Value,Single)
            Else
                command.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Masahat_Hararat.HasValue = true) Then
                command.Parameters(5).Value = CType(Masahat_Hararat.Value,Single)
            Else
                command.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Masahat_Tahvieh.HasValue = true) Then
                command.Parameters(6).Value = CType(Masahat_Tahvieh.Value,Single)
            Else
                command.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Masahat_Khonak.HasValue = true) Then
                command.Parameters(7).Value = CType(Masahat_Khonak.Value,Single)
            Else
                command.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (Masahat_Asansor.HasValue = true) Then
                command.Parameters(8).Value = CType(Masahat_Asansor.Value,Single)
            Else
                command.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Sharh_No_Divar Is Nothing) Then
                command.Parameters(9).Value = Global.System.DBNull.Value
            Else
                command.Parameters(9).Value = CType(Sharh_No_Divar,String)
            End If
            If (Sharh_No_Saghf Is Nothing) Then
                command.Parameters(10).Value = Global.System.DBNull.Value
            Else
                command.Parameters(10).Value = CType(Sharh_No_Saghf,String)
            End If
            If (Code_no_Sakhteman.HasValue = true) Then
                command.Parameters(11).Value = CType(Code_no_Sakhteman.Value,Byte)
            Else
                command.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (No_Nama Is Nothing) Then
                command.Parameters(12).Value = Global.System.DBNull.Value
            Else
                command.Parameters(12).Value = CType(No_Nama,String)
            End If
            If (No_Nama_Code.HasValue = true) Then
                command.Parameters(13).Value = CType(No_Nama_Code.Value,Byte)
            Else
                command.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (Masahat_zirzamin.HasValue = true) Then
                command.Parameters(14).Value = CType(Masahat_zirzamin.Value,Single)
            Else
                command.Parameters(14).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update_Tbl_Moshakhasat_Sakhteman( _
                    ByVal SHsh As String,  _
                    ByVal Masahat_Zirbana_Param As Global.System.Nullable(Of Single),  _
                    ByVal Masahat_Bana_Param As Global.System.Nullable(Of Single),  _
                    ByVal Tedad_Tabaghat As Global.System.Nullable(Of Single),  _
                    ByVal Masahat_Zirbana As Global.System.Nullable(Of Single),  _
                    ByVal Masahat_Bana As Global.System.Nullable(Of Single),  _
                    ByVal Masahat_Hararat As Global.System.Nullable(Of Single),  _
                    ByVal Masahat_Tahvieh As Global.System.Nullable(Of Single),  _
                    ByVal Masahat_Khonak As Global.System.Nullable(Of Single),  _
                    ByVal Masahat_Asansor As Global.System.Nullable(Of Single),  _
                    ByVal Sharh_No_Divar As String,  _
                    ByVal Sharh_No_Saghf As String,  _
                    ByVal Code_no_Sakhteman As Global.System.Nullable(Of Byte),  _
                    ByVal No_Nama As String,  _
                    ByVal No_Nama_Code As Global.System.Nullable(Of Byte),  _
                    ByVal Masahat_zirzamin As Global.System.Nullable(Of Single)) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = CType(Me.CommandCollection(22),Global.System.Data.SqlClient.SqlCommand)
            If (SHsh Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(SHsh,String)
            End If
            If (Masahat_Zirbana_Param.HasValue = true) Then
                command.Parameters(2).Value = CType(Masahat_Zirbana_Param.Value,Single)
            Else
                command.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Masahat_Bana_Param.HasValue = true) Then
                command.Parameters(3).Value = CType(Masahat_Bana_Param.Value,Single)
            Else
                command.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Tedad_Tabaghat.HasValue = true) Then
                command.Parameters(4).Value = CType(Tedad_Tabaghat.Value,Single)
            Else
                command.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Masahat_Zirbana.HasValue = true) Then
                command.Parameters(5).Value = CType(Masahat_Zirbana.Value,Single)
            Else
                command.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Masahat_Bana.HasValue = true) Then
                command.Parameters(6).Value = CType(Masahat_Bana.Value,Single)
            Else
                command.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Masahat_Hararat.HasValue = true) Then
                command.Parameters(7).Value = CType(Masahat_Hararat.Value,Single)
            Else
                command.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (Masahat_Tahvieh.HasValue = true) Then
                command.Parameters(8).Value = CType(Masahat_Tahvieh.Value,Single)
            Else
                command.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Masahat_Khonak.HasValue = true) Then
                command.Parameters(9).Value = CType(Masahat_Khonak.Value,Single)
            Else
                command.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Masahat_Asansor.HasValue = true) Then
                command.Parameters(10).Value = CType(Masahat_Asansor.Value,Single)
            Else
                command.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Sharh_No_Divar Is Nothing) Then
                command.Parameters(11).Value = Global.System.DBNull.Value
            Else
                command.Parameters(11).Value = CType(Sharh_No_Divar,String)
            End If
            If (Sharh_No_Saghf Is Nothing) Then
                command.Parameters(12).Value = Global.System.DBNull.Value
            Else
                command.Parameters(12).Value = CType(Sharh_No_Saghf,String)
            End If
            If (Code_no_Sakhteman.HasValue = true) Then
                command.Parameters(13).Value = CType(Code_no_Sakhteman.Value,Byte)
            Else
                command.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (No_Nama Is Nothing) Then
                command.Parameters(14).Value = Global.System.DBNull.Value
            Else
                command.Parameters(14).Value = CType(No_Nama,String)
            End If
            If (No_Nama_Code.HasValue = true) Then
                command.Parameters(15).Value = CType(No_Nama_Code.Value,Byte)
            Else
                command.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (Masahat_zirzamin.HasValue = true) Then
                command.Parameters(16).Value = CType(Masahat_zirzamin.Value,Single)
            Else
                command.Parameters(16).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update_Tbl_Eshterak(ByVal SHsh As String, ByVal Hajm_Estakhr As Global.System.Nullable(Of Single), ByVal Masahat_Estakhr As Global.System.Nullable(Of Single), ByVal Masahat_Golkhaneh As Global.System.Nullable(Of Single), ByVal Tedad_Chah As Global.System.Nullable(Of Byte), ByVal Shomareh_Ab As String, ByVal Shomareh_Bargh As String, ByVal Shomareh_Gaz As String, ByVal Shomareh_Tel As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = CType(Me.CommandCollection(23),Global.System.Data.SqlClient.SqlCommand)
            If (SHsh Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(SHsh,String)
            End If
            If (Hajm_Estakhr.HasValue = true) Then
                command.Parameters(2).Value = CType(Hajm_Estakhr.Value,Single)
            Else
                command.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Masahat_Estakhr.HasValue = true) Then
                command.Parameters(3).Value = CType(Masahat_Estakhr.Value,Single)
            Else
                command.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Masahat_Golkhaneh.HasValue = true) Then
                command.Parameters(4).Value = CType(Masahat_Golkhaneh.Value,Single)
            Else
                command.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Tedad_Chah.HasValue = true) Then
                command.Parameters(5).Value = CType(Tedad_Chah.Value,Byte)
            Else
                command.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Shomareh_Ab Is Nothing) Then
                command.Parameters(6).Value = Global.System.DBNull.Value
            Else
                command.Parameters(6).Value = CType(Shomareh_Ab,String)
            End If
            If (Shomareh_Bargh Is Nothing) Then
                command.Parameters(7).Value = Global.System.DBNull.Value
            Else
                command.Parameters(7).Value = CType(Shomareh_Bargh,String)
            End If
            If (Shomareh_Gaz Is Nothing) Then
                command.Parameters(8).Value = Global.System.DBNull.Value
            Else
                command.Parameters(8).Value = CType(Shomareh_Gaz,String)
            End If
            If (Shomareh_Tel Is Nothing) Then
                command.Parameters(9).Value = Global.System.DBNull.Value
            Else
                command.Parameters(9).Value = CType(Shomareh_Tel,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update_Tbl_Afrad_Momayezi(ByVal SHsh As String, ByVal Momayez_Tarikh As String, ByVal Momayez_Name As String, ByVal Bazbin_Tarikh As String, ByVal Bazbin_Name As String, ByVal SNahieh_Tarikh As String, ByVal SNahieh_Name As String, ByVal SMantagheh_Tarikh As String, ByVal SMantagheh_Name As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = CType(Me.CommandCollection(24),Global.System.Data.SqlClient.SqlCommand)
            If (SHsh Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(SHsh,String)
            End If
            If (Momayez_Tarikh Is Nothing) Then
                command.Parameters(2).Value = Global.System.DBNull.Value
            Else
                command.Parameters(2).Value = CType(Momayez_Tarikh,String)
            End If
            If (Momayez_Name Is Nothing) Then
                command.Parameters(3).Value = Global.System.DBNull.Value
            Else
                command.Parameters(3).Value = CType(Momayez_Name,String)
            End If
            If (Bazbin_Tarikh Is Nothing) Then
                command.Parameters(4).Value = Global.System.DBNull.Value
            Else
                command.Parameters(4).Value = CType(Bazbin_Tarikh,String)
            End If
            If (Bazbin_Name Is Nothing) Then
                command.Parameters(5).Value = Global.System.DBNull.Value
            Else
                command.Parameters(5).Value = CType(Bazbin_Name,String)
            End If
            If (SNahieh_Tarikh Is Nothing) Then
                command.Parameters(6).Value = Global.System.DBNull.Value
            Else
                command.Parameters(6).Value = CType(SNahieh_Tarikh,String)
            End If
            If (SNahieh_Name Is Nothing) Then
                command.Parameters(7).Value = Global.System.DBNull.Value
            Else
                command.Parameters(7).Value = CType(SNahieh_Name,String)
            End If
            If (SMantagheh_Tarikh Is Nothing) Then
                command.Parameters(8).Value = Global.System.DBNull.Value
            Else
                command.Parameters(8).Value = CType(SMantagheh_Tarikh,String)
            End If
            If (SMantagheh_Name Is Nothing) Then
                command.Parameters(9).Value = Global.System.DBNull.Value
            Else
                command.Parameters(9).Value = CType(SMantagheh_Name,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update_Tbl_Momayezi(ByVal SHsh As String, ByVal Tarikh As String, ByVal Vazeiat As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = CType(Me.CommandCollection(25),Global.System.Data.SqlClient.SqlCommand)
            If (SHsh Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(SHsh,String)
            End If
            If (Tarikh Is Nothing) Then
                command.Parameters(2).Value = Global.System.DBNull.Value
            Else
                command.Parameters(2).Value = CType(Tarikh,String)
            End If
            If (Vazeiat Is Nothing) Then
                command.Parameters(3).Value = Global.System.DBNull.Value
            Else
                command.Parameters(3).Value = CType(Vazeiat,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update_TblDFN_Block(ByVal Code As Global.System.Nullable(Of Byte), ByVal Code_SHsh As String, ByVal Sharh As String, ByVal Shomal As String, ByVal Shargh As String, ByVal Jonoub As String, ByVal Gharb As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = CType(Me.CommandCollection(26),Global.System.Data.SqlClient.SqlCommand)
            If (Code.HasValue = true) Then
                command.Parameters(1).Value = CType(Code.Value,Byte)
            Else
                command.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Code_SHsh Is Nothing) Then
                command.Parameters(2).Value = Global.System.DBNull.Value
            Else
                command.Parameters(2).Value = CType(Code_SHsh,String)
            End If
            If (Sharh Is Nothing) Then
                command.Parameters(3).Value = Global.System.DBNull.Value
            Else
                command.Parameters(3).Value = CType(Sharh,String)
            End If
            If (Shomal Is Nothing) Then
                command.Parameters(4).Value = Global.System.DBNull.Value
            Else
                command.Parameters(4).Value = CType(Shomal,String)
            End If
            If (Shargh Is Nothing) Then
                command.Parameters(5).Value = Global.System.DBNull.Value
            Else
                command.Parameters(5).Value = CType(Shargh,String)
            End If
            If (Jonoub Is Nothing) Then
                command.Parameters(6).Value = Global.System.DBNull.Value
            Else
                command.Parameters(6).Value = CType(Jonoub,String)
            End If
            If (Gharb Is Nothing) Then
                command.Parameters(7).Value = Global.System.DBNull.Value
            Else
                command.Parameters(7).Value = CType(Gharb,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _dFNsTableAdapter As DFNsTableAdapter
        
        Private _tbl_Moshakhasat_ZaminTableAdapter As Tbl_Moshakhasat_ZaminTableAdapter
        
        Private _tblDFN_GheymatTableAdapter As TblDFN_GheymatTableAdapter
        
        Private _tblDFN_BlockTableAdapter As TblDFN_BlockTableAdapter
        
        Private _tblDFN_SALTableAdapter As TblDFN_SALTableAdapter
        
        Private _tbl_Moshakhasat_MalekinTableAdapter As Tbl_Moshakhasat_MalekinTableAdapter
        
        Private _tbl_Mahiyat_FizikiTableAdapter As Tbl_Mahiyat_FizikiTableAdapter
        
        Private _tbl_No_EstefadehTableAdapter As Tbl_No_EstefadehTableAdapter
        
        Private _tAmlakTableAdapter As TAmlakTableAdapter
        
        Private _tbl_Moshakhasat_Zamin1TableAdapter As Tbl_Moshakhasat_Zamin1TableAdapter
        
        Private _tbl_Moshakhasat_Zamin2TableAdapter As Tbl_Moshakhasat_Zamin2TableAdapter
        
        Private _tbl_Amlak_MostaghelatTableAdapter As Tbl_Amlak_MostaghelatTableAdapter
        
        Private _tbl_Moshakhasat_SakhtemanTableAdapter As Tbl_Moshakhasat_SakhtemanTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property DFNsTableAdapter() As DFNsTableAdapter
            Get
                Return Me._dFNsTableAdapter
            End Get
            Set
                If ((Not (Me._dFNsTableAdapter) Is Nothing)  _
                            AndAlso (Me.TableAdapterInstanceCount = 1)) Then
                    Me._dFNsTableAdapter = value
                    Return
                End If
                If ((Not (value) Is Nothing)  _
                            AndAlso (Me.MatchTableAdapterConnection(value.Connection) = false)) Then
                    Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                            "tring.")
                End If
                Me._dFNsTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property Tbl_Moshakhasat_ZaminTableAdapter() As Tbl_Moshakhasat_ZaminTableAdapter
            Get
                Return Me._tbl_Moshakhasat_ZaminTableAdapter
            End Get
            Set
                If ((Not (Me._tbl_Moshakhasat_ZaminTableAdapter) Is Nothing)  _
                            AndAlso (Me.TableAdapterInstanceCount = 1)) Then
                    Me._tbl_Moshakhasat_ZaminTableAdapter = value
                    Return
                End If
                If ((Not (value) Is Nothing)  _
                            AndAlso (Me.MatchTableAdapterConnection(value.Connection) = false)) Then
                    Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                            "tring.")
                End If
                Me._tbl_Moshakhasat_ZaminTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property TblDFN_GheymatTableAdapter() As TblDFN_GheymatTableAdapter
            Get
                Return Me._tblDFN_GheymatTableAdapter
            End Get
            Set
                If ((Not (Me._tblDFN_GheymatTableAdapter) Is Nothing)  _
                            AndAlso (Me.TableAdapterInstanceCount = 1)) Then
                    Me._tblDFN_GheymatTableAdapter = value
                    Return
                End If
                If ((Not (value) Is Nothing)  _
                            AndAlso (Me.MatchTableAdapterConnection(value.Connection) = false)) Then
                    Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                            "tring.")
                End If
                Me._tblDFN_GheymatTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property TblDFN_BlockTableAdapter() As TblDFN_BlockTableAdapter
            Get
                Return Me._tblDFN_BlockTableAdapter
            End Get
            Set
                If ((Not (Me._tblDFN_BlockTableAdapter) Is Nothing)  _
                            AndAlso (Me.TableAdapterInstanceCount = 1)) Then
                    Me._tblDFN_BlockTableAdapter = value
                    Return
                End If
                If ((Not (value) Is Nothing)  _
                            AndAlso (Me.MatchTableAdapterConnection(value.Connection) = false)) Then
                    Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                            "tring.")
                End If
                Me._tblDFN_BlockTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property TblDFN_SALTableAdapter() As TblDFN_SALTableAdapter
            Get
                Return Me._tblDFN_SALTableAdapter
            End Get
            Set
                If ((Not (Me._tblDFN_SALTableAdapter) Is Nothing)  _
                            AndAlso (Me.TableAdapterInstanceCount = 1)) Then
                    Me._tblDFN_SALTableAdapter = value
                    Return
                End If
                If ((Not (value) Is Nothing)  _
                            AndAlso (Me.MatchTableAdapterConnection(value.Connection) = false)) Then
                    Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                            "tring.")
                End If
                Me._tblDFN_SALTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property Tbl_Moshakhasat_MalekinTableAdapter() As Tbl_Moshakhasat_MalekinTableAdapter
            Get
                Return Me._tbl_Moshakhasat_MalekinTableAdapter
            End Get
            Set
                If ((Not (Me._tbl_Moshakhasat_MalekinTableAdapter) Is Nothing)  _
                            AndAlso (Me.TableAdapterInstanceCount = 1)) Then
                    Me._tbl_Moshakhasat_MalekinTableAdapter = value
                    Return
                End If
                If ((Not (value) Is Nothing)  _
                            AndAlso (Me.MatchTableAdapterConnection(value.Connection) = false)) Then
                    Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                            "tring.")
                End If
                Me._tbl_Moshakhasat_MalekinTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property Tbl_Mahiyat_FizikiTableAdapter() As Tbl_Mahiyat_FizikiTableAdapter
            Get
                Return Me._tbl_Mahiyat_FizikiTableAdapter
            End Get
            Set
                If ((Not (Me._tbl_Mahiyat_FizikiTableAdapter) Is Nothing)  _
                            AndAlso (Me.TableAdapterInstanceCount = 1)) Then
                    Me._tbl_Mahiyat_FizikiTableAdapter = value
                    Return
                End If
                If ((Not (value) Is Nothing)  _
                            AndAlso (Me.MatchTableAdapterConnection(value.Connection) = false)) Then
                    Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                            "tring.")
                End If
                Me._tbl_Mahiyat_FizikiTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property Tbl_No_EstefadehTableAdapter() As Tbl_No_EstefadehTableAdapter
            Get
                Return Me._tbl_No_EstefadehTableAdapter
            End Get
            Set
                If ((Not (Me._tbl_No_EstefadehTableAdapter) Is Nothing)  _
                            AndAlso (Me.TableAdapterInstanceCount = 1)) Then
                    Me._tbl_No_EstefadehTableAdapter = value
                    Return
                End If
                If ((Not (value) Is Nothing)  _
                            AndAlso (Me.MatchTableAdapterConnection(value.Connection) = false)) Then
                    Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                            "tring.")
                End If
                Me._tbl_No_EstefadehTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property TAmlakTableAdapter() As TAmlakTableAdapter
            Get
                Return Me._tAmlakTableAdapter
            End Get
            Set
                If ((Not (Me._tAmlakTableAdapter) Is Nothing)  _
                            AndAlso (Me.TableAdapterInstanceCount = 1)) Then
                    Me._tAmlakTableAdapter = value
                    Return
                End If
                If ((Not (value) Is Nothing)  _
                            AndAlso (Me.MatchTableAdapterConnection(value.Connection) = false)) Then
                    Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                            "tring.")
                End If
                Me._tAmlakTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property Tbl_Moshakhasat_Zamin1TableAdapter() As Tbl_Moshakhasat_Zamin1TableAdapter
            Get
                Return Me._tbl_Moshakhasat_Zamin1TableAdapter
            End Get
            Set
                If ((Not (Me._tbl_Moshakhasat_Zamin1TableAdapter) Is Nothing)  _
                            AndAlso (Me.TableAdapterInstanceCount = 1)) Then
                    Me._tbl_Moshakhasat_Zamin1TableAdapter = value
                    Return
                End If
                If ((Not (value) Is Nothing)  _
                            AndAlso (Me.MatchTableAdapterConnection(value.Connection) = false)) Then
                    Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                            "tring.")
                End If
                Me._tbl_Moshakhasat_Zamin1TableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property Tbl_Moshakhasat_Zamin2TableAdapter() As Tbl_Moshakhasat_Zamin2TableAdapter
            Get
                Return Me._tbl_Moshakhasat_Zamin2TableAdapter
            End Get
            Set
                If ((Not (Me._tbl_Moshakhasat_Zamin2TableAdapter) Is Nothing)  _
                            AndAlso (Me.TableAdapterInstanceCount = 1)) Then
                    Me._tbl_Moshakhasat_Zamin2TableAdapter = value
                    Return
                End If
                If ((Not (value) Is Nothing)  _
                            AndAlso (Me.MatchTableAdapterConnection(value.Connection) = false)) Then
                    Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                            "tring.")
                End If
                Me._tbl_Moshakhasat_Zamin2TableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property Tbl_Amlak_MostaghelatTableAdapter() As Tbl_Amlak_MostaghelatTableAdapter
            Get
                Return Me._tbl_Amlak_MostaghelatTableAdapter
            End Get
            Set
                If ((Not (Me._tbl_Amlak_MostaghelatTableAdapter) Is Nothing)  _
                            AndAlso (Me.TableAdapterInstanceCount = 1)) Then
                    Me._tbl_Amlak_MostaghelatTableAdapter = value
                    Return
                End If
                If ((Not (value) Is Nothing)  _
                            AndAlso (Me.MatchTableAdapterConnection(value.Connection) = false)) Then
                    Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                            "tring.")
                End If
                Me._tbl_Amlak_MostaghelatTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property Tbl_Moshakhasat_SakhtemanTableAdapter() As Tbl_Moshakhasat_SakhtemanTableAdapter
            Get
                Return Me._tbl_Moshakhasat_SakhtemanTableAdapter
            End Get
            Set
                If ((Not (Me._tbl_Moshakhasat_SakhtemanTableAdapter) Is Nothing)  _
                            AndAlso (Me.TableAdapterInstanceCount = 1)) Then
                    Me._tbl_Moshakhasat_SakhtemanTableAdapter = value
                    Return
                End If
                If ((Not (value) Is Nothing)  _
                            AndAlso (Me.MatchTableAdapterConnection(value.Connection) = false)) Then
                    Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                            "tring.")
                End If
                Me._tbl_Moshakhasat_SakhtemanTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._dFNsTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._dFNsTableAdapter.Connection) Is Nothing)) Then
                    Return Me._dFNsTableAdapter.Connection
                End If
                If ((Not (Me._tbl_Moshakhasat_ZaminTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tbl_Moshakhasat_ZaminTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tbl_Moshakhasat_ZaminTableAdapter.Connection
                End If
                If ((Not (Me._tblDFN_GheymatTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tblDFN_GheymatTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tblDFN_GheymatTableAdapter.Connection
                End If
                If ((Not (Me._tblDFN_BlockTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tblDFN_BlockTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tblDFN_BlockTableAdapter.Connection
                End If
                If ((Not (Me._tblDFN_SALTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tblDFN_SALTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tblDFN_SALTableAdapter.Connection
                End If
                If ((Not (Me._tbl_Moshakhasat_MalekinTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tbl_Moshakhasat_MalekinTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tbl_Moshakhasat_MalekinTableAdapter.Connection
                End If
                If ((Not (Me._tbl_Mahiyat_FizikiTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tbl_Mahiyat_FizikiTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tbl_Mahiyat_FizikiTableAdapter.Connection
                End If
                If ((Not (Me._tbl_No_EstefadehTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tbl_No_EstefadehTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tbl_No_EstefadehTableAdapter.Connection
                End If
                If ((Not (Me._tAmlakTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tAmlakTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tAmlakTableAdapter.Connection
                End If
                If ((Not (Me._tbl_Moshakhasat_Zamin1TableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tbl_Moshakhasat_Zamin1TableAdapter.Connection) Is Nothing)) Then
                    Return Me._tbl_Moshakhasat_Zamin1TableAdapter.Connection
                End If
                If ((Not (Me._tbl_Moshakhasat_Zamin2TableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tbl_Moshakhasat_Zamin2TableAdapter.Connection) Is Nothing)) Then
                    Return Me._tbl_Moshakhasat_Zamin2TableAdapter.Connection
                End If
                If ((Not (Me._tbl_Amlak_MostaghelatTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tbl_Amlak_MostaghelatTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tbl_Amlak_MostaghelatTableAdapter.Connection
                End If
                If ((Not (Me._tbl_Moshakhasat_SakhtemanTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tbl_Moshakhasat_SakhtemanTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tbl_Moshakhasat_SakhtemanTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._dFNsTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tbl_Moshakhasat_ZaminTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tblDFN_GheymatTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tblDFN_BlockTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tblDFN_SALTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tbl_Moshakhasat_MalekinTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tbl_Mahiyat_FizikiTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tbl_No_EstefadehTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tAmlakTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tbl_Moshakhasat_Zamin1TableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tbl_Moshakhasat_Zamin2TableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tbl_Amlak_MostaghelatTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tbl_Moshakhasat_SakhtemanTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As DB_NoSaziDataSet, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._tAmlakTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.TAmlak.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tAmlakTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tbl_No_EstefadehTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.Tbl_No_Estefadeh.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tbl_No_EstefadehTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tbl_Moshakhasat_Zamin2TableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.Tbl_Moshakhasat_Zamin2.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tbl_Moshakhasat_Zamin2TableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tbl_Moshakhasat_Zamin1TableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.Tbl_Moshakhasat_Zamin1.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tbl_Moshakhasat_Zamin1TableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tbl_Amlak_MostaghelatTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.Tbl_Amlak_Mostaghelat.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tbl_Amlak_MostaghelatTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tbl_Moshakhasat_SakhtemanTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.Tbl_Moshakhasat_Sakhteman.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tbl_Moshakhasat_SakhtemanTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tblDFN_SALTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.TblDFN_SAL.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tblDFN_SALTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tbl_Moshakhasat_ZaminTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.Tbl_Moshakhasat_Zamin.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tbl_Moshakhasat_ZaminTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._dFNsTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.DFNs.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._dFNsTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tblDFN_BlockTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.TblDFN_Block.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tblDFN_BlockTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tblDFN_GheymatTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.TblDFN_Gheymat.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tblDFN_GheymatTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tbl_Moshakhasat_MalekinTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.Tbl_Moshakhasat_Malekin.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tbl_Moshakhasat_MalekinTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tbl_Mahiyat_FizikiTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.Tbl_Mahiyat_Fiziki.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tbl_Mahiyat_FizikiTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Function UpdateInsertedRows(ByVal dataSet As DB_NoSaziDataSet, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._tAmlakTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.TAmlak.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tAmlakTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tbl_No_EstefadehTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.Tbl_No_Estefadeh.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tbl_No_EstefadehTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tbl_Moshakhasat_Zamin2TableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.Tbl_Moshakhasat_Zamin2.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tbl_Moshakhasat_Zamin2TableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tbl_Moshakhasat_Zamin1TableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.Tbl_Moshakhasat_Zamin1.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tbl_Moshakhasat_Zamin1TableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tbl_Amlak_MostaghelatTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.Tbl_Amlak_Mostaghelat.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tbl_Amlak_MostaghelatTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tbl_Moshakhasat_SakhtemanTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.Tbl_Moshakhasat_Sakhteman.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tbl_Moshakhasat_SakhtemanTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tblDFN_SALTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.TblDFN_SAL.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tblDFN_SALTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tbl_Moshakhasat_ZaminTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.Tbl_Moshakhasat_Zamin.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tbl_Moshakhasat_ZaminTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._dFNsTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.DFNs.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._dFNsTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tblDFN_BlockTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.TblDFN_Block.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tblDFN_BlockTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tblDFN_GheymatTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.TblDFN_Gheymat.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tblDFN_GheymatTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tbl_Moshakhasat_MalekinTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.Tbl_Moshakhasat_Malekin.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tbl_Moshakhasat_MalekinTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tbl_Mahiyat_FizikiTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.Tbl_Mahiyat_Fiziki.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tbl_Mahiyat_FizikiTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Function UpdateDeletedRows(ByVal dataSet As DB_NoSaziDataSet, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._tbl_Mahiyat_FizikiTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.Tbl_Mahiyat_Fiziki.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tbl_Mahiyat_FizikiTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tbl_Moshakhasat_MalekinTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.Tbl_Moshakhasat_Malekin.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tbl_Moshakhasat_MalekinTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tblDFN_GheymatTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.TblDFN_Gheymat.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tblDFN_GheymatTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tblDFN_BlockTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.TblDFN_Block.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tblDFN_BlockTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._dFNsTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.DFNs.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._dFNsTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tbl_Moshakhasat_ZaminTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.Tbl_Moshakhasat_Zamin.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tbl_Moshakhasat_ZaminTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tblDFN_SALTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.TblDFN_SAL.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tblDFN_SALTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tbl_Moshakhasat_SakhtemanTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.Tbl_Moshakhasat_Sakhteman.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tbl_Moshakhasat_SakhtemanTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tbl_Amlak_MostaghelatTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.Tbl_Amlak_Mostaghelat.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tbl_Amlak_MostaghelatTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tbl_Moshakhasat_Zamin1TableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.Tbl_Moshakhasat_Zamin1.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tbl_Moshakhasat_Zamin1TableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tbl_Moshakhasat_Zamin2TableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.Tbl_Moshakhasat_Zamin2.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tbl_Moshakhasat_Zamin2TableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tbl_No_EstefadehTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.Tbl_No_Estefadeh.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tbl_No_EstefadehTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tAmlakTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.TAmlak.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tAmlakTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function UpdateAll(ByVal dataSet As DB_NoSaziDataSet) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Closed)  _
                        = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._dFNsTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._dFNsTableAdapter, Me._dFNsTableAdapter.Connection)
                    Me._dFNsTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._dFNsTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._dFNsTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._dFNsTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._dFNsTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tbl_Moshakhasat_ZaminTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tbl_Moshakhasat_ZaminTableAdapter, Me._tbl_Moshakhasat_ZaminTableAdapter.Connection)
                    Me._tbl_Moshakhasat_ZaminTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tbl_Moshakhasat_ZaminTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tbl_Moshakhasat_ZaminTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tbl_Moshakhasat_ZaminTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tbl_Moshakhasat_ZaminTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tblDFN_GheymatTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tblDFN_GheymatTableAdapter, Me._tblDFN_GheymatTableAdapter.Connection)
                    Me._tblDFN_GheymatTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tblDFN_GheymatTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tblDFN_GheymatTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tblDFN_GheymatTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tblDFN_GheymatTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tblDFN_BlockTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tblDFN_BlockTableAdapter, Me._tblDFN_BlockTableAdapter.Connection)
                    Me._tblDFN_BlockTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tblDFN_BlockTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tblDFN_BlockTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tblDFN_BlockTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tblDFN_BlockTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tblDFN_SALTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tblDFN_SALTableAdapter, Me._tblDFN_SALTableAdapter.Connection)
                    Me._tblDFN_SALTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tblDFN_SALTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tblDFN_SALTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tblDFN_SALTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tblDFN_SALTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tbl_Moshakhasat_MalekinTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tbl_Moshakhasat_MalekinTableAdapter, Me._tbl_Moshakhasat_MalekinTableAdapter.Connection)
                    Me._tbl_Moshakhasat_MalekinTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tbl_Moshakhasat_MalekinTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tbl_Moshakhasat_MalekinTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tbl_Moshakhasat_MalekinTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tbl_Moshakhasat_MalekinTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tbl_Mahiyat_FizikiTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tbl_Mahiyat_FizikiTableAdapter, Me._tbl_Mahiyat_FizikiTableAdapter.Connection)
                    Me._tbl_Mahiyat_FizikiTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tbl_Mahiyat_FizikiTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tbl_Mahiyat_FizikiTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tbl_Mahiyat_FizikiTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tbl_Mahiyat_FizikiTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tbl_No_EstefadehTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tbl_No_EstefadehTableAdapter, Me._tbl_No_EstefadehTableAdapter.Connection)
                    Me._tbl_No_EstefadehTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tbl_No_EstefadehTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tbl_No_EstefadehTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tbl_No_EstefadehTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tbl_No_EstefadehTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tAmlakTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tAmlakTableAdapter, Me._tAmlakTableAdapter.Connection)
                    Me._tAmlakTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tAmlakTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tAmlakTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tAmlakTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tAmlakTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tbl_Moshakhasat_Zamin1TableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tbl_Moshakhasat_Zamin1TableAdapter, Me._tbl_Moshakhasat_Zamin1TableAdapter.Connection)
                    Me._tbl_Moshakhasat_Zamin1TableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tbl_Moshakhasat_Zamin1TableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tbl_Moshakhasat_Zamin1TableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tbl_Moshakhasat_Zamin1TableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tbl_Moshakhasat_Zamin1TableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tbl_Moshakhasat_Zamin2TableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tbl_Moshakhasat_Zamin2TableAdapter, Me._tbl_Moshakhasat_Zamin2TableAdapter.Connection)
                    Me._tbl_Moshakhasat_Zamin2TableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tbl_Moshakhasat_Zamin2TableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tbl_Moshakhasat_Zamin2TableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tbl_Moshakhasat_Zamin2TableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tbl_Moshakhasat_Zamin2TableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tbl_Amlak_MostaghelatTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tbl_Amlak_MostaghelatTableAdapter, Me._tbl_Amlak_MostaghelatTableAdapter.Connection)
                    Me._tbl_Amlak_MostaghelatTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tbl_Amlak_MostaghelatTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tbl_Amlak_MostaghelatTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tbl_Amlak_MostaghelatTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tbl_Amlak_MostaghelatTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tbl_Moshakhasat_SakhtemanTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tbl_Moshakhasat_SakhtemanTableAdapter, Me._tbl_Moshakhasat_SakhtemanTableAdapter.Connection)
                    Me._tbl_Moshakhasat_SakhtemanTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tbl_Moshakhasat_SakhtemanTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tbl_Moshakhasat_SakhtemanTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tbl_Moshakhasat_SakhtemanTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tbl_Moshakhasat_SakhtemanTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._dFNsTableAdapter) Is Nothing) Then
                    Me._dFNsTableAdapter.Connection = CType(revertConnections(Me._dFNsTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._dFNsTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tbl_Moshakhasat_ZaminTableAdapter) Is Nothing) Then
                    Me._tbl_Moshakhasat_ZaminTableAdapter.Connection = CType(revertConnections(Me._tbl_Moshakhasat_ZaminTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tbl_Moshakhasat_ZaminTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tblDFN_GheymatTableAdapter) Is Nothing) Then
                    Me._tblDFN_GheymatTableAdapter.Connection = CType(revertConnections(Me._tblDFN_GheymatTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tblDFN_GheymatTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tblDFN_BlockTableAdapter) Is Nothing) Then
                    Me._tblDFN_BlockTableAdapter.Connection = CType(revertConnections(Me._tblDFN_BlockTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tblDFN_BlockTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tblDFN_SALTableAdapter) Is Nothing) Then
                    Me._tblDFN_SALTableAdapter.Connection = CType(revertConnections(Me._tblDFN_SALTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tblDFN_SALTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tbl_Moshakhasat_MalekinTableAdapter) Is Nothing) Then
                    Me._tbl_Moshakhasat_MalekinTableAdapter.Connection = CType(revertConnections(Me._tbl_Moshakhasat_MalekinTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tbl_Moshakhasat_MalekinTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tbl_Mahiyat_FizikiTableAdapter) Is Nothing) Then
                    Me._tbl_Mahiyat_FizikiTableAdapter.Connection = CType(revertConnections(Me._tbl_Mahiyat_FizikiTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tbl_Mahiyat_FizikiTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tbl_No_EstefadehTableAdapter) Is Nothing) Then
                    Me._tbl_No_EstefadehTableAdapter.Connection = CType(revertConnections(Me._tbl_No_EstefadehTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tbl_No_EstefadehTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tAmlakTableAdapter) Is Nothing) Then
                    Me._tAmlakTableAdapter.Connection = CType(revertConnections(Me._tAmlakTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tAmlakTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tbl_Moshakhasat_Zamin1TableAdapter) Is Nothing) Then
                    Me._tbl_Moshakhasat_Zamin1TableAdapter.Connection = CType(revertConnections(Me._tbl_Moshakhasat_Zamin1TableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tbl_Moshakhasat_Zamin1TableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tbl_Moshakhasat_Zamin2TableAdapter) Is Nothing) Then
                    Me._tbl_Moshakhasat_Zamin2TableAdapter.Connection = CType(revertConnections(Me._tbl_Moshakhasat_Zamin2TableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tbl_Moshakhasat_Zamin2TableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tbl_Amlak_MostaghelatTableAdapter) Is Nothing) Then
                    Me._tbl_Amlak_MostaghelatTableAdapter.Connection = CType(revertConnections(Me._tbl_Amlak_MostaghelatTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tbl_Amlak_MostaghelatTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tbl_Moshakhasat_SakhtemanTableAdapter) Is Nothing) Then
                    Me._tbl_Moshakhasat_SakhtemanTableAdapter.Connection = CType(revertConnections(Me._tbl_Moshakhasat_SakhtemanTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tbl_Moshakhasat_SakhtemanTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
            Private Function IsChildAndParent(ByVal child As Global.System.Data.DataRow, ByVal parent As Global.System.Data.DataRow) As Boolean
                Global.System.Diagnostics.Debug.Assert((Not (child) Is Nothing))
                Global.System.Diagnostics.Debug.Assert((Not (parent) Is Nothing))
                Dim newParent As Global.System.Data.DataRow = child.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (newParent) Is Nothing)  _
                            AndAlso ((Object.ReferenceEquals(newParent, child) = false)  _
                            AndAlso (Object.ReferenceEquals(newParent, parent) = false)))
                    newParent = newParent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop
                If (newParent Is Nothing) Then
                    newParent = child.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)
                    Do While ((Not (newParent) Is Nothing)  _
                                AndAlso ((Object.ReferenceEquals(newParent, child) = false)  _
                                AndAlso (Object.ReferenceEquals(newParent, parent) = false)))
                        newParent = newParent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If
                If Object.ReferenceEquals(newParent, parent) Then
                    Return true
                End If
                Return false
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                'Is row1 the child or grandchild of row2
                If Me.IsChildAndParent(row1, row2) Then
                    Return Me._childFirst
                End If

                'Is row2 the child or grandchild of row1
                If Me.IsChildAndParent(row2, row1) Then
                    Return (-1 * Me._childFirst)
                End If
                Return 0
            End Function
        End Class
    End Class
End Namespace
